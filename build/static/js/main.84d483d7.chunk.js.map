{"version":3,"sources":["redux/actions/loginActions.js","redux/reducers/login/errors.reducer.js","redux/reducers/login/loginMode.reducer.js","redux/reducers/login/user.reducer.js","redux/actions/userActions.js","redux/reducers/shooters.reducer.js","redux/reducers/traps.reducer.js","redux/reducers/events.reducer.js","redux/reducers/squaddingData.reducer.js","redux/reducers/schedulingData.reducer.js","redux/reducers/selectedTrap.reducer.js","redux/reducers/currentRound.reducer.js","redux/reducers/index.js","redux/sagas/login/login.saga.js","redux/sagas/login/registration.saga.js","redux/sagas/login/user.saga.js","redux/sagas/shooters.saga.js","redux/sagas/events.saga.js","redux/sagas/traps.saga.js","redux/sagas/squaddingData.saga.js","redux/sagas/schedulingData.saga.js","redux/sagas/selectedTrap.saga.js","redux/sagas/goToRegistrationPage.saga.js","redux/sagas/submitScores.saga.js","redux/sagas/index.js","components/LoginPage/LoginPage.js","components/RegisterPage/RegisterPage.js","components/ProtectedRoute/ProtectedRoute.js","components/NavSpacer/NavSpacer.js","components/NavTop/NavTop.js","components/NavSide/NavSide.js","components/NavSideHeader/NavSideHeader.js","navigationRoutes.js","components/NavList/NavList.js","components/NavSideBottom/NavSideBottom.js","components/NavSideBottomActions/NavSideBottomActions.js","components/Nav/Nav.js","components/ViewAdminEditCompetition/ViewAdminEditCompetition.js","components/ViewAdminSelectCompetition/ViewAdminSelectCompetition.js","components/ViewEditShooter/ViewEditShooter.js","components/ViewCompetitionRoster/ViewCompetitionRoster.js","components/ResultsDetail/ResultsDetail.js","components/ViewResults/ViewResults.js","modules/dragAndDrop.strategy.js","components/HeaderMargins/HeaderMargins.js","components/EventSelect/EventSelect.js","components/DndPage/DndPage.js","components/DndLeftSide/DndLeftSide.js","components/DndRightSide/DndRightSide.js","components/DndCard/DndCard.js","components/DndEditModal/DndEditModal.js","components/DndItem/DndItem.js","components/DndList/DndList.js","components/DndAddButton/DndAddButton.js","components/ViewSquadding/ViewSquadding.js","components/ViewScheduling/ViewScheduling.js","components/ScoringItem/ScoringItem.js","components/ScoringAdvanceButton/ScoringAdvanceButton.js","components/ViewScoring/ViewScoring.js","components/ViewTrapSelection/TrapSelection.js","components/ViewShooterRegistration/ViewShooterRegistration.js","components/App/App.js","index.js"],"names":["LOGIN_ACTIONS","LOGIN","LOGOUT","REGISTER","CLEAR_LOGIN_ERROR","LOGIN_INPUT_ERROR","LOGIN_FAILED","LOGIN_FAILED_NO_CODE","CLEAR_REGISTRATION_ERROR","REGISTRATION_INPUT_ERROR","REGISTRATION_FAILED","SET_TO_LOGIN_MODE","SET_TO_REGISTER_MODE","FETCH_USER","SET_USER","UNSET_USER","combineReducers","loginMessage","state","arguments","length","undefined","type","registrationMessage","loginMode","userReducer","action","payload","USER_ACTIONS","FETCH_RESULTS","SET_RESULTS","FETCH_EVENTS","SET_EVENTS","FETCH_SCHEDULING_DATA","SET_SCHEDULING_DATA","SET_CURRENT_ROUND","FETCH_SELECTED_TRAP","SET_SELECTED_TRAP","SET_SHOT","SUBMIT_SCORES","FETCH_SHOOTERS","SET_SHOOTERS","FETCH_SQUADDING_DATA","SET_SQUADDING_DATA","FETCH_TRAPS","SET_TRAPS","GO_TO_REGISTRATION_PAGE","shootersReducer","trapsReducer","eventsReducer","squaddingDataReducer","schedulingDataReducer","defaultState","squad_trap","current_rotation","shooters","shots","selectedTrapReducer","tempShooters","Object","toConsumableArray","index","round","score","objectSpread","currentRoundReducer","rootReducer","errors","user","traps","events","squaddingData","schedulingData","selectedTrap","currentRound","loginUser","logoutUser","loginSaga","config","regenerator_default","a","wrap","_context","prev","next","put","headers","Content-Type","withCredentials","axios","post","t0","console","log","response","status","stop","_marked","this","_context2","_marked2","_context3","takeLatest","_marked3","registerUser","registrationSaga","registration_saga_marked","registration_saga_marked2","fetchUser","userSaga","get","sent","data","user_saga_marked","user_saga_marked2","fetchShooters","shootersSaga","sagaName","shooters_saga_marked","shooters_saga_marked2","fetchEvents","eventsSaga","events_saga_marked","events_saga_marked2","fetchTraps","trapsSaga","traps_saga_marked","traps_saga_marked2","fetchSquaddingData","squaddingDataSaga","squaddingData_saga_marked","squaddingData_saga_marked2","fetchSchedulingData","schedulingDataSaga","schedulingData_saga_marked","schedulingData_saga_marked2","fetchSelectedTrap","selectedTrapSaga","params","id","selectedTrap_saga_marked","selectedTrap_saga_marked2","goToRegistrationPage","goToRegistrationPageSaga","secretUrl","competitionId","secret_url","push","concat","goToRegistrationPage_saga_marked","goToRegistrationPage_saga_marked2","submitScores","submitScoresSaga","trap","submitScores_saga_marked","submitScores_saga_marked2","rootSaga","all","sagas_marked","LoginPage","username","password","login","event","preventDefault","toast","_this","props","dispatch","handleInputChangeFor","propertyName","setState","defineProperty","target","value","_this2","classes","react_default","createElement","className","role","index_es","loginCard","onSubmit","htmlFor","placeholder","name","onChange","icons_index_es","onClick","variant","loginButton","Component","withStyles","theme","fontFamily","marginTop","paddingBottom","width","paddingTop","display","overflow","flexDirection","margin","marginBottom","connect","RegisterPage","background","adminRegister","registerButton","_ref","ComponentToShow","ComponentToProtect","component","otherProps","objectWithoutProperties","Route","assign","root","flexGrow","spacing","unit","grow","menuButton","marginLeft","marginRight","NavSpacer","position","color","openDrawer","aria-label","Menu_default","NavSide","Fragment","SwipeableDrawer_default","open","onClose","setDrawer","onOpen","children","userDetail","padding","contestDetail","paddingLeft","list","homeRoute","button","navigateTo","primary","left","bottom","NavSideBottomActions","toRegistrationPage","ExitToApp_default","logout","Nav","sidenavOpen","destination","history","components_NavTop_NavTop","components_NavSide_NavSide","components_NavSideHeader_NavSideHeader","components_NavList_NavList","components_NavSideBottom_NavSideBottom","components_NavSideBottomActions_NavSideBottomActions","withRouter","container","flexWrap","textField","dense","paper","top","transform","minWidth","maxWidth","maxHeight","overflowY","backgroundColor","palette","boxShadow","shadows","headerSpacer","handleClose","onBackdropClick","onEscapeKeyDown","competitionToEdit","process","REACT_APP_ROOT_URL","toLowerCase","split","join","defaultPassword","handleEditChangeFor","newPassword","location","react_datepicker_es","selected","date","handleDateChange","editCompetition","deleteCompetition","ViewAdminSelectCompetition","modalOpen","competitions","newCompetitionName","moment","addCompetition","alert","method","url","then","catch","error","getCompetitions","newCompetitions","map","competition","stageEdit","selectedCompetition","handleOpen","body","competitionIdToDelete","handleChangeFor","handleLogOut","comp","key","editButton","label","components_ViewAdminEditCompetition_ViewAdminEditCompetition","compose","borderStyle","fontSize","ViewEditShooter","initialState","first_name","last_name","email","handicap","phone","ata_number","clearEdit","prevProps","selectedShooter","editform","editHeader","updateUser","deleteShooter","field","float","saveButton","height","CompetitionRoster","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","editShooter","getShooters","onFilterChange","input","_this3","filter","shooter","includes","Edit_default","components_ViewEditShooter_ViewEditShooter","roster","scrollable","header","searchField","scoreContainer","alignItems","justifyContent","borderRadius","lineHeight","hit","boxScore","ViewResults","page","indexOfSelectedEvent","resultsShouldPaginate","resultsData","finishedLoading","totalPages","pageSize","tableRef","fetchCSV","fileDownload","toggleNextEvent","incrementPage","togglePagination","selectEvent","Math","ceil","results","paginate","fetchResultsData","setInterval","columns","Header","accessor","Cell","row","indexOf","original","style","total_shots","transition","textAlign","optionsContainer","control","lab_index_es","exclusive","ev","react_table_es","getProps","pageSizeOptions","onPageChange","pageIndex","SubComponent","scoreSlices","i","raw_scores","slice","scoreDetailContainer","boxScoreContainer","components_ResultsDetail_ResultsDetail","totalScore","total_hits","paddingRight","reorder","startIndex","endIndex","result","Array","from","_result$splice","splice","removed","slicedToArray","move","source","droppableSource","droppableDestination","sourceClone","destClone","_sourceClone$splice","headerMargins","selectBox","selectedEvent","setEvent","leftSide","rightSide","card","cardNoMargin","title","raised","noMargin","cornerButton","cardActions","DndEditModal","handleChange","handleSubmit","edit","handleDelete","delete","modalPositioning","components_DndCard_DndCard","Delete_default","upperRightButton","avatar","main","avatarBox","secondary","item","react_beautiful_dnd_esm","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","disableGutters","box","mainText","dndContainer","minHeight","disablePadding","subheader","droppableId","components_DndItem_DndItem","right","Add_default","ViewSquadding","unassigned","squads","members","getEvents","_callee","getData","sendData","getList","Number","onDragEnd","newItems","addSquad","editSquad","squadId","newName","deleteSquad","components_DndPage_DndPage","components_DndLeftSide_DndLeftSide","components_HeaderMargins_HeaderMargins","components_EventSelect_EventSelect","components_DndList_DndList","components_DndRightSide_DndRightSide","squad","components_DndEditModal_DndEditModal","toString","components_DndAddButton_DndAddButton","ViewScheduling","schedule","addTrap","editTrap","trapId","deleteTrap","box_number","buttons","textOverflow","disableTypography","reduce","sumOfShots","currentShot","ToggleButtonGroup_default","setScore","ToggleButton_default","spacer","centerButtonFixed","centerButtonRelative","shotsThisRound","sum","current","shotsThisRotation","shotsSum","size","disabled","nextRound","Scoring","selectedRound","ToggleButton","NextRoundButton","selectRound","POSITION","TOP_CENTER","bigContainer","align","dividerTwo","toggleContainer","headersTwo","dividerOne","components_ScoringItem_ScoringItem","shooter_id","components_ScoringAdvanceButton_ScoringAdvanceButton","Scores","backfaceVisibility","border","reduxState","TrapSelection","isVisible","counter","_objectSpread2","displayItem","headerFour","Traps","ViewShooterRegistration","tryToGetCompetition","toTry","match","hash","registerShooter","handleChangeCheckBox","checked","indexOfCheckedItem","findIndex","parseInt","registerCard","min","max","eventList","zIndex","listStyle","verticalAlign","createMuiTheme","typography","useNextVariants","App","HashRouter","styles","components_Nav_Nav","Switch","Redirect","exact","to","components_ProtectedRoute_ProtectedRoute","path","ViewAdminEditCompetition","ViewCompetitionRoster","render","lib","TOP_RIGHT","toastClassName","darkToast","Slide","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnVisibilityChange","draggable","pauseOnHover","sagaMiddleware","createSagaMiddleware","middlewareList","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","apply","run","ReactDOM","react_redux_es","components_App_App","document","getElementById"],"mappings":"wMAAaA,WAAgB,CAC3BC,MAAO,QACPC,OAAQ,SACRC,SAAU,WACVC,kBAAmB,oBACnBC,kBAAmB,oBACnBC,aAAc,eACdC,qBAAsB,uBACtBC,yBAA0B,2BAC1BC,yBAA0B,2BAC1BC,oBAAqB,sBACrBC,kBAAmB,oBACnBC,qBAAsB,uBACtBC,WAAY,aACZC,SAAU,WACVC,WAAY,eCuBCC,cAAgB,CAC7BC,aAlCmB,WAAwB,IAAvBC,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAC5B,QAD2CA,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAC5BC,MACb,KAAKtB,EAAcI,kBACjB,MAAO,GACT,KAAKJ,EAAcK,kBACjB,MAAO,oCACT,KAAKL,EAAcM,aACjB,MAAO,2DACT,KAAKN,EAAcO,qBACjB,MAAO,qDACT,QACE,OAAOW,IAwBXK,oBAlB0B,WAAwB,IAAvBL,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GACnC,QADkDA,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GACnCC,MACb,KAAKtB,EAAcQ,yBACjB,MAAO,GACT,KAAKR,EAAcS,yBACjB,MAAO,kCACT,KAAKT,EAAcU,oBACjB,MAAO,0EACT,QACE,OAAOQ,MChBIM,EAbC,WAA6B,IAA5BN,EAA4BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAApB,QACvB,QAD2CA,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAC5BC,MACb,KAAKtB,EAAcW,kBACjB,MAAO,QACT,KAAKX,EAAcY,qBACjB,MAAO,WACT,QACE,OAAOM,ICMAO,EAbK,WAAwB,IAAvBP,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIO,EAAWP,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC1C,OAAQK,EAAOJ,MACb,KAAKtB,EAAcc,SACjB,OAAOY,EAAOC,QAChB,KAAM3B,EAAce,WAClB,MAAO,GACT,QACE,OAAOG,ICTAU,EAAe,CAC1BC,cAAe,gBACfC,YAAa,cACbC,aAAc,eACdC,WAAY,aACZC,sBAAuB,wBACvBC,oBAAqB,sBACrBC,kBAAmB,oBACnBC,oBAAqB,sBACrBC,kBAAkB,oBAClBC,SAAU,WACVC,cAAe,gBACfC,eAAgB,iBAChBC,aAAc,eACdC,qBAAsB,uBACtBC,mBAAoB,qBACpBC,YAAa,cACbC,UAAW,YACXC,wBAAyB,0BACzB5C,OAAQ,UCPK6C,EAVS,WAAwB,IAAvB7B,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIO,EAAWP,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC9C,OAAQK,EAAOJ,MACb,KAAKM,EAAaa,aAChB,OAAOf,EAAOC,QAChB,QACE,OAAOT,ICIE8B,EATM,WAAwB,IAAvB9B,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIO,EAAWP,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3C,OAAQK,EAAOJ,MACb,KAAKM,EAAaiB,UAChB,OAAOnB,EAAOC,QAChB,QACE,OAAOT,ICIE+B,EATO,WAAwB,IAAvB/B,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIO,EAAWP,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC5C,OAAQK,EAAOJ,MACb,KAAKM,EAAaI,WAChB,OAAON,EAAOC,QAChB,QACE,OAAOT,ICIEgC,EATc,WAAwB,IAAvBhC,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIO,EAAWP,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnD,OAAQK,EAAOJ,MACb,KAAKM,EAAae,mBAChB,OAAOjB,EAAOC,QAChB,QACE,OAAOT,ICIEiC,EATe,WAAwB,IAAvBjC,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIO,EAAWP,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpD,OAAQK,EAAOJ,MACb,KAAKM,EAAaM,oBAChB,OAAOR,EAAOC,QAChB,QACE,OAAOT,oBCNPkC,EAAe,CACnBC,WAAY,CACVC,iBAAkB,GAEpBC,SAAU,CAAC,CAAEC,MAAO,CAAC,SAkBRC,EAfa,WAAkC,IAAjCvC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBiC,EAAc1B,EAAWP,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC5D,OAAQK,EAAOJ,MACb,KAAKM,EAAaS,kBAChB,OAAOX,EAAOC,QAChB,KAAKC,EAAaU,SAChB,IAAIoB,EAAYC,OAAAC,EAAA,EAAAD,CAAOzC,EAAMqC,UAG7B,OAFAG,EAAahC,EAAOC,QAAQkC,OAAOL,MAAM9B,EAAOC,QAAQmC,MAAQ,GAC9DpC,EAAOC,QAAQoC,MACVJ,OAAAK,EAAA,EAAAL,CAAA,GAAKzC,EAAZ,CAAmBqC,SAAUG,IAE/B,QACE,OAAOxC,ICRE+C,EATa,WAAuB,IAAtB/C,EAAsBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAd,EAAGO,EAAWP,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACjD,OAAQK,EAAOJ,MACb,KAAKM,EAAaO,kBAChB,OAAOT,EAAOC,QAChB,QACE,OAAOT,ICkBEgD,EAbKlD,YAAgB,CAClCmD,SACA3C,YACA4C,OACAb,WACAc,QACAC,SACAC,gBACAC,iBACAC,eACAC,qEChBQC,cAkCAC,cAuBAC,GAzDV,SAAUF,EAAUjD,GAApB,IAAAoD,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGI,OAHJF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGUC,YAAI,CAAE/D,KAAMtB,EAAcI,oBAHpC,OAaI,OARM0E,EAAS,CACbQ,QAAS,CAAEC,eAAgB,oBAC3BC,iBAAiB,GAPvBN,EAAAE,KAAA,EAaUK,IAAMC,KAAK,iBAAkBhE,EAAOC,QAASmD,GAbvD,OAiBI,OAjBJI,EAAAE,KAAA,EAiBUC,YAAI,CAAC/D,KAAMtB,EAAca,aAjBnC,OAAAqE,EAAAE,KAAA,oBAAAF,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,SAmBIU,QAAQC,IAAI,yBAAZX,EAAAS,IAC8B,MAA1BT,EAAAS,GAAMG,SAASC,OApBvB,CAAAb,EAAAE,KAAA,SAwBM,OAxBNF,EAAAE,KAAA,GAwBYC,YAAI,CAAE/D,KAAMtB,EAAcM,eAxBtC,QAAA4E,EAAAE,KAAA,iBA4BM,OA5BNF,EAAAE,KAAA,GA4BYC,YAAI,CAAE/D,KAAMtB,EAAcO,uBA5BtC,yBAAA2E,EAAAc,SAAAC,EAAAC,KAAA,UAkCA,SAAUtB,EAAWlD,GAArB,IAAAoD,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,OAWI,OAXJe,EAAAhB,KAAA,EAEUL,EAAS,CACbQ,QAAS,CAAEC,eAAgB,oBAC3BC,iBAAiB,GAJvBW,EAAAf,KAAA,EAWUK,IAAMC,KAAK,kBAAmBZ,GAXxC,OAgBI,OAhBJqB,EAAAf,KAAA,EAgBUC,YAAI,CAAE/D,KAAMtB,EAAce,aAhBpC,OAAAoF,EAAAf,KAAA,gBAAAe,EAAAhB,KAAA,EAAAgB,EAAAR,GAAAQ,EAAA,SAmBIP,QAAQC,IAAI,0BAAZM,EAAAR,IAnBJ,yBAAAQ,EAAAH,SAAAI,EAAAF,KAAA,SAuBA,SAAUrB,IAAV,OAAAE,EAAAC,EAAAC,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,OACE,OADFiB,EAAAjB,KAAA,EACQkB,YAAWtG,EAAcC,MAAO0E,GADxC,OAEE,OAFF0B,EAAAjB,KAAA,EAEQkB,YAAWtG,EAAcE,OAAQ0E,GAFzC,wBAAAyB,EAAAL,SAAAO,EAAAL,MAKerB,mBC9DL2B,cAoBAC,GApBV,SAAUD,EAAa9E,GAAvB,OAAAqD,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGI,OAHJF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGUC,YAAI,CAAE/D,KAAMtB,EAAcQ,2BAHpC,OAMI,OANJ0E,EAAAE,KAAA,EAMUK,IAAMC,KAAK,oBAAqBhE,EAAOC,SANjD,OASI,OATJuD,EAAAE,KAAA,EASUC,YAAI,CAAE/D,KAAMtB,EAAcC,MAAO0B,QAASD,EAAOC,UAT3D,OAaI,OAbJuD,EAAAE,KAAA,EAaUC,YAAI,CAAC/D,KAAMtB,EAAcW,oBAbnC,OAAAuE,EAAAE,KAAA,iBAgBM,OAhBNF,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,SAeMU,QAAQC,IAAI,gCAAZX,EAAAS,IAfNT,EAAAE,KAAA,GAgBYC,YAAI,CAAC/D,KAAMtB,EAAcU,sBAhBrC,yBAAAwE,EAAAc,SAAAU,EAAAR,KAAA,UAoBA,SAAUO,IAAV,OAAA1B,EAAAC,EAAAC,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,OACE,OADFe,EAAAf,KAAA,EACQkB,YAAWtG,EAAcG,SAAUqG,GAD3C,wBAAAL,EAAAH,SAAAW,EAAAT,MAIeO,mBCzBLG,cAsBAC,GAtBV,SAAUD,IAAV,IAAA9B,EAAAgB,EAAA,OAAAf,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAWqB,OAXrBF,EAAAC,KAAA,EAEUL,EAAS,CACbQ,QAAS,CAAEC,eAAgB,oBAC3BC,iBAAiB,GAJvBN,EAAAE,KAAA,EAW2BK,IAAMqB,IAAI,WAAYhC,GAXjD,OAgBI,OALMgB,EAXVZ,EAAA6B,KAAA7B,EAAAE,KAAA,EAgBUC,YAAI,CAAE/D,KAAMtB,EAAcc,SAAUa,QAASmE,EAASkB,OAhBhE,OAAA9B,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAkBIU,QAAQC,IAAI,0BAAZX,EAAAS,IAlBJ,yBAAAT,EAAAc,SAAAiB,EAAAf,KAAA,SAsBA,SAAUW,IAAV,OAAA9B,EAAAC,EAAAC,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,OACE,OADFe,EAAAf,KAAA,EACQkB,YAAYtG,EAAca,WAAY+F,GAD9C,wBAAAT,EAAAH,SAAAkB,EAAAhB,MAIeW,mBCzBLM,cAUAC,GAZJC,EAAW,eAEjB,SAAUF,IAAV,IAAArB,EAAA,OAAAf,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEqB,OAFrBF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAE2BK,IAAMqB,IAAI,4BAFrC,OAII,OAFMhB,EAFVZ,EAAA6B,KAAA7B,EAAAE,KAAA,EAIUC,YAAI,CAAE/D,KAAMM,EAAaa,aAAcd,QAASmE,EAASkB,OAJnE,OAAA9B,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAMIU,QAAQC,IAAI,WAAYwB,EAAU,IAAlCnC,EAAAS,IANJ,yBAAAT,EAAAc,SAAAsB,EAAApB,KAAA,SAUA,SAAUkB,IAAV,OAAArC,EAAAC,EAAAC,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,OACE,OADFe,EAAAf,KAAA,EACQkB,YAAW1E,EAAaY,eAAgB2E,GADhD,wBAAAhB,EAAAH,SAAAuB,EAAArB,MAIekB,oBCdLI,gBAUAC,IAZJJ,GAAW,aAEjB,SAAUG,KAAV,IAAA1B,EAAA,OAAAf,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEqB,OAFrBF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAE2BK,IAAMqB,IAAI,yBAFrC,OAII,OAFMhB,EAFVZ,EAAA6B,KAAA7B,EAAAE,KAAA,EAIUC,YAAI,CAAE/D,KAAMM,EAAaI,WAAYL,QAASmE,EAASkB,OAJjE,OAAA9B,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAMIU,QAAQC,IAAI,WAAYwB,GAAU,IAAlCnC,EAAAS,IANJ,yBAAAT,EAAAc,SAAA0B,GAAAxB,KAAA,SAUA,SAAUuB,KAAV,OAAA1C,EAAAC,EAAAC,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,OACE,OADFe,EAAAf,KAAA,EACQkB,YAAW1E,EAAaG,aAAcyF,IAD9C,wBAAArB,EAAAH,SAAA2B,GAAAzB,MAIeuB,sBCbLG,gBAaAC,IAfJR,GAAW,YAEjB,SAAUO,KAAV,IAAA9B,EAAA,OAAAf,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAKqB,OALrBF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAK2BK,IAAMqB,IAAI,wBALrC,OAOI,OAFMhB,EALVZ,EAAA6B,KAAA7B,EAAAE,KAAA,EAOUC,YAAI,CAAE/D,KAAMM,EAAaiB,UAAWlB,QAASmE,EAASkB,OAPhE,OAAA9B,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SASIU,QAAQC,IAAI,WAAYwB,GAAU,IAAlCnC,EAAAS,IATJ,yBAAAT,EAAAc,SAAA8B,GAAA5B,KAAA,SAaA,SAAU2B,KAAV,OAAA9C,EAAAC,EAAAC,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,OACE,OADFe,EAAAf,KAAA,EACQkB,YAAW1E,EAAagB,YAAagF,IAD7C,wBAAAzB,EAAAH,SAAA+B,GAAA7B,MAIe2B,sBClBLG,gBAUAC,IAZJZ,GAAW,oBAEjB,SAAUW,KAAV,IAAAlC,EAAA,OAAAf,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEqB,OAFrBF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAE2BK,IAAMqB,IAAI,6BAFrC,OAII,OAFMhB,EAFVZ,EAAA6B,KAAA7B,EAAAE,KAAA,EAIUC,YAAI,CAAE/D,KAAMM,EAAae,mBAAoBhB,QAASmE,EAASkB,OAJzE,OAAA9B,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAMIU,QAAQC,IAAI,WAAYwB,GAAU,IAAlCnC,EAAAS,IANJ,yBAAAT,EAAAc,SAAAkC,GAAAhC,KAAA,SAUA,SAAU+B,KAAV,OAAAlD,EAAAC,EAAAC,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,OACE,OADFe,EAAAf,KAAA,EACQkB,YAAW1E,EAAac,qBAAsBsF,IADtD,wBAAA7B,EAAAH,SAAAmC,GAAAjC,MAIe+B,sBCdLG,gBAUAC,IAZJhB,GAAW,qBAEjB,SAAUe,KAAV,IAAAtC,EAAA,OAAAf,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEqB,OAFrBF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAE2BK,IAAMqB,IAAI,8BAFrC,OAII,OAFMhB,EAFVZ,EAAA6B,KAAA7B,EAAAE,KAAA,EAIUC,YAAI,CAAE/D,KAAMM,EAAaM,oBAAqBP,QAASmE,EAASkB,OAJ1E,OAAA9B,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAMIU,QAAQC,IAAI,WAAYwB,GAAU,IAAlCnC,EAAAS,IANJ,yBAAAT,EAAAc,SAAAsC,GAAApC,KAAA,SAUA,SAAUmC,KAAV,OAAAtD,EAAAC,EAAAC,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,OACE,OADFe,EAAAf,KAAA,EACQkB,YAAW1E,EAAaK,sBAAuBmG,IADvD,wBAAAjC,EAAAH,SAAAuC,GAAArC,MAIemC,sBCbLG,gBAUAC,IAZJpB,GAAW,mBAEjB,SAAUmB,GAAkB9G,GAA5B,IAAAoE,EAAA,OAAAf,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEqB,OAFrBF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAE2BK,IAAMqB,IAAN,0BAAqC,CAAE4B,OAAQ,CAACC,GAAIjH,EAAOC,WAFtF,OAGI,OADMmE,EAFVZ,EAAA6B,KAAA7B,EAAAE,KAAA,EAGUC,YAAI,CAAE/D,KAAMM,EAAaO,kBAAmBR,QAAS,IAH/D,OAII,OAJJuD,EAAAE,KAAA,EAIUC,YAAI,CAAE/D,KAAMM,EAAaS,kBAAmBV,QAASmE,EAASkB,OAJxE,OAAA9B,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,SAMIU,QAAQC,IAAI,WAAYwB,GAAU,IAAlCnC,EAAAS,IANJ,yBAAAT,EAAAc,SAAA4C,GAAA1C,KAAA,UAUA,SAAUuC,KAAV,OAAA1D,EAAAC,EAAAC,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,OACE,OADFe,EAAAf,KAAA,EACQkB,YAAW1E,EAAaQ,oBAAqBoG,IADrD,wBAAArC,EAAAH,SAAA6C,GAAA3C,MAIeuC,sBCfLK,gBAgBAC,IAlBJ1B,GAAW,2BAEjB,SAAUyB,GAAqBpH,GAA/B,IAAAoE,EAAAkD,EAAAC,EAAA,OAAAlE,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAIqB,OAJrBF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAI2BK,IAAMqB,IAAI,2BAJrC,OAQI,OAJMhB,EAJVZ,EAAA6B,KAKUiC,EAAYlD,EAASkB,KAAK,GAAGkC,WAC7BD,EAAgBnD,EAASkB,KAAK,GAAG2B,GAN3CzD,EAAAE,KAAA,EAQUC,YAAI,CAAE/D,KAAMM,EAAa1B,SARnC,OAUIwB,EAAOC,QAAQwH,KAAf,iBAAAC,OAAqCH,EAArC,KAAAG,OAAsDJ,IAV1D9D,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,SAYIU,QAAQC,IAAI,WAAYwB,GAAU,IAAlCnC,EAAAS,IAZJ,yBAAAT,EAAAc,SAAAqD,GAAAnD,KAAA,UAgBA,SAAU6C,KAAV,OAAAhE,EAAAC,EAAAC,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,OACE,OADFe,EAAAf,KAAA,EACQkB,YAAW1E,EAAakB,wBAAyBgG,IADzD,wBAAA3C,EAAAH,SAAAsD,GAAApD,MAIe6C,sBCpBLQ,gBASAC,IAXJnC,GAAW,mBAEjB,SAAUkC,GAAa7H,GAAvB,OAAAqD,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEI,OAFJF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEUK,IAAMC,KAAN,0BAAsChE,EAAOC,SAFvD,OAGI,OAHJuD,EAAAE,KAAA,EAGUC,YAAI,CAAE/D,KAAMM,EAAaQ,oBAAqBT,QAASD,EAAOC,QAAQ8H,KAAKd,KAHrF,OAAAzD,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAKIU,QAAQC,IAAI,WAAYwB,GAAU,IAAlCnC,EAAAS,IALJ,yBAAAT,EAAAc,SAAA0D,GAAAxD,KAAA,SASA,SAAUsD,KAAV,OAAAzE,EAAAC,EAAAC,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,OACE,OADFe,EAAAf,KAAA,EACQkB,YAAW1E,EAAaW,cAAegH,IAD/C,wBAAApD,EAAAH,SAAA2D,GAAAzD,MAIesD,sBCNUI,IAAV,SAAUA,KAAV,OAAA7E,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACb,OADaF,EAAAE,KAAA,EACPyE,YAAI,CACRhF,IACA4B,IACAI,IACAO,IACAK,KACAI,KACAI,KACAI,KACAI,KACAM,KACAS,OAZW,wBAAAtE,EAAAc,SAAA8D,GAAA5D,kKCmBT6D,iNACJ7I,MAAQ,CACN8I,SAAU,GACVC,SAAU,MAGZC,MAAQ,SAAAC,GACNA,EAAMC,iBACNC,iBAAM,yBAEFC,EAAKpJ,MAAM8I,UAAYM,EAAKpJ,MAAM+I,SACpCK,EAAKC,MAAMC,SAAS,CAClBlJ,KAAMtB,EAAcC,MACpB0B,QAAS,CACPqI,SAAUM,EAAKpJ,MAAM8I,SACrBC,SAAUK,EAAKpJ,MAAM+I,YAIzBK,EAAKC,MAAMC,SAAS,CAAElJ,KAAMtB,EAAcK,uBAI9CoK,qBAAuB,SAAAC,GAAY,OAAI,SAAAP,GACrCG,EAAKK,SAALhH,OAAAiH,GAAA,EAAAjH,CAAA,GACG+G,EAAeP,EAAMU,OAAOC,oFAIxB,IAAAC,EAAA7E,KACC8E,EAAY9E,KAAKqE,MAAjBS,QAER,OACEC,EAAAjG,EAAAkG,cAAA,WACGhF,KAAKqE,MAAMpG,OAAOlD,cACjBgK,EAAAjG,EAAAkG,cAAA,MAAIC,UAAU,QAAQC,KAAK,SACxBlF,KAAKqE,MAAMpG,OAAOlD,cAGvBgK,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAMF,UAAWH,EAAQM,WACvBL,EAAAjG,EAAAkG,cAAA,QAAMK,SAAUrF,KAAKgE,OACnBe,EAAAjG,EAAAkG,cAAA,cACED,EAAAjG,EAAAkG,cAAA,mBACAD,EAAAjG,EAAAkG,cAAA,WACED,EAAAjG,EAAAkG,cAAA,SAAOM,QAAQ,YACbP,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEI,YAAY,WACZnK,KAAK,OACLoK,KAAK,WACLZ,MAAO5E,KAAKhF,MAAM8I,SAClB2B,SAAUzF,KAAKuE,qBAAqB,cACnC,IACHQ,EAAAjG,EAAAkG,cAACU,GAAA,EAAD,QAGJX,EAAAjG,EAAAkG,cAAA,WACED,EAAAjG,EAAAkG,cAAA,SAAOM,QAAQ,YACbP,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEI,YAAY,WACZnK,KAAK,WACLoK,KAAK,WACLZ,MAAO5E,KAAKhF,MAAM+I,SAClB0B,SAAUzF,KAAKuE,qBAAqB,cACnC,IACHQ,EAAAjG,EAAAkG,cAACU,GAAA,EAAD,QAGJX,EAAAjG,EAAAkG,cAAA,WACED,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEQ,QAAS3F,KAAKgE,MACd4B,QAAQ,YACRxK,KAAK,SACL6J,UAAWH,EAAQe,aAJrB,UAUFd,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACES,QAAQ,YACRxK,KAAK,SACL6J,UAAU,cACVU,QAAS,WACPd,EAAKR,MAAMC,SAAS,CAClBlJ,KAAMtB,EAAcY,yBAN1B,uBA9EUoL,aAyGTC,yBA7HA,SAAAC,GAAK,MAAK,CACvBZ,UAAW,CACTa,WAAY,qBACZC,UAAW,KACXC,cAAe,MACfC,MAAO,MACPC,WAAY,KACZC,QAAS,OACTC,SAAU,SACVC,cAAe,SACfC,OAAQ,QAGVZ,YAAa,CACXK,UAAW,KACXQ,aAAc,KACdd,QAAS,eA6GEG,CAAmBY,YAJV,SAAA3L,GAAK,MAAK,CAChCiD,OAAQjD,EAAMiD,SAGkB0I,CAAyB9C,KCnGrD+C,iNACJ5L,MAAQ,CACN8I,SAAU,GACVC,SAAU,MAGZzD,aAAe,SAAA2D,GACbA,EAAMC,iBAEFE,EAAKpJ,MAAM8I,UAAYM,EAAKpJ,MAAM+I,SACpCK,EAAKC,MAAMC,SAAS,CAClBlJ,KAAMtB,EAAcG,SACpBwB,QAAS,CACPqI,SAAUM,EAAKpJ,MAAM8I,SACrBC,SAAUK,EAAKpJ,MAAM+I,YAIzBK,EAAKC,MAAMC,SAAS,CAAElJ,KAAMtB,EAAcS,8BAI9CgK,qBAAuB,SAAAC,GAAY,OAAI,SAAAP,GACrCG,EAAKK,SAALhH,OAAAiH,GAAA,EAAAjH,CAAA,GACG+G,EAAeP,EAAMU,OAAOC,oFAIxB,IAAAC,EAAA7E,KACC8E,EAAY9E,KAAKqE,MAAjBS,QAIR,OACEC,EAAAjG,EAAAkG,cAAA,OAAKC,UAAWH,EAAQ+B,YACrB7G,KAAKqE,MAAMpG,OAAO5C,qBACjB0J,EAAAjG,EAAAkG,cAAA,MAAIC,UAAU,QAAQC,KAAK,SACxBlF,KAAKqE,MAAMpG,OAAO5C,qBAGvB0J,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAMF,UAAWH,EAAQgC,eACvB/B,EAAAjG,EAAAkG,cAAA,QAAMK,SAAUrF,KAAKM,cACnByE,EAAAjG,EAAAkG,cAAA,cACED,EAAAjG,EAAAkG,cAAA,2BACAD,EAAAjG,EAAAkG,cAAA,WACED,EAAAjG,EAAAkG,cAAA,SAAOM,QAAQ,YACbP,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEI,YAAY,WACZnK,KAAK,OACLoK,KAAK,WACLZ,MAAO5E,KAAKhF,MAAM8I,SAClB2B,SAAUzF,KAAKuE,qBAAqB,cAEtCQ,EAAAjG,EAAAkG,cAACU,GAAA,EAAD,QAGJX,EAAAjG,EAAAkG,cAAA,WACED,EAAAjG,EAAAkG,cAAA,SAAOM,QAAQ,YACbP,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEI,YAAY,WACZnK,KAAK,WACLoK,KAAK,WACLZ,MAAO5E,KAAKhF,MAAM+I,SAClB0B,SAAUzF,KAAKuE,qBAAqB,cAEtCQ,EAAAjG,EAAAkG,cAACU,GAAA,EAAD,QAGJX,EAAAjG,EAAAkG,cAAA,WACED,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEQ,QAAS3F,KAAKM,aACdsF,QAAQ,YACRX,UAAWH,EAAQiC,eACnB3L,KAAK,SACLoK,KAAK,SACLZ,MAAM,YANR,YAWAG,EAAAjG,EAAAkG,cAAA,WACAD,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACES,QAAQ,YACRxK,KAAK,SACL6J,UAAWH,EAAQe,YACnBF,QAAS,WACPd,EAAKR,MAAMC,SAAS,CAClBlJ,KAAMtB,EAAcW,sBAN1B,6BAjFWqL,aAwGZC,yBA3HA,SAAAC,GAAK,MAAK,CACvBc,cAAe,CACbb,WAAY,qBACZC,UAAW,KACXC,cAAe,MACfC,MAAO,MACPC,WAAY,KACZC,QAAS,OACTC,SAAU,SACVC,cAAe,SACfC,OAAQ,QAGVM,eAAgB,CACdb,UAAW,KACXQ,aAAc,QA4GHX,CAAmBY,YAFV,SAAAK,GAAA,MAAiB,CAAE/I,OAAnB+I,EAAG/I,SAEO0I,CAAyBC,KC5E5CD,eAPS,SAAC3L,GACvB,MAAO,CACLkD,KAAMlD,EAAMkD,KACZ5C,UAAWN,EAAMM,YAINqL,CAjDQ,SAACtC,GAAU,IAW5B4C,EANSC,EAIT7C,EAJF8C,UACAjJ,EAGEmG,EAHFnG,KACA5C,EAEE+I,EAFF/I,UACG8L,EAR2B3J,OAAA4J,GAAA,EAAA5J,CAS5B4G,EAT4B,kCA4BhC,OAZE4C,EAHC/I,EAAKuE,GAGYyE,EACK,UAAd5L,EAGSuI,GAIA+C,GAKhB7B,EAAAjG,EAAAkG,cAACsC,GAAA,EAAD7J,OAAA8J,OAAA,GAGMH,EAHN,CAIED,UAAWF,uCC7BJlB,yBAhBA,SAAAC,GAAK,MAAK,CACvBwB,KAAM,CACJC,SAAU,EACVpB,WAAiC,EAArBL,EAAM0B,QAAQC,KAC1BvB,MAAO,UAYIL,CARM,SAAAiB,GAAiB,IAAdlC,EAAckC,EAAdlC,QACtB,OAAOC,EAAAjG,EAAAkG,cAAA,OAAKC,UAAWH,EAAQ0C,SCsClBzB,yBAzCA,CACbyB,KAAM,CACJC,SAAU,GAEZG,KAAM,CACJH,SAAU,GAEZI,WAAY,CACVC,YAAa,GACbC,YAAa,KAgCFhC,CA5BA,SAAA1B,GAAS,IACdS,EAAYT,EAAZS,QACR,OACEC,EAAAjG,EAAAkG,cAAA,OAAKC,UAAWH,EAAQ0C,MACtBzC,EAAAjG,EAAAkG,cAACgD,GAAD,MACAjD,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAQ8C,SAAS,SACflD,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,KACEJ,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEF,UAAWH,EAAQ+C,WACnBK,MAAM,UACNvC,QAAS,kBAAMtB,EAAM8D,YAAW,IAChCC,aAAW,QAEXrD,EAAAjG,EAAAkG,cAACqD,GAAAvJ,EAAD,OAEFiG,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAYS,QAAQ,KAAKsC,MAAM,UAAUjD,UAAWH,EAAQ8C,MAA5D,uCCrBKU,GAdC,SAAAjE,GACd,OACEU,EAAAjG,EAAAkG,cAAAD,EAAAjG,EAAAyJ,SAAA,KACExD,EAAAjG,EAAAkG,cAACwD,GAAA1J,EAAD,CACE2J,KAAMpE,EAAMoE,KACZC,QAASrE,EAAMsE,WAAU,GACzBC,OAAQvE,EAAMsE,WAAU,IAEvBtE,EAAMwE,YCyBA9C,yBA9BA,CACb+C,WAAY,CACVC,QAAS,GACT3C,MAAO,QAET4C,cAAe,CACbC,YAAa,GACb7C,MAAO,QAET8C,KAAM,CACJ9C,MAAO,MAoBIL,CAhBO,SAAA1B,GAAS,IACrBS,EAAYT,EAAZS,QACR,OACEC,EAAAjG,EAAAkG,cAAAD,EAAAjG,EAAAyJ,SAAA,KACExD,EAAAjG,EAAAkG,cAAA,OAAKC,UAAWH,EAAQgE,YACtB/D,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAYS,QAAQ,MAApB,cAEFb,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,SCnBOgE,GAAY,QC+EVpD,yBAzEA,CACb+C,WAAY,CACVC,QAAS,GACT3C,MAAO,QAET4C,cAAe,CACbC,YAAa,GACb7C,MAAO,QAET8C,KAAM,CACJ9C,MAAO,MA+DIL,CA3DC,SAAA1B,GAAS,IACfS,EAAYT,EAAZS,QACR,OACEC,EAAAjG,EAAAkG,cAAA,OAAKC,UAAWH,EAAQoE,MACtBnE,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,KAEEJ,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEiE,QAAM,EACNzD,QAAS,WACPtB,EAAMgF,WDpCS,aCuCjBtE,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAcmE,QAAS,YAGzBvE,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEiE,QAAM,EACNzD,QAAS,WACPtB,EAAMgF,WD5CY,gBC+CpBtE,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAcmE,QAAS,WAGzBvE,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEiE,QAAM,EACNzD,QAAS,WACPtB,EAAMgF,WDpDa,iBCuDrBtE,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAcmE,QAAS,cAGzBvE,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEiE,QAAM,EACNzD,QAAS,WACPtB,EAAMgF,WD5Da,kBC+DrBtE,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAcmE,QAAS,WAGzBvE,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEiE,QAAM,EACNzD,QAAS,WACPtB,EAAMgF,WDlEU,cCqElBtE,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAcmE,QAAS,iBCtDlBvD,yBAlBA,CACbmD,KAAM,CACJjB,SAAU,QACVsB,KAAM,EACNC,OAAQ,EACRpD,MAAO,SAaIL,CATO,SAAA1B,GAAS,IACrBS,EAAYT,EAAZS,QACR,OAAOC,EAAAjG,EAAAkG,cAAA,OAAKC,UAAWH,EAAQoE,MAAO7E,EAAMwE,gCC4B/BY,GA/Bc,SAAApF,GAC3B,OACEU,EAAAjG,EAAAkG,cAAAD,EAAAjG,EAAAyJ,SAAA,KACExD,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,MACAJ,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,KACEJ,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEiE,QAAM,EACNzD,QAAS,WACPtB,EAAMqF,uBAGR3E,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,qBACAJ,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,KACEJ,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,KACEJ,EAAAjG,EAAAkG,cAAC2E,GAAA7K,EAAD,SAINiG,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAUiE,QAAM,EAACzD,QAAStB,EAAMuF,QAC9B7E,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,gBACAJ,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,KACEJ,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,KACEJ,EAAAjG,EAAAkG,cAAC2E,GAAA7K,EAAD,YCnBR+K,iNACJ7O,MAAQ,CACN8O,aAAa,KAGfnB,UAAY,SAAAF,GAAI,OAAI,WAClBrE,EAAKK,SAAS,CACZqF,YAAarB,QAIjBY,WAAa,SAAAU,GACX3F,EAAKuE,WAAU,GACfvE,EAAKK,SAAS,CACZqF,aAAa,IAEf1F,EAAKC,MAAM2F,QAAQ/G,KAAnB,GAAAC,OAA2B6G,OAG7BH,OAAS,WACPzF,iBAAM,cACNC,EAAKuE,WAAU,GACfvE,EAAKK,SAAS,CACZqF,aAAa,IAEf1F,EAAKC,MAAMC,SAAS,CAAElJ,KAAMtB,EAAcE,YAG5C0P,mBAAqB,WACnBtF,EAAKK,SAAS,CACZqF,aAAa,IAEf1F,EAAKC,MAAMC,SAAS,CAClBlJ,KAAMM,EAAakB,wBACnBnB,QAAS2I,EAAKC,MAAM2F,qFAKtB,OACEjF,EAAAjG,EAAAkG,cAAAD,EAAAjG,EAAAyJ,SAAA,KACExD,EAAAjG,EAAAkG,cAACiF,GAAD,CAAQ9B,WAAYnI,KAAK2I,WAAU,KACnC5D,EAAAjG,EAAAkG,cAACkF,GAAD,CAASzB,KAAMzI,KAAKhF,MAAM8O,YAAanB,UAAW3I,KAAK2I,WACrD5D,EAAAjG,EAAAkG,cAACmF,GAAD,CAAejM,KAAM8B,KAAKqE,MAAMnG,OAChC6G,EAAAjG,EAAAkG,cAACoF,GAAD,CAASf,WAAYrJ,KAAKqJ,aAC1BtE,EAAAjG,EAAAkG,cAACqF,GAAD,KACEtF,EAAAjG,EAAAkG,cAACsF,GAAD,CACEV,OAAQ5J,KAAK4J,OACbF,mBAAoB1J,KAAK0J,+BAhDrB5D,aA6DHyE,gBAAW5D,YAJF,SAAA3L,GAAK,MAAK,CAChCkD,KAAMlD,EAAMkD,OAGYyI,CAAyBkD,eC2EpC9D,kCA9IA,SAAAC,GAAK,MAAK,CACvBwE,UAAW,CACTlE,QAAS,OACTmE,SAAU,QAEZC,UAAW,CACT5C,WAAY9B,EAAM0B,QAAQC,KAC1BI,YAAa/B,EAAM0B,QAAQC,MAE7BgD,MAAO,CACLzE,UAAW,IAEb0E,MAAO,CACL3C,SAAU,WACV4C,IAAK,MACLtB,KAAM,MACNuB,UAAS,wBACTC,SAA+B,GAArB/E,EAAM0B,QAAQC,KACxBqD,SAAU,MACVC,UAAW,MACXC,UAAW,SACXC,gBAAiBnF,EAAMoF,QAAQvE,WAAW+D,MAC1CS,UAAWrF,EAAMsF,QAAQ,GACzBvC,QAA8B,EAArB/C,EAAM0B,QAAQC,MAEzB4D,aAAc,CACZlF,WAAiC,EAArBL,EAAM0B,QAAQC,QAoHf5B,CAhHkB,SAAA1B,GAAS,IAChCS,EAAYT,EAAZS,QACR,OACEC,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEsD,KAAMpE,EAAMoE,KACZC,QAASrE,EAAMmH,YACfC,gBAAiBpH,EAAMmH,YACvBE,gBAAiBrH,EAAMmH,aAEvBzG,EAAAjG,EAAAkG,cAAA,OAAKC,UAAWH,EAAQ8F,OACtB7F,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAYS,QAAQ,MAAMvB,EAAMsH,kBAAkBnG,MAClDT,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAYS,QAAQ,KAAKX,UAAWH,EAAQyG,cAA5C,+BAGAxG,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAYS,QAAQ,SACjBgG,8CAAYC,mBADf,mBAGGxH,EAAMsH,kBAAkBlJ,GAH3B,IAGgC4B,EAAMsH,kBAAkB3I,YAExD+B,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAYS,QAAQ,KAAKX,UAAWH,EAAQyG,cAA5C,mBAGAxG,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAYS,QAAQ,SACjBvB,EAAMsH,kBAAkBnG,KACtBsG,cACAC,MAAM,KACNC,KAAK,KAEVjH,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAYS,QAAQ,KAAKX,UAAWH,EAAQyG,cAA5C,qBAGAxG,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAYS,QAAQ,SACjBvB,EAAMsH,kBAAkBnG,KACtBsG,cACAC,MAAM,KACNC,KAAK,IAAM,UAEhBjH,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAYS,QAAQ,KAAKX,UAAWH,EAAQyG,cAA5C,mBAGAxG,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAYS,QAAQ,SAApB,8GAIAb,EAAAjG,EAAAkG,cAAA,YACED,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEP,MAAOP,EAAMsH,kBAAkBM,gBAC/BxG,SAAUpB,EAAM6H,oBAAoB,mBACpC3G,YAAY,qBAEdR,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEP,MAAOP,EAAMsH,kBAAkBQ,YAC/B1G,SAAUpB,EAAM6H,oBAAoB,eACpC3G,YAAY,iBAGdR,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAYS,QAAQ,KAAKX,UAAWH,EAAQyG,cAA5C,4BAIAxG,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEP,MAAOP,EAAMsH,kBAAkBnG,KAC/BC,SAAUpB,EAAM6H,oBAAoB,QACpC3G,YAAY,mBACZnK,KAAK,OACLoK,KAAK,SAEPT,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEP,MAAOP,EAAMsH,kBAAkBS,SAC/B3G,SAAUpB,EAAM6H,oBAAoB,YACpC3G,YAAY,WACZnK,KAAK,OACLoK,KAAK,aAEPT,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAYS,QAAQ,KAAKX,UAAWH,EAAQyG,cAA5C,eAGAxG,EAAAjG,EAAAkG,cAACqH,GAAA,EAAD,CACEC,SAAUjI,EAAMsH,kBAAkBY,KAClC9G,SAAUpB,EAAMmI,mBAGlBzH,EAAAjG,EAAAkG,cAAA,WACED,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACE/J,KAAK,SACLwK,QAAQ,YACRsC,MAAM,UACNvC,QAAS,SAAA1B,GACPI,EAAMoI,gBAAgBxI,GACtBI,EAAMmH,gBANV,UAWAzG,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEQ,QAAS,WACPtB,EAAMqI,kBAAkBrI,EAAMsH,kBAAkBlJ,MAFpD,qCCrGNkK,iNACJ3R,MAAQ,CACN4R,WAAW,EACXC,aAAc,GACdC,mBAAoB,GACpBnB,kBAAmB,CACjBlJ,GAAI,GACJ+C,KAAM,GACN4G,SAAU,GACVG,KAAMQ,WASVC,eAAiB,WAEf,GAAsC,KAAlC5I,EAAKpJ,MAAM8R,mBAEb,OADAG,MAAM,qCACC,EAEP1N,IAAM,CACJ2N,OAAQ,OACRC,IAAK,yBACLrM,KAAM,CAAE0E,KAAMpB,EAAKpJ,MAAM8R,sBAExBM,KAAK,SAAAxN,GACJwE,EAAKqI,gBAAgB7M,EAASkB,QAE/BuM,MAAM,SAAAC,GACLL,MACE,iFAEFvN,QAAQC,IAAI,SAAU2N,QAM9BC,gBAAkB,WAChBhO,IAAM,CACJ2N,OAAQ,MACRC,IAAK,2BACJC,KAAK,SAAAxN,GACN,IAAI4N,EAAkB5N,EAASkB,KAAK2M,IAAI,SAAAC,GACtC,OAAOjQ,OAAAK,EAAA,EAAAL,CAAA,GACFiQ,EADL,CAEEnB,KAAMQ,KAAOW,EAAYnB,UAG7BnI,EAAKK,SAALhH,OAAAK,EAAA,EAAAL,CAAA,GACK2G,EAAKpJ,MADV,CAEE6R,aAAcW,UAMpBG,UAAY,SAAAC,GACVxJ,EAAKK,SAAS,CACZkH,kBAAkBlO,OAAAK,EAAA,EAAAL,CAAA,GACbmQ,EADY,CAEfrB,KAAMQ,KAAOa,EAAoBrB,UAGrCnI,EAAKyJ,gBAIPpB,gBAAkB,SAAAxI,GAChBA,EAAMC,iBACN,IAAM4J,EAAO1J,EAAKpJ,MAAM2Q,kBAExBpM,IAAM,CACJ2N,OAAQ,MACRC,IAAG,yBACHrM,KAAMgN,IACLV,KAAK,SAAAxN,GACNwE,EAAKK,SAALhH,OAAAK,EAAA,EAAAL,CAAA,GACK2G,EAAKpJ,MADV,CAEE2Q,kBAAmB,CACjBlJ,GAAI,GACJ+C,KAAM,GACN4G,SAAU,GACVG,KAAMQ,OACNd,gBAAiB,GACjBE,YAAa,OAGjB/H,EAAKmJ,kBACLpJ,iBAAM,6BAKVuI,kBAAoB,SAAAqB,GAClBxO,IAAM,CACJ2N,OAAQ,SACRC,IAAG,0BAAAjK,OAA4B6K,KAE9BX,KAAK,SAAAxN,GACJwE,EAAKmJ,kBACLnJ,EAAKoH,gBAEN6B,MAAM,SAAAC,GACLL,MAAM,kDACNvN,QAAQC,IAAI,SAAU2N,QAI5BU,gBAAkB,SAAAxI,GAAI,OAAI,SAAAvB,GACxBG,EAAKK,SAALhH,OAAAiH,GAAA,EAAAjH,CAAA,GACG+H,EAAOvB,EAAMU,OAAOC,YAIzBsH,oBAAsB,SAAA1H,GAAY,OAAI,SAAAP,GACpCG,EAAKK,SAAS,CACZkH,kBAAkBlO,OAAAK,EAAA,EAAAL,CAAA,GACb2G,EAAKpJ,MAAM2Q,kBADClO,OAAAiH,GAAA,EAAAjH,CAAA,GAEd+G,EAAeP,EAAMU,OAAOC,cAKnC4H,iBAAmB,SAAAD,GACjBnI,EAAKK,SAAS,CACZkH,kBAAkBlO,OAAAK,EAAA,EAAAL,CAAA,GACb2G,EAAKpJ,MAAM2Q,kBADC,CAEfY,KAAMA,SAKZ0B,aAAe,SAAAhK,GACbA,EAAMC,iBACNE,EAAKC,MAAMC,SAAS,CAAElJ,KAAMtB,EAAcE,SAC1CoK,EAAKC,MAAM2F,QAAQ/G,KAAKkG,OAG1BqC,YAAc,WACZpH,EAAKK,SAAS,CAAEmI,WAAW,OAG7BiB,WAAa,WACXzJ,EAAKK,SAAS,CAAEmI,WAAW,0FAtI3B5M,KAAKuN,mDAyIE,IAAA1I,EAAA7E,KACC8E,EAAY9E,KAAKqE,MAAjBS,QACR,OACEC,EAAAjG,EAAAkG,cAAA,cACED,EAAAjG,EAAAkG,cAAA,OAAKC,UAAWH,EAAQoE,MACtBnE,EAAAjG,EAAAkG,cAAA,gCACAD,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,KACGnF,KAAKhF,MAAM6R,aAAaY,IAAI,SAAAS,GAC3B,OACEnJ,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAUgJ,IAAKD,EAAKzL,GAAImC,MAAOsJ,EAAKzL,IAClCsC,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEF,UAAWH,EAAQsJ,WACnBxI,QAAQ,YACRsC,MAAM,YACNvC,QAAS,kBAAMd,EAAK8I,UAAUO,KAJhC,QAQCA,EAAK1I,QAIZT,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,KACEJ,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEF,UAAWH,EAAQsJ,WACnBxI,QAAQ,YACRsC,MAAM,UACNvC,QAAS3F,KAAKgN,gBAJhB,OAQAjI,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEkJ,MAAM,uBACNzJ,MAAO5E,KAAKhF,MAAM8R,mBAClBrH,SAAUzF,KAAKgO,gBAAgB,sBAC/BvH,OAAO,YAIX1B,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACE+C,MAAM,YACNtC,QAAQ,YACRD,QAAS3F,KAAKiO,cAHhB,YAQFlJ,EAAAjG,EAAAkG,cAACsJ,GAAD,CACE7F,KAAMzI,KAAKhF,MAAM4R,UACjBpB,YAAaxL,KAAKwL,YAClBiB,gBAAiBzM,KAAKyM,gBACtBC,kBAAmB1M,KAAK0M,kBACxBf,kBAAmB3L,KAAKhF,MAAM2Q,kBAC9BO,oBAAqBlM,KAAKkM,oBAC1BM,iBAAkBxM,KAAKwM,4BA7MM1G,aAyN1ByI,eACbhE,KACAxE,sBAzOa,SAAAC,GAAK,MAAK,CACvBkD,KAAM,CACJ9C,MAAO,MACPH,WAAY,qBACZuI,YAAa,QACbtI,UAAW,KACXC,cAAe,KACfsI,SAAU,QAEZL,WAAY,CACVrG,YAAkC,EAArB/B,EAAM0B,QAAQC,SA6NhB4G,CAGb5B,wBChOI+B,iNACJC,aAAe,CACblM,GAAI,GACJmM,WAAY,GACZC,UAAW,GACXC,MAAO,GACPC,SAAU,GACVC,MAAO,GACPC,WAAY,MAEdjU,MAAQoJ,EAAKuK,eAEbO,UAAY,WACV9K,EAAKK,SAASL,EAAKuK,iBAGrBX,gBAAkB,SAAAxJ,GAAY,OAAI,SAAAP,GAChCG,EAAKK,SAALhH,OAAAK,EAAA,EAAAL,CAAA,GACK2G,EAAKpJ,MADVyC,OAAAiH,GAAA,EAAAjH,CAAA,GAEG+G,EAAeP,EAAMU,OAAOC,+FAIduK,GACbnP,KAAKqE,QAAU8K,GACjBnP,KAAKyE,SAALhH,OAAAK,EAAA,EAAAL,CAAA,GACKuC,KAAKqE,MAAM+K,mDAKX,IAAAvK,EAAA7E,KACC8E,EAAY9E,KAAKqE,MAAjBS,QAIR,OACEC,EAAAjG,EAAAkG,cAAA,WACED,EAAAjG,EAAAkG,cAAA,QAAMC,UAAWH,EAAQuK,UACvBtK,EAAAjG,EAAAkG,cAAA,MAAIC,UAAWH,EAAQwK,YAAvB,gBAEAvK,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAMwF,OAAK,GACT5F,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,KACEJ,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEkJ,MAAM,aACNpJ,UAAU,YACV7J,KAAK,OACLoK,KAAK,aACLZ,MAAO5E,KAAKhF,MAAM4T,WAClBnJ,SAAUzF,KAAKgO,gBAAgB,iBAGnCjJ,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,KACEJ,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEkJ,MAAM,YACNpJ,UAAU,YACV7J,KAAK,OACLoK,KAAK,aACLZ,MAAO5E,KAAKhF,MAAM6T,UAClBpJ,SAAUzF,KAAKgO,gBAAgB,gBAGnCjJ,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,KACEJ,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEkJ,MAAM,SACNpJ,UAAU,YACV7J,KAAK,OACLoK,KAAK,aACLZ,MAAO5E,KAAKhF,MAAM8T,MAClBrJ,SAAUzF,KAAKgO,gBAAgB,YAGnCjJ,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,KACEJ,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEkJ,MAAM,eACNpJ,UAAU,YACV7J,KAAK,OACLoK,KAAK,aACLZ,MAAO5E,KAAKhF,MAAMgU,MAClBvJ,SAAUzF,KAAKgO,gBAAgB,YAGnCjJ,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,KACEJ,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEkJ,MAAM,WACNpJ,UAAU,YACV7J,KAAK,OACLoK,KAAK,aACLZ,MAAO5E,KAAKhF,MAAM+T,SAClBtJ,SAAUzF,KAAKgO,gBAAgB,eAGnCjJ,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,KACEJ,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEkJ,MAAM,aACNpJ,UAAU,YACV7J,KAAK,OACLoK,KAAK,aACLZ,MAAO5E,KAAKhF,MAAMiU,WAClBxJ,SAAUzF,KAAKgO,gBAAgB,kBAIrCjJ,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACES,QAAQ,YACRsC,MAAM,UACNvC,QAAS,WACPd,EAAKR,MAAMkL,WAAW1K,EAAK7J,MAAMyH,GAAIoC,EAAK7J,OAC1C6J,EAAKqK,cALT,gBAUAnK,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACES,QAAQ,WACRsC,MAAM,YACNvC,QAAS,WACPd,EAAKR,MAAMmL,cAAc3K,EAAK7J,MAAMyH,IACpCoC,EAAKqK,cALT,2BAjHoBpJ,aAiIfC,yBAxJA,SAAAC,GAAK,MAAK,CACvByJ,MAAO,CACLC,MAAO,SAETC,WAAY,CACVzJ,UAAW,MAGboJ,WAAY,CACVxH,WAAY,MAGduH,SAAU,CACRK,MAAO,QACP3H,YAAa,MACb7B,UAAW,SACXsI,YAAa,QACbzF,QAAS,OACT9C,WAAY,qBACZ2J,OAAQ,UAqIG7J,CAAmB2I,IC/G5BmB,eACJ,SAAAA,EAAYxL,GAAO,IAAAD,EAAA,OAAA3G,OAAAqS,GAAA,EAAArS,CAAAuC,KAAA6P,IACjBzL,EAAA3G,OAAAsS,GAAA,EAAAtS,CAAAuC,KAAAvC,OAAAuS,GAAA,EAAAvS,CAAAoS,GAAAI,KAAAjQ,KAAMqE,KA4BR6L,YAAc,SAAAzN,GACZlD,IAAM,CACJ2N,OAAQ,MACRC,IAAG,4BAAAjK,OAA8BT,KAChC2K,KAAK,SAAAxN,GACNwE,EAAKK,SAALhH,OAAAK,EAAA,EAAAL,CAAA,GACK2G,EAAKpJ,MADV,CAEEoU,gBAAiBxP,EAASkB,KAAK,SApClBsD,EAyCnBmL,WAAa,SAAC9M,EAAI3B,GAChBvB,IAAM,CACJ2N,OAAQ,MACRC,IAAG,4BAAAjK,OAA8BT,GACjC3B,KAAMA,IACLsM,KAAK,SAAAxN,GACNuE,iBAAM,iBACNC,EAAK+L,iBAhDU/L,EAoDnBoL,cAAgB,SAAA/M,GACdlD,IAAM,CACJ2N,OAAQ,SACRC,IAAG,4BAAAjK,OAA8BT,KAChC2K,KAAK,SAAAxN,GACNuE,iBAAM,mBACNC,EAAK+L,iBA1DU/L,EA8DnB4J,gBAAkB,SAAAxJ,GAAY,OAAI,SAAAP,GAChCG,EAAKK,SAALhH,OAAAK,EAAA,EAAAL,CAAA,GACK2G,EAAKpJ,MADV,CAEEoU,gBAAgB3R,OAAAK,EAAA,EAAAL,CAAA,GACX2G,EAAKpJ,MAAMoU,gBADD3R,OAAAiH,GAAA,EAAAjH,CAAA,GAEZ+G,EAAeP,EAAMU,OAAOC,aAnEhBR,EAwEnBgM,eAAiB,SAAAnM,GACfG,EAAKK,SAAS,CACZ4L,MAAOpM,EAAMU,OAAOC,SAxEtBR,EAAKpJ,MAAQ,CACXqC,SAAU,GACV+R,gBAAiB,GACjBiB,MAAO,IALQjM,+EASL,IAAAS,EAAA7E,KACZT,IAAM,CACJ2N,OAAQ,MACRC,IAAK,6BACJC,KAAK,SAAAxN,GACN,IAAIvC,EAGFA,EADEuC,EAASkB,KACAlB,EAASkB,KAET,GAEb+D,EAAKJ,SAAS,CACZpH,SAAUA,EACV+R,gBAAiB,mDAwDrBpP,KAAKmQ,+CAKE,IAAAG,EAAAtQ,KACC8E,EAAY9E,KAAKqE,MAAjBS,QACFoE,EAAOlJ,KAAKhF,MAAMqC,SACrBkT,OACC,SAAAC,GAAO,MACgB,KAArBF,EAAKtV,MAAMqV,OACXG,EAAQ3B,UAAU/C,cAAc2E,SAASH,EAAKtV,MAAMqV,QACpDG,EAAQ5B,WAAW9C,cAAc2E,SAASH,EAAKtV,MAAMqV,SAExD5C,IAAI,SAAC+C,EAAS7S,GAAV,OACHoH,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAUgJ,IAAKxQ,GACZ6S,EAAQ5B,WADX,IACwB4B,EAAQ3B,UAAW,IACzC9J,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,KACEJ,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEQ,QAAS,WACP2K,EAAKJ,YAAYM,EAAQ/N,MAG3BsC,EAAAjG,EAAAkG,cAAC0L,GAAA5R,EAAD,WAMV,OACEiG,EAAAjG,EAAAkG,cAAA,OAAKC,UAAWH,EAAQ0C,MACtBzC,EAAAjG,EAAAkG,cAAA,WACED,EAAAjG,EAAAkG,cAAC2L,GAAD,CACEvB,gBAAiBpP,KAAKhF,MAAMoU,gBAC5BG,WAAYvP,KAAKuP,WACjBC,cAAexP,KAAKwP,iBAGxBzK,EAAAjG,EAAAkG,cAAA,OAAKC,UAAWH,EAAQ8L,QACtB7L,EAAAjG,EAAAkG,cAAA,WACED,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAMF,UAAWH,EAAQ+L,YACvB9L,EAAAjG,EAAAkG,cAAA,MAAIC,UAAWH,EAAQgM,QAAvB,sBACA/L,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,KACEJ,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEF,UAAWH,EAAQiM,YACnBxL,YAAY,iBACZK,QAAQ,WACRhB,MAAO5E,KAAKhF,MAAMqV,MAClBjV,KAAK,OACLqK,SAAUzF,KAAKoQ,kBAGlBlH,aApIiBpD,aA6IjBC,yBAxKA,SAAAC,GAAK,MAAK,CACvB4K,OAAQ,CACNxK,MAAO,OACP2E,SAAU,IACV6E,OAAQ,OACR1E,UAAW,OACXpD,WAAY,OACZ5B,UAAW,MACXsI,YAAa,QACbzF,QAAS,OACT9C,WAAY,sBAGd4K,WAAY,CACV3F,UAAW,QAGb6F,YAAa,CACXnB,OAAQ,MACR3J,WAAY,sBAGd6K,OAAQ,CACNhJ,WAAY,UAiJD/B,CAAmB8J,iCC3InB9J,kCA9CA,SAAAC,GAAK,MAAK,CACvBgL,eAAgB,CACd1K,QAAS,OACTF,MAAO,OACPwJ,OAAQ,MACRpJ,cAAe,MACfiE,SAAU,SACVwG,WAAY,SACZC,eAAgB,UAGlBrT,MAAO,CACLuI,MAAO,MACPwJ,OAAQ,MACRuB,aAAc,MACd1K,OAAQ,MACR2K,WAAY,MACZ3C,SAAU,QACVtD,gBAAiB,aACjBE,UAAW,wBAGbgG,IAAK,CACHlG,gBAAiB,eAuBNpF,CAnBO,SAAA1B,GAAS,IACrBS,EAAYT,EAAZS,QAER,OACEC,EAAAjG,EAAAkG,cAAAD,EAAAjG,EAAAyJ,SAAA,KACExD,EAAAjG,EAAAkG,cAAA,OAAKC,UAAWH,EAAQkM,gBACrB3M,EAAMiN,SAAS7D,IAAI,SAAA5P,GAElB,MAAiB,SADK,IAAVA,EAAc,MAAQ,QAEhCkH,EAAAjG,EAAAkG,cAAA,OAAKC,UAAS,GAAA/B,OAAK4B,EAAQjH,MAAb,KAAAqF,OAAsB4B,EAAQuM,MAA5C,KAEAtM,EAAAjG,EAAAkG,cAAA,OAAKC,UAAWH,EAAQjH,OAAxB,iCCaN0T,iNACJvW,MAAQ,CAENwW,KAAM,EAENC,qBAAsB,EAEtBC,uBAAuB,EAEvBC,YAAa,GAEbC,iBAAiB,EAEjBC,WAAY,EAEZC,SAAU,MAGZC,SAAW,OAEXC,SAAW,WACTzS,IACGqB,IAAI,mCACJwM,KAAK,SAAAxN,GACJqS,KAAarS,EAASkB,KAAM,6BAE7BuM,MAAM,SAAAC,GACL5N,QAAQC,IAAI,wBAAyB2N,GACrCL,MAAM,mCAKZiF,gBAAkB,WAChB9N,EAAKK,SAALhH,OAAAK,EAAA,EAAAL,CAAA,GACK2G,EAAKpJ,MADV,CAEEyW,qBAAsBrN,EAAKpJ,MAAMyW,qBAAuB,QAI5DU,cAAgB,WACd/N,EAAKK,SAALhH,OAAAK,EAAA,EAAAL,CAAA,GACK2G,EAAKpJ,MADV,CAEEwW,KAAMpN,EAAKpJ,MAAMwW,KAAO,QAK5BY,iBAAmB,WACjBhO,EAAKK,SAALhH,OAAAK,EAAA,EAAAL,CAAA,GACK2G,EAAKpJ,MADV,CAEE0W,uBAAwBtN,EAAKpJ,MAAM0W,4BAKvCW,YAAc,SAACpO,EAAOW,GACpBR,EAAKK,SAALhH,OAAAK,EAAA,EAAAL,CAAA,GACK2G,EAAKpJ,MADV,CAEEyW,qBAAsB7M,EACtBiN,WAAYS,KAAKC,KACfnO,EAAKpJ,MAAM2W,YAAY/M,GAAO4N,QAAQtX,OAASkJ,EAAKpJ,MAAM8W,UAE5DN,KAAM,QAIViB,SAAW,WACLrO,EAAKpJ,MAAM0W,wBACTtN,EAAKpJ,MAAMwW,KAAOpN,EAAKpJ,MAAM6W,WAAa,EAC5CzN,EAAK+N,gBAEL/N,EAAKpJ,MAAMyW,qBACXrN,EAAKC,MAAMjG,OAAOlD,OAAS,GAE3BkJ,EAAK8N,kBACL9N,EAAKK,SAALhH,OAAAK,EAAA,EAAAL,CAAA,GACK2G,EAAKpJ,MADV,CAEEwW,KAAM,MAGRpN,EAAKK,SAAS,CACZgN,qBAAsB,EACtBD,KAAM,QAOdkB,iBAAmB,WACjBtO,EAAKK,SAALhH,OAAAK,EAAA,EAAAL,CAAA,GACK2G,EAAKpJ,MADV,CAEE4W,iBAAiB,KAEnBrS,IACGqB,IAAI,4BACJwM,KAAK,SAAAxN,GACJwE,EAAKK,SAALhH,OAAAK,EAAA,EAAAL,CAAA,GACK2G,EAAKpJ,MADV,CAEE2W,YAAa/R,EAASkB,KACtB+Q,WAAYS,KAAKC,KACf3S,EAASkB,KAAK,GAAG0R,QAAQtX,OAASkJ,EAAKpJ,MAAM8W,eAIlDzE,MAAM,SAAAC,GACL5N,QAAQC,IAAI,yBAA0B2N,oNAMpCtN,KAAKqE,MAAMC,SAAS,CAAElJ,KAAMM,EAAaG,sCACzCmE,KAAK0S,0CACL1S,KAAKyE,SAALhH,OAAAK,EAAA,EAAAL,CAAA,GACDuC,KAAKhF,MADJ,CAEJ4W,iBAAiB,YAEnB5R,KAAKyS,SAAWE,YAAY3S,KAAKyS,SAAU,wIAGpC,IAAA5N,EAAA7E,KACC8E,EAAY9E,KAAKqE,MAAjBS,QACF8N,EAAU,CACd,CACEC,OAAQ,YACRC,SAAU,YACV9H,SAAU,MAEV+H,KAAM,SAAAC,GAAG,OAAIjO,EAAAjG,EAAAkG,cAAA,eAAOlE,EAAKmS,QAAQD,EAAIE,UAAY,EAApC,OAEf,CACEL,OAAQ,eACRC,SAAU,YACV9H,SAAU,MACV+H,KAAM,SAAAC,GAAG,OACPjO,EAAAjG,EAAAkG,cAAA,WAAMgO,EAAIE,SAAStE,WAAa,IAAMoE,EAAIE,SAASrE,aAGvD,CACEgE,OAAQ,aACRC,SAAU,aACVC,KAAM,SAAAC,GAAG,OACPjO,EAAAjG,EAAAkG,cAAAD,EAAAjG,EAAAyJ,SAAA,KACExD,EAAAjG,EAAAkG,cAAA,OACEmO,MAAO,CACL/M,MAAO,OACPwJ,OAAQ,OACRzE,gBAAiB,UACjBgG,aAAc,QAGhBpM,EAAAjG,EAAAkG,cAAA,OACEmO,MAAO,CACL/M,MAAK,GAAAlD,OAAM8P,EAAIpO,MAAQoO,EAAIE,SAASE,YAAe,IAA9C,KACLxD,OAAQ,OACRzE,gBACG6H,EAAIpO,MAAQoO,EAAIE,SAASE,YAAe,IAAM,GAC3C,UACCJ,EAAIpO,MAAQoO,EAAIE,SAASE,YAAe,IAAM,GAC/C,UACA,UACNjC,aAAc,MACdkC,WAAY,mBACZC,UAAW,WAGZN,EAAIpO,MAfP,MAeiBoO,EAAIE,SAASE,kBASpCtS,EAAOd,KAAKhF,MAAM2W,YAAYzW,OAC9B8E,KAAKhF,MAAM2W,YAAY3R,KAAKhF,MAAMyW,sBAAsBe,QACxD,GAEJ,OAAOxS,KAAKhF,MAAM4W,gBAChB7M,EAAAjG,EAAAkG,cAAA,OAAKC,UAAWH,EAAQ0F,WACtBzF,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAYS,QAAQ,MAApB,WACAb,EAAAjG,EAAAkG,cAAA,OAAKC,UAAWH,EAAQyO,kBACtBxO,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEqO,QAASzO,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAQM,SAAUzF,KAAKoS,mBAChC/D,MAAM,mBAERtJ,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAQS,QAAQ,YAAYsC,MAAM,YAAYvC,QAAS3F,KAAKgS,UAA5D,iBAIFjN,EAAAjG,EAAAkG,cAACyO,GAAA,EAAD,CACE7O,MAAO5E,KAAKhF,MAAMyW,qBAClBiC,WAAS,EACTjO,SAAUzF,KAAKqS,aAEdrS,KAAKqE,MAAMjG,OAAOqP,IAAI,SAAAkG,GACrB,OACE5O,EAAAjG,EAAAkG,cAACyO,GAAA,EAAD,CAActF,IAAKwF,EAAGlR,GAAImC,MAAOC,EAAKR,MAAMjG,OAAO6U,QAAQU,IACxDA,EAAGnO,SAKZT,EAAAjG,EAAAkG,cAAC4O,GAAA,EAAD,CACEC,SAAU,WACR,MAAO,CACLV,MAAO,CAAElN,WAAY,qBAAsBqN,UAAW,YAG1DV,QAASA,EACT9R,KAAMA,EACNgT,gBAAiB,CAAC9T,KAAKhF,MAAM8W,UAC7BA,SAAU9R,KAAKhF,MAAM8W,SACrBN,KAAMxR,KAAKhF,MAAMwW,KACjBvM,UAAU,sBACV8O,aAAc,SAAAC,GACZnP,EAAKJ,SAALhH,OAAAK,EAAA,EAAAL,CAAA,GAAmBoH,EAAK7J,MAAxB,CAA+BwW,KAAMwC,MAEvCC,aAAc,SAAAjB,GAGZ,IAFA,IAAIkB,EAAc,GAETC,EAAI,EAAGA,EAAInB,EAAIE,SAASkB,WAAWlZ,OAAQiZ,GAAK,GACvDD,EAAYjR,KAAK+P,EAAIE,SAASkB,WAAWC,MAAMF,EAAGA,EAAI,KAExD,OACEpP,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAOF,UAAWH,EAAQwP,sBACxBvP,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAYS,QAAS,MAArB,kBACkBoN,EAAIE,SAAStE,WAAY,IACxCoE,EAAIE,SAASrE,WAEhB9J,EAAAjG,EAAAkG,cAAA,OAAKC,UAAWH,EAAQyP,mBACtBxP,EAAAjG,EAAAkG,cAAA,WACGkP,EAAYzG,IAAI,SAAA6D,GACf,OACEvM,EAAAjG,EAAAkG,cAACwP,GAAD,CACErG,IAAK6E,EAAIE,SAASzQ,GAClB6O,SAAUA,OAKlBvM,EAAAjG,EAAAkG,cAAA,WACED,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAYF,UAAWH,EAAQ2P,WAAY7O,QAAS,MACjDoN,EAAIE,SAASwB,mBAU9B3P,EAAAjG,EAAAkG,cAAA,gCAhQoBc,aAuQXC,yBArSA,SAAAC,GAAK,MAAK,CACvBuO,kBAAmB,CACjBjO,QAAS,OACTE,cAAe,MACfiE,SAAU,SACVhE,OAAQ,SAEVgO,WAAY,CACV7E,OAAQ,OACRxJ,MAAO,OACPgL,WAAY,OACZ3C,SAAU,OAEZjE,UAAW,CACTnE,WAAiC,EAArBL,EAAM0B,QAAQC,KAC1BxB,cAAoC,EAArBH,EAAM0B,QAAQC,KAC7BsB,YAAkC,EAArBjD,EAAM0B,QAAQC,KAC3BgN,aAAmC,EAArB3O,EAAM0B,QAAQC,MAE9B2M,qBAAsB,CACpBjO,WAAiC,EAArBL,EAAM0B,QAAQC,KAC1BxB,cAAoC,EAArBH,EAAM0B,QAAQC,MAE/B4L,iBAAkB,CAChBjN,QAAS,OACTE,cAAe,MACf0K,eAAgB,mBA2QLnL,CAAmBY,YAFV,SAAAK,GAAA,MAAiB,CAAE5I,OAAnB4I,EAAG5I,SAEOuI,CAAyB4K,wBC7T9CqD,GAAU,SAAC1L,EAAM2L,EAAYC,GACxC,IAAMC,EAASC,MAAMC,KAAK/L,GAD2BgM,EAEnCH,EAAOI,OAAON,EAAY,GAArCO,EAF8C3X,OAAA4X,GAAA,EAAA5X,CAAAyX,EAAA,MAKrD,OAFAH,EAAOI,OAAOL,EAAU,EAAGM,GAEpBL,GAGIO,GAAO,SAClBC,EACAxL,EACAyL,EACAC,GAEA,IAAMC,EAAcV,MAAMC,KAAKM,GACzBI,EAAYX,MAAMC,KAAKlL,GAF1B6L,EAGeF,EAAYP,OAAOK,EAAgB7X,MAAO,GAArDyX,EAHJ3X,OAAA4X,GAAA,EAAA5X,CAAAmY,EAAA,MAKHD,EAAUR,OAAOM,EAAqB9X,MAAO,EAAGyX,GAEhD,IAAML,EAAS,GAKf,OAHAA,EAAOQ,OAASG,EAChBX,EAAOhL,YAAc4L,EAEdZ,GCDMhP,yBAnBA,SAAAC,GAAK,MAAK,CACvB6P,cAAe,CACbzP,MAAO,OACPC,WAAiC,EAArBL,EAAM0B,QAAQC,KAC1BxB,cAAoC,EAArBH,EAAM0B,QAAQC,KAC7BsB,YAAkC,EAArBjD,EAAM0B,QAAQC,KAC3BgN,aAAmC,EAArB3O,EAAM0B,QAAQC,QAajB5B,CATO,SAAA1B,GAAS,IACrBS,EAAYT,EAAZS,QACR,OAAOC,EAAAjG,EAAAkG,cAAA,OAAKC,UAAWH,EAAQ+Q,eAAgBxR,EAAMwE,YCwBxC9C,yBAlCA,SAAAC,GAAK,MAAK,CACvB8P,UAAW,CACT1P,MAAO,OACPF,UAAgC,EAArBF,EAAM0B,QAAQC,KACzBjB,aAAmC,EAArBV,EAAM0B,QAAQC,QA8BjB5B,CA1BK,SAAA1B,GAAS,IACnBS,EAAYT,EAAZS,QACR,OACEC,EAAAjG,EAAAkG,cAAAD,EAAAjG,EAAAyJ,SAAA,KACExD,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEF,UAAWH,EAAQgR,UACnBlR,MAAOP,EAAM0R,cACbtQ,SAAUpB,EAAM2R,UAEhBjR,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAUP,MAAO,GAAjB,QACCP,EAAMjG,OAAOqP,IAAI,SAAAxJ,GAChB,OACEc,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAUgJ,IAAKlK,EAAMxB,GAAImC,MAAOX,EAAMxB,IACnCwB,EAAMuB,YCFNO,yBArBA,SAAAC,GAAK,MAAK,CACvBwB,KAAM,CACJpB,MAAO,OACP+E,gBAAiBnF,EAAMoF,QAAQvE,WAAW+D,MAC1CnD,SAAU,EACVnB,QAAS,OACTE,cAAe,MACfiE,SAAU,OACVyG,eAAgB,WAaLnL,CATC,SAAA1B,GAAS,IACfS,EAAYT,EAAZS,QACR,OAAOC,EAAAjG,EAAAkG,cAAA,OAAKC,UAAWH,EAAQ0C,MAAOnD,EAAMwE,YCK/B9C,yBAnBA,SAAAC,GAAK,MAAK,CACvBiQ,SAAU,CACR9K,gBAAiB,YACjB/E,MAAO,MACP2E,SAAU,IACV6E,OAAQ,QACR1E,UAAW,YAaAnF,CATK,SAAA1B,GAAS,IACnBS,EAAYT,EAAZS,QACR,OAAOC,EAAAjG,EAAAkG,cAAA,OAAKC,UAAWH,EAAQmR,UAAW5R,EAAMwE,YCWnC9C,yBAvBA,SAAAC,GAAK,MAAK,CACvBkQ,UAAW,CACT9P,MAAO,MACP2E,SAAU,IACV6E,OAAQ,QACR1E,UAAW,SACX5E,QAAS,OACTE,cAAe,MACfiE,SAAU,OACVyG,eAAgB,QAChBD,WAAY,WAaDlL,CATM,SAAA1B,GAAS,IACpBS,EAAYT,EAAZS,QACR,OAAOC,EAAAjG,EAAAkG,cAAA,OAAKC,UAAWH,EAAQoR,WAAY7R,EAAMwE,YCiBpC9C,yBA1BA,SAAAC,GAAK,MAAK,CACvBmQ,KAAM,CACJ1P,OAA6B,EAArBT,EAAM0B,QAAQC,KACtBoD,SAA+B,GAArB/E,EAAM0B,QAAQC,MAE1ByO,aAAc,CACZrL,SAA+B,GAArB/E,EAAM0B,QAAQC,QAoBb5B,CAhBC,SAAA1B,GAAS,IACfS,EAAmBT,EAAnBS,QAASuR,EAAUhS,EAAVgS,MACjB,OACEtR,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAMmR,QAAM,EAACrR,UAAWZ,EAAMkS,SAAWzR,EAAQsR,aAAetR,EAAQqR,MACtEpR,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAY3J,OAAQ6I,EAAMmS,aAAcH,MAAOA,IAC/CtR,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,KAAcd,EAAMwE,UACpB9D,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,KAAcd,EAAMoS,YAAcpS,EAAMoS,YAAc,8BCUtDC,iNACJ1b,MAAQ,CACNyN,MAAM,EACNgH,MAAO,MAGT5B,WAAa,WACXzJ,EAAKK,SAAS,CAAEgE,MAAM,IACtBrE,EAAKK,SAAS,CAAEgL,MAAOrL,EAAKC,MAAMoL,WAGpCjE,YAAc,WACZpH,EAAKK,SAAS,CAAEgE,MAAM,OAGxBkO,aAAe,SAAAnR,GAAI,OAAI,SAAAvB,GACrBG,EAAKK,SAALhH,OAAAiH,GAAA,EAAAjH,CAAA,GACG+H,EAAOvB,EAAMU,OAAOC,YAIzBgS,aAAe,WACbxS,EAAKC,MAAMwS,KAAKzS,EAAKC,MAAM5B,GAAI2B,EAAKpJ,MAAMyU,OAC1CrL,EAAKoH,iBAGPsL,aAAe,WACb1S,EAAKC,MAAM0S,OAAO3S,EAAKC,MAAM5B,IAC7B2B,EAAKoH,yFAGE,IACC1G,EAAY9E,KAAKqE,MAAjBS,QACR,OACEC,EAAAjG,EAAAkG,cAAAD,EAAAjG,EAAAyJ,SAAA,KACExD,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAYQ,QAAS3F,KAAK6N,YACxB9I,EAAAjG,EAAAkG,cAAC0L,GAAA5R,EAAD,OAEFiG,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAOsD,KAAMzI,KAAKhF,MAAMyN,KAAMC,QAAS1I,KAAKwL,aAC1CzG,EAAAjG,EAAAkG,cAAA,OAAKC,UAAWH,EAAQkS,kBACtBjS,EAAAjG,EAAAkG,cAACiS,GAAD,CACEV,UAAQ,EACRF,MAAO,YACPG,aACEzR,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAYQ,QAAS3F,KAAK8W,cACxB/R,EAAAjG,EAAAkG,cAACkS,GAAApY,EAAD,OAGJ2X,YACE1R,EAAAjG,EAAAkG,cAAAD,EAAAjG,EAAAyJ,SAAA,KACExD,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAQQ,QAAS3F,KAAK4W,cAAtB,UACA7R,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAQQ,QAAS3F,KAAKwL,aAAtB,YAIJzG,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEkJ,MAAM,OACNpJ,UAAWH,EAAQ4F,UACnB9F,MAAO5E,KAAKhF,MAAMyU,MAClBhK,SAAUzF,KAAK2W,aAAa,sBA3DjB7Q,aAyEZC,yBA9FA,SAAAC,GAAK,MAAK,CACvBgR,iBAAkB,CAChB/O,SAAU,WACVoD,UAAWrF,EAAMsF,QAAQ,GACzBT,IAAG,MACHtB,KAAI,MACJuB,UAAS,yBAEXqM,iBAAkB,CAChBzH,MAAO,SAET2G,MAAO,CACL3P,aAAmC,EAArBV,EAAM0B,QAAQC,MAE9B+C,UAAW,CACTxE,UAAgC,EAArBF,EAAM0B,QAAQC,KACzBjB,aAAmC,EAArBV,EAAM0B,QAAQC,KAC5BvB,MAAO,OA6EIL,CAAmB2Q,IC9DnB3Q,yBAxCA,SAAAC,GAAK,MAAK,CACvBoR,OAAQ,CACNlP,MAAO,OACPiD,gBAAiBnF,EAAMoF,QAAQ9B,QAAQ+N,MAEzCC,UAAW,CACTpP,MAAO,OACPiD,gBAAiBnF,EAAMoF,QAAQmM,UAAUF,KACzClG,aAAc,MAgCHpL,CA5BC,SAAA1B,GAAS,IACfS,EAAyBT,EAAzBS,QAAS0S,EAAgBnT,EAAhBmT,KAAM7Z,EAAU0G,EAAV1G,MACvB,OACEoH,EAAAjG,EAAAkG,cAACyS,GAAA,EAAD,CAAWtJ,IAAKqJ,EAAK/U,GAAIiV,YAAaF,EAAK/U,GAAI9E,MAAOA,GACnD,SAACga,EAAUC,GAAX,OACC7S,EAAAjG,EAAAkG,cAAA,MAAAvH,OAAA8J,OAAA,CACEsQ,IAAKF,EAASG,UACVH,EAASI,eACTJ,EAASK,iBAEbjT,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAUiE,QAAM,EAAC6O,eAAgB5T,EAAM4T,gBACrClT,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAQF,UAAWZ,EAAM6T,IAAMpT,EAAQwS,UAAYxS,EAAQsS,QACxDI,EAAKJ,QAERrS,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAcmE,QAASkO,EAAKW,iBCkBzBpS,yBA3CA,SAAAC,GAAK,MAAK,CACvBkD,KAAM,GACNkP,aAAc,CACZC,UAAW,OAwCAtS,CApCC,SAAA1B,GAAS,IACfS,EAAYT,EAAZS,QACR,OACEC,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEwF,OAAO,EACP2N,gBAAgB,EAChBC,UAAWxT,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,KAAgBd,EAAMkU,YAEjCxT,EAAAjG,EAAAkG,cAACyS,GAAA,EAAD,CAAWe,YAAanU,EAAMmU,aAC3B,SAACb,EAAUC,GAAX,OACC7S,EAAAjG,EAAAkG,cAAA,OAAKC,UAAWH,EAAQsT,aAAcP,IAAKF,EAASG,UACjDzT,EAAMvD,KAAK2M,IAAI,SAAC+J,EAAM7Z,GACrB,OACEoH,EAAAjG,EAAAkG,cAACyT,GAAD,CACEtK,IAAKqJ,EAAK/U,GACV+U,KAAMA,EACN7Z,MAAOA,EACPua,IAAK7T,EAAM6T,IACXD,eAAgB5T,EAAM4T,mBAI3BN,EAASpS,uCCLPQ,yBA3BA,SAAAC,GAAK,MAAK,CACvBoD,OAAQ,CACN3C,OAA6B,EAArBT,EAAM0B,QAAQC,KACtB6B,OAAQ,EACRkP,MAAO,EACPzQ,SAAU,WAsBClC,CAlBM,SAAA1B,GAAS,IACpBS,EAAYT,EAAZS,QACR,OACEC,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACES,QAAQ,MACRsC,MAAM,UACNjD,UAAWH,EAAQsE,OACnBzD,QAAStB,EAAMsB,SAEfZ,EAAAjG,EAAAkG,cAAC2T,GAAA7Z,EAAD,SCFA8Z,iNACJ5d,MAAQ,CACN+a,cAAe,EACf8C,WAAY,GACZC,OAAQ,CACN,CACEtT,KAAM,GACN/C,GAAI,EACJsW,QAAS,QAUfC,UAAY,WACV5U,EAAKC,MAAMC,SAAS,CAAElJ,KAAMM,EAAaG,kBAG3Cma,gDAAW,SAAAiD,EAAMhV,GAAN,OAAApF,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACHkF,EAAKK,SAAS,CAAEsR,cAAe9R,EAAMU,OAAOC,QADzC,OAETR,EAAK4U,YACL5U,EAAK8U,UAHI,wBAAAla,EAAAc,SAAAmZ,EAAAjZ,iEAMXkZ,QAAU,WACyB,IAA7B9U,EAAKpJ,MAAM+a,cACbxW,IAAM,CACJ2N,OAAQ,MACRC,IAAG,8BAAAjK,OAAgCkB,EAAKpJ,MAAM+a,iBAE7C3I,KAAK,SAAAxN,GACJwE,EAAKK,SAALhH,OAAAK,EAAA,EAAAL,CAAA,GAAmBmC,EAASkB,SAE7BuM,MAAM,SAAAC,GACLL,MACE,oEAEFvN,QAAQC,IAAI2N,KAGhBlJ,EAAKK,SAALhH,OAAAK,EAAA,EAAAL,CAAA,GACK2G,EAAKpJ,MADV,CAEE8d,OAAQ,SAKdK,SAAW,WACwB,IAA7B/U,EAAKpJ,MAAM+a,gBACb5R,iBAAM,gBACN5E,IAAM,CACJ2N,OAAQ,MACRC,IAAG,8BAAAjK,OAAgCkB,EAAKpJ,MAAM+a,eAC9CjV,KAAMsD,EAAKpJ,QACVoS,KAAK,WACNhJ,EAAK8U,gBAKXE,QAAU,SAAA3W,GACR,MAAW,eAAPA,EACK2B,EAAKpJ,MAAM6d,WAEXzU,EAAKpJ,MAAM8d,OAAOO,OAAO5W,IAAKsW,WAIzCO,UAAY,SAAAvE,GAAU,IACZQ,EAAwBR,EAAxBQ,OAAQxL,EAAgBgL,EAAhBhL,YAGhB,GAAKA,EAIL,GAC8B,eAA5BA,EAAYyO,aACZzO,EAAYyO,cAAgBjD,EAAOiD,aAIjCpU,EAAKpJ,MAAM8d,OAAOO,OAAOtP,EAAYyO,cAAcO,QAAQ7d,OAAS,EAEpEiJ,iBAAM,yCARV,CAcA,GAAIoR,EAAOiD,cAAgBzO,EAAYyO,YAAa,CAClD,IAAMe,EAAW3E,GACfxQ,EAAKgV,QAAQ7D,EAAOiD,aACpBjD,EAAO5X,MACPoM,EAAYpM,OAGa,eAAvB4X,EAAOiD,YACTpU,EAAKK,SAAS,CACZoU,WAAYU,IAGdnV,EAAKK,SAAS,CACZqU,OAAOrb,OAAAC,EAAA,EAAAD,CACF2G,EAAKpJ,MAAM8d,OAAOzE,MAAM,EAAGgF,OAAO9D,EAAOiD,eADxCtV,OAAA,CAAAzF,OAAAK,EAAA,EAAAL,CAAA,GAGC2G,EAAKpJ,MAAM8d,OAAOvD,EAAOiD,aAH1B,CAIFO,QAASQ,KAJP9b,OAAAC,EAAA,EAAAD,CAMD2G,EAAKpJ,MAAM8d,OAAOzE,MAAMgF,OAAO9D,EAAOiD,aAAe,WAIzD,CAEL,IAAMzD,EAASO,GACblR,EAAKgV,QAAQ7D,EAAOiD,aACpBpU,EAAKgV,QAAQrP,EAAYyO,aACzBjD,EACAxL,GAGyB,eAAvBwL,EAAOiD,YACTpU,EAAKK,SAAS,CACZoU,WAAY9D,EAAOQ,SAGrBnR,EAAKK,SAAS,CACZqU,OAAOrb,OAAAC,EAAA,EAAAD,CACF2G,EAAKpJ,MAAM8d,OAAOzE,MAAM,EAAGgF,OAAO9D,EAAOiD,eADxCtV,OAAA,CAAAzF,OAAAK,EAAA,EAAAL,CAAA,GAGC2G,EAAKpJ,MAAM8d,OAAOvD,EAAOiD,aAH1B,CAIFO,QAAShE,EAAOQ,UAJd9X,OAAAC,EAAA,EAAAD,CAMD2G,EAAKpJ,MAAM8d,OAAOzE,MAAMgF,OAAO9D,EAAOiD,aAAe,OAI9B,eAA5BzO,EAAYyO,YACdpU,EAAKK,SAAS,CACZoU,WAAY9D,EAAOhL,cAGrB3F,EAAKK,SAAS,CACZqU,OAAOrb,OAAAC,EAAA,EAAAD,CACF2G,EAAKpJ,MAAM8d,OAAOzE,MAAM,EAAGgF,OAAOtP,EAAYyO,eAD7CtV,OAAA,CAAAzF,OAAAK,EAAA,EAAAL,CAAA,GAGC2G,EAAKpJ,MAAM8d,OAAO/O,EAAYyO,aAH/B,CAIFO,QAAShE,EAAOhL,eAJdtM,OAAAC,EAAA,EAAAD,CAMD2G,EAAKpJ,MAAM8d,OAAOzE,MAAMgF,OAAOtP,EAAYyO,aAAe,OAKrEpU,EAAK+U,eAGPK,SAAW,WACwB,IAA7BpV,EAAKpJ,MAAM+a,gBACbxW,IAAM,CACJ2N,OAAQ,OACRC,IAAG,kCAAAjK,OAAoCkB,EAAKpJ,MAAM+a,iBACjD3I,KAAK,WACNhJ,EAAK8U,YAEP/U,iBAAM,oBAIVsV,UAAY,SAACC,EAASC,GACpBpa,IAAM,CACJ2N,OAAQ,MACRC,IAAG,+BAAAjK,OAAiCwW,GACpC5Y,KAAM,CAAE0E,KAAMmU,KACbvM,KAAK,WACNhJ,EAAK8U,UACL/U,iBAAM,4BAIVyV,YAAc,SAAAF,GACZna,IAAM,CACJ2N,OAAQ,SACRC,IAAG,oCAAAjK,OAAsCwW,KACxCtM,KAAK,WACNhJ,EAAK8U,UACL/U,iBAAM,0GAjLRnE,KAAKkZ,UACLlZ,KAAKgZ,6CAoLE,IAAAnU,EAAA7E,KACP,OACE+E,EAAAjG,EAAAkG,cAAAD,EAAAjG,EAAAyJ,SAAA,KACExD,EAAAjG,EAAAkG,cAAC6U,GAAD,KACE9U,EAAAjG,EAAAkG,cAACyS,GAAA,EAAD,CAAiB6B,UAAWtZ,KAAKsZ,WAC/BvU,EAAAjG,EAAAkG,cAAC8U,GAAD,KACE/U,EAAAjG,EAAAkG,cAAC+U,GAAD,KACEhV,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAYS,QAAQ,MAApB,cACAb,EAAAjG,EAAAkG,cAACgV,GAAD,CACEjE,cAAe/V,KAAKhF,MAAM+a,cAC1B3X,OAAQ4B,KAAKqE,MAAMjG,OACnB4X,SAAUhW,KAAKgW,YAGnBjR,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,MACAJ,EAAAjG,EAAAkG,cAACiV,GAAD,CACE1B,UAAU,0BACVC,YAAY,aACZ1X,KAAMd,KAAKhF,MAAM6d,WAAWpL,IAAI,SAAA+J,GAG9B,OAFAA,EAAKW,SAAWX,EAAK5I,WAAa,IAAM4I,EAAK3I,UAC7C2I,EAAKJ,OAASI,EAAKzI,SACZyI,OAIbzS,EAAAjG,EAAAkG,cAACkV,GAAD,KACGla,KAAKhF,MAAM8d,OAAO5d,OAAS,GAC1B8E,KAAKhF,MAAM8d,OAAOrL,IAAI,SAAC0M,EAAOxc,GAC5B,OACEoH,EAAAjG,EAAAkG,cAACiS,GAAD,CACE9I,IAAKgM,EAAM1X,GACX4T,MAAO8D,EAAM3U,KACbgR,aACEzR,EAAAjG,EAAAkG,cAACoV,GAAD,CACE3X,GAAI0X,EAAM1X,GACVgN,MAAO0K,EAAM3U,KACbqR,KAAMhS,EAAK4U,UACX1C,OAAQlS,EAAK+U,eAIjB7U,EAAAjG,EAAAkG,cAACiV,GAAD,CACEhC,gBAAc,EACdO,YAAa7a,EAAM0c,WACnBvZ,KAAMqZ,EAAMpB,QAAQtL,IAAI,SAAA+J,GAItB,OAHAA,EAAKW,SACHX,EAAK5I,WAAa,IAAM4I,EAAK3I,UAC/B2I,EAAKJ,OAASI,EAAKzI,SACZyI,WAQvBzS,EAAAjG,EAAAkG,cAACsV,GAAD,CAAc3U,QAAS3F,KAAKwZ,oBA3PV1T,aAuQba,eALS,SAAA3L,GAAK,MAAK,CAChCkD,KAAMlD,EAAMkD,KACZE,OAAQpD,EAAMoD,SAGDuI,CAAyBiS,IC1QlC2B,iNACJvf,MAAQ,CACN6d,WAAY,GACZ1a,MAAO,CACL,CACEqH,KAAM,GACN/C,GAAI,EACJ+X,SAAU,QAShBtB,QAAU,WACR3Z,IAAM,CACJ2N,OAAQ,MACRC,IAAG,iCAEFC,KAAK,SAAAxN,GAEJ,OADAwE,EAAKK,SAALhH,OAAAK,EAAA,EAAAL,CAAA,GAAmBmC,EAASkB,OACrBlB,IAERyN,MAAM,SAAAC,GACLL,MACE,qEAEFvN,QAAQC,IAAI2N,QAIlB6L,SAAW,WACT5Z,IAAM,CACJ2N,OAAQ,MACRC,IAAG,+BACHrM,KAAMsD,EAAKpJ,QACVoS,KAAK,WACNjJ,iBAAM,oBACNC,EAAK8U,eAITE,QAAU,SAAA3W,GACR,MAAW,eAAPA,EACK2B,EAAKpJ,MAAM6d,WAEXzU,EAAKpJ,MAAMmD,MAAMkb,OAAO5W,IAAK+X,YAIxClB,UAAY,SAAAvE,GAAU,IACZQ,EAAwBR,EAAxBQ,OAAQxL,EAAgBgL,EAAhBhL,YAGhB,GAAKA,EAAL,CAKA,GAAIwL,EAAOiD,cAAgBzO,EAAYyO,YAAa,CAClD,IAAMe,EAAW3E,GACfxQ,EAAKgV,QAAQ7D,EAAOiD,aACpBjD,EAAO5X,MACPoM,EAAYpM,OAGa,eAAvB4X,EAAOiD,YACTpU,EAAKK,SAAS,CACZoU,WAAYU,IAGdnV,EAAKK,SAAS,CACZtG,MAAMV,OAAAC,EAAA,EAAAD,CACD2G,EAAKpJ,MAAMmD,MAAMkW,MAAM,EAAGgF,OAAO9D,EAAOiD,eADxCtV,OAAA,CAAAzF,OAAAK,EAAA,EAAAL,CAAA,GAGE2G,EAAKpJ,MAAMmD,MAAMoX,EAAOiD,aAH1B,CAIDgC,SAAUjB,KAJT9b,OAAAC,EAAA,EAAAD,CAMA2G,EAAKpJ,MAAMmD,MAAMkW,MAAMgF,OAAO9D,EAAOiD,aAAe,WAIxD,CAEL,IAAMzD,EAASO,GACblR,EAAKgV,QAAQ7D,EAAOiD,aACpBpU,EAAKgV,QAAQrP,EAAYyO,aACzBjD,EACAxL,GAGyB,eAAvBwL,EAAOiD,YACTpU,EAAKK,SAAS,CACZoU,WAAY9D,EAAOQ,SAGrBnR,EAAKK,SAAS,CACZtG,MAAMV,OAAAC,EAAA,EAAAD,CACD2G,EAAKpJ,MAAMmD,MAAMkW,MAAM,EAAGgF,OAAO9D,EAAOiD,eADxCtV,OAAA,CAAAzF,OAAAK,EAAA,EAAAL,CAAA,GAGE2G,EAAKpJ,MAAMmD,MAAMoX,EAAOiD,aAH1B,CAIDgC,SAAUzF,EAAOQ,UAJhB9X,OAAAC,EAAA,EAAAD,CAMA2G,EAAKpJ,MAAMmD,MAAMkW,MAAMgF,OAAO9D,EAAOiD,aAAe,OAI7B,eAA5BzO,EAAYyO,YACdpU,EAAKK,SAAS,CACZoU,WAAY9D,EAAOhL,cAGrB3F,EAAKK,SAAS,CACZtG,MAAMV,OAAAC,EAAA,EAAAD,CACD2G,EAAKpJ,MAAMmD,MAAMkW,MAAM,EAAGgF,OAAOtP,EAAYyO,eAD7CtV,OAAA,CAAAzF,OAAAK,EAAA,EAAAL,CAAA,GAGE2G,EAAKpJ,MAAMmD,MAAM4L,EAAYyO,aAH/B,CAIDgC,SAAUzF,EAAOhL,eAJhBtM,OAAAC,EAAA,EAAAD,CAMA2G,EAAKpJ,MAAMmD,MAAMkW,MAAMgF,OAAOtP,EAAYyO,aAAe,OAKpEpU,EAAK+U,eAGPsB,QAAU,WACRlb,IAAM,CACJ2N,OAAQ,OACRC,IAAG,+BACFC,KAAK,WACNhJ,EAAK8U,YAEP/U,iBAAM,wBAGRuW,SAAW,SAACC,EAAQhB,GAClBpa,IAAM,CACJ2N,OAAQ,MACRC,IAAG,8BAAAjK,OAAgCyX,GACnC7Z,KAAM,CAAE0E,KAAMmU,KACbvM,KAAK,WACNhJ,EAAK8U,YAEP/U,iBAAM,yBAGRyW,WAAa,SAAAD,GACXpb,IAAM,CACJ2N,OAAQ,SACRC,IAAG,yBAAAjK,OAA2ByX,KAC7BvN,KAAK,WACNhJ,EAAK8U,YAEP/U,iBAAM,uGAhJNnE,KAAKkZ,2CAmJE,IAAArU,EAAA7E,KACP,OACE+E,EAAAjG,EAAAkG,cAAAD,EAAAjG,EAAAyJ,SAAA,KACExD,EAAAjG,EAAAkG,cAAC6U,GAAD,KACE9U,EAAAjG,EAAAkG,cAACyS,GAAA,EAAD,CAAiB6B,UAAWtZ,KAAKsZ,WAC/BvU,EAAAjG,EAAAkG,cAAC8U,GAAD,KACE/U,EAAAjG,EAAAkG,cAAC+U,GAAD,KACEhV,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAYS,QAAQ,MAApB,gBAEFb,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,MACAJ,EAAAjG,EAAAkG,cAACiV,GAAD,CACE1B,UAAU,0BACVL,KAAG,EACHM,YAAY,aACZ1X,KAAMd,KAAKhF,MAAM6d,WAAWpL,IAAI,SAAA+J,GAG9B,OAFAA,EAAKW,SAAWX,EAAKhS,KACrBgS,EAAKJ,OAASI,EAAKqD,WACZrD,OAIbzS,EAAAjG,EAAAkG,cAACkV,GAAD,KACGla,KAAKhF,MAAMmD,MAAMjD,OAAS,GACzB8E,KAAKhF,MAAMmD,MAAMsP,IAAI,SAAClK,EAAM5F,GAC1B,OACEoH,EAAAjG,EAAAkG,cAACiS,GAAD,CACE9I,IAAK5K,EAAKd,GACV4T,MAAO9S,EAAKiC,KACZgR,aACEzR,EAAAjG,EAAAkG,cAACoV,GAAD,CACE3X,GAAIc,EAAKd,GACTgN,MAAOlM,EAAKiC,KACZqR,KAAMhS,EAAK6V,SACX3D,OAAQlS,EAAK+V,cAIjB7V,EAAAjG,EAAAkG,cAACiV,GAAD,CACE/B,KAAG,EAEHM,YAAa7a,EAAM0c,WACnBvZ,KAAMyC,EAAKiX,SAAS/M,IAAI,SAAA+J,GAItB,OAHAA,EAAKW,SAAWX,EAAKhS,KAErBgS,EAAKJ,OAASI,EAAKqD,WACZrD,WAQvBzS,EAAAjG,EAAAkG,cAACsV,GAAD,CAAc3U,QAAS3F,KAAKya,mBArNT3U,aAgOda,eAJS,SAAA3L,GAAK,MAAK,CAChCkD,KAAMlD,EAAMkD,OAGCyI,CAAyB4T,6CCvKzBxU,yBAjEA,SAAAC,GAAK,MAAK,CACvBnI,MAAO,CACL+R,OAAQ,MACRxJ,MAAO,OACPgL,WAAY,MACZ3C,SAAU,MACV6E,UAAW,QAEbwH,QAAS,CACPlL,OAAQ,MACRxJ,MAAO,OACPgL,WAAY,OACZ3C,SAAU,OACVzD,SAAU,QAEZwF,QAAS,CACP/B,SAAU,MACV3G,WAAY,KACZ7B,WAAY,qBACZ+E,SAAU,OACVzE,SAAU,SACVwU,aAAc,cA4CHhV,CAxCK,SAAA1B,GAAS,IACnBS,EAAYT,EAAZS,QAER,OACEC,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,KACEJ,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAc6V,mBAAiB,EAAC/V,UAAWH,EAAQ0L,SAChDnM,EAAMmM,QAAQ5B,YAEjB7J,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAYF,UAAWH,EAAQjH,OAC5BwG,EAAMmM,QAAQlT,MAAM2d,OAAO,SAACC,EAAYC,GACvC,OAAOD,EAAaC,GACnB,GAHL,IAKG9W,EAAMmM,QAAQlT,MAAM2d,OAAO,SAACC,EAAYC,GACvC,OAAoB,OAAhBA,EACKD,EAEAA,EAAa,GAErB,IAELnW,EAAAjG,EAAAkG,cAACoW,GAAAtc,EAAD,CACE8F,MAAOP,EAAMmM,QAAQlT,MAAM+G,EAAMzG,MAAQ,GACzC8V,WAAS,EACTpH,UAAQ,EACR7G,SAAU,SAACxB,EAAOW,GAChBP,EAAMgX,SAAShX,EAAM1G,MAAO0G,EAAMzG,MAAOgH,KAG3CG,EAAAjG,EAAAkG,cAACsW,GAAAxc,EAAD,CAAcmG,UAAWH,EAAQgW,QAASlW,MAAO,GAAjD,KAGAG,EAAAjG,EAAAkG,cAACsW,GAAAxc,EAAD,CAAcmG,UAAWH,EAAQgW,QAASlW,MAAO,GAAjD,SCQOmB,yBAxEA,SAAAC,GAAK,MAAK,CACvBuV,OAAQ,CACNnV,MAAO,OACPwJ,OAA6B,EAArB5J,EAAM0B,QAAQC,MAExB6T,kBAAmB,CACjBvT,SAAU,QACVsB,KAAM,MACNC,OAA6B,EAArBxD,EAAM0B,QAAQC,KACtBmD,UAAS,sBACT1E,MAAO,OAETqV,qBAAsB,CACpBxT,SAAU,WACVsB,KAAM,MACNC,OAA6B,EAArBxD,EAAM0B,QAAQC,KACtBmD,UAAS,sBACT1E,MAAO,SAuDIL,CAnDc,SAAA1B,GAAS,IAC5BS,EAAYT,EAAZS,QACF4W,EAAiBrX,EAAMhH,SAAS4d,OAAO,SAACU,EAAKC,GACjD,OAA8C,OAA1CA,EAAQte,MAAM+G,EAAM7F,aAAe,GAC9Bmd,EAEAA,EAAM,GAEd,GACGE,EAAoBxX,EAAMhH,SAAS4d,OAAO,SAACU,EAAKC,GACpD,OACED,EACAC,EAAQte,MAAM2d,OAAO,SAACa,EAAUX,GAC9B,OAAoB,OAAhBA,EACKW,EAEAA,EAAW,GAEnB,IAEJ,GAEH,OACE/W,EAAAjG,EAAAkG,cAAAD,EAAAjG,EAAAyJ,SAAA,KACGlE,EAAM7F,aAAe,EACpBuG,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACES,QAAQ,YACRsC,MAAM,UACN6T,KAAK,QACL9W,UAAWH,EAAQ0W,kBACnBQ,SAAUN,EAAiBrX,EAAMhH,SAASnC,OAC1CyK,QAAStB,EAAM4X,WANjB,cAWAlX,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACES,QAAQ,YACRsC,MAAM,UACN6T,KAAK,QACL9W,UAAWH,EAAQ0W,kBACnBQ,SAAUH,EAA4C,EAAxBxX,EAAMhH,SAASnC,OAC7CyK,QAAStB,EAAM4X,WANjB,oBCEFC,iNACJlhB,MAAQ,CACNwW,KAAM,EACN2K,cAAe,EACfC,cAAc,EACdC,iBAAiB,KAGnBC,YAAc,SAACrY,EAAOW,GACpBR,EAAKC,MAAMC,SAAS,CAClBlJ,KAAMM,EAAaO,kBACnBR,QAASmJ,OAIbqX,UAAY,WACN7X,EAAKC,MAAM7F,aAAe,EAC5B4F,EAAKC,MAAMC,SAAS,CAClBlJ,KAAMM,EAAaO,kBACnBR,QAAS2I,EAAKC,MAAM7F,aAAe,KAGrC2F,iBAAM,mCAAoC,CACxC8D,SAAU9D,SAAMoY,SAASC,aAE3BpY,EAAKC,MAAMC,SAAS,CAClBlJ,KAAMM,EAAaW,cACnBZ,QAAS2I,EAAKC,MAAM9F,mBAK1B8c,SAAW,SAAC1d,EAAOC,EAAOgH,GACxBR,EAAKC,MAAMC,SAAS,CAClBlJ,KAAMM,EAAaU,SACnBX,QAAS,CACPkC,MAAOA,EACPC,MAAOA,EACPC,MAAO+G,gFAKJ,IAAAC,EAAA7E,KACC8E,EAAY9E,KAAKqE,MAAjBS,QAER,OACEC,EAAAjG,EAAAkG,cAAA,OAAKC,UAAWH,EAAQ2X,cACtB1X,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAYuX,MAAM,SAAS9W,QAAQ,MAAnC,aACa5F,KAAKqE,MAAM9F,aAAapB,WAAWC,kBAEhD2H,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAASF,UAAWH,EAAQ6X,aAC5B5X,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAYF,UAAWH,EAAQ1F,QAASsd,MAAM,SAAS9W,QAAQ,MAA/D,UAGAb,EAAAjG,EAAAkG,cAACyO,GAAA,EAAD,CACE7O,MAAO5E,KAAKqE,MAAM7F,aAClBkV,WAAS,EACTjO,SAAUzF,KAAKsc,YACfrX,UAAWH,EAAQ8X,iBAEnB7X,EAAAjG,EAAAkG,cAACyO,GAAA,EAAD,CAAcxO,UAAWH,EAAQgW,QAASlW,MAAO,GAAjD,KAGAG,EAAAjG,EAAAkG,cAACyO,GAAA,EAAD,CAAcxO,UAAWH,EAAQgW,QAASlW,MAAO,GAAjD,KAGAG,EAAAjG,EAAAkG,cAACyO,GAAA,EAAD,CAAcxO,UAAWH,EAAQgW,QAASlW,MAAO,GAAjD,KAGAG,EAAAjG,EAAAkG,cAACyO,GAAA,EAAD,CAAcxO,UAAWH,EAAQgW,QAASlW,MAAO,GAAjD,KAGAG,EAAAjG,EAAAkG,cAACyO,GAAA,EAAD,CAAcxO,UAAWH,EAAQgW,QAASlW,MAAO,GAAjD,MAIFG,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAYuX,MAAM,SAASzX,UAAWH,EAAQ+X,WAAYjX,QAAQ,MAC/D,IADH,YAIAb,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAASF,UAAWH,EAAQgY,aAC5B/X,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,KACGnF,KAAKqE,MAAM9F,aAAalB,SAASnC,OAAS,GACzC8E,KAAKqE,MAAM9F,aAAalB,SAASoQ,IAAI,SAAC+C,EAAS7S,GAC7C,OACEoH,EAAAjG,EAAAkG,cAAC+X,GAAD,CACE5O,IAAKqC,EAAQwM,WACbxM,QAASA,EACT5S,MAAOiH,EAAKR,MAAM7F,aAClBb,MAAOA,EACP0d,SAAUxW,EAAKwW,cAKzBtW,EAAAjG,EAAAkG,cAACiY,GAAD,CACE5f,SAAU2C,KAAKqE,MAAM9F,aAAalB,SAClCmB,aAAcwB,KAAKqE,MAAM7F,aACzByd,UAAWjc,KAAKic,oBAnGJnW,aAoHhBoX,GAASnX,sBA1JA,SAAAC,GAAK,MAAK,CACvB4W,gBAAiB,CACftW,QAAS,OACTC,SAAU,SACV4W,mBAAoB,SACpB3W,cAAe,MACfC,OAAQ,IACRL,MAAO,QACPgX,OAAQ,EACRjM,aAAc,GAEhBsL,aAAc,CACZzR,SAAU,IACVC,UAAW,KAEb6P,QAAS,CACPlL,OAAQ,MACRxJ,MAAO,OACPgL,WAAY,MACZ3C,SAAU,MACVwC,WAAY,QACZ3K,QAAS,QAEXlH,QAAS,CACP+G,cAAe,MAEjB0W,WAAY,CACVxW,WAAY,KACZoI,SAAU,OAEZqO,WAAY,CACV5W,UAAW,GAEbyW,WAAY,CACVzW,UAAW,KAwHAH,CAAmBmW,IAEnBvV,eARS,SAAA0W,GAAU,MAAK,CACrC7e,aAAc6e,EAAW7e,aACzBD,aAAc8e,EAAW9e,aACzBua,OAAQuE,EAAWhf,gBAKNsI,CAAyBuW,IC1IlCI,iNACJtiB,MAAQ,CAEN4J,MAAO,GAEP2Y,WAAW,EACXha,KAAM,GACNia,QAAS,KAQXxP,gBAAkB,SAAAxJ,GAAY,OAAI,SAAAP,GAAS,IAAAwZ,EACzCtZ,iBAAM,iBACNC,EAAKK,SAALhH,OAAAK,EAAA,EAAAL,CAAA,GACK2G,EAAKpJ,OADVyiB,EAAA,GAAAhgB,OAAAiH,GAAA,EAAAjH,CAAAggB,EAEGjZ,EAAeP,EAAMU,OAAOC,OAF/BnH,OAAAiH,GAAA,EAAAjH,CAAAggB,EAAA,UAGW,GAHXA,SAQF7G,aAAe,SAAA3S,GACbG,EAAKC,MAAMC,SAAS,CAClBlJ,KAAMM,EAAaQ,oBACnBT,QAAS2I,EAAKpJ,MAAMuI,OAEtBU,EAAMC,iBACNE,EAAKK,SAALhH,OAAAK,EAAA,EAAAL,CAAA,GACK2G,EAAKpJ,MADV,CAEEuiB,WAAYnZ,EAAKpJ,MAAMuiB,UACvBha,KAAM,4FAtBRvD,KAAKqE,MAAMC,SAAS,CAAElJ,KAAMM,EAAagB,+CA4BzC,IAAIghB,EACA1d,KAAKhF,MAAMuiB,YACbG,EAAc1d,KAAKqE,MAAM2F,QAAQ/G,K3BhFX,a2B4EjB,IAMC6B,EAAY9E,KAAKqE,MAAjBS,QACR,OACEC,EAAAjG,EAAAkG,cAAA,WACED,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAYF,UAAWH,EAAQgM,OAAQlL,QAAQ,MAA/C,iBAGAb,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAYF,UAAWH,EAAQ6Y,WAAY/X,QAAQ,MAAnD,iCAGAb,EAAAjG,EAAAkG,cAAA,QAAMK,SAAUrF,KAAK4W,cACnB7R,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,KACEJ,EAAAjG,EAAAkG,cAAAD,EAAAjG,EAAAyJ,SAAA,KACExD,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEF,UAAWH,EAAQgR,UACnBlR,MAAO5E,KAAKhF,MAAMuI,KAClBkC,SAAUzF,KAAKgO,gBAAgB,SAE9BhO,KAAKqE,MAAMlG,MAAMsP,IAAI,SAAAlK,GACpB,OACEwB,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAUgJ,IAAK5K,EAAKd,GAAImC,MAAOrB,EAAKd,IACjCc,EAAKiC,WAOlBT,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACES,QAAQ,YACRsC,MAAM,UACN9M,KAAK,SACLoK,KAAK,SACLZ,MAAM,WACNK,UAAWH,EAAQ0W,mBANrB,WAUCkC,WAjFiB5X,aAkGtB8X,GAAQ7X,sBA1HC,SAAAC,GAAK,MAAK,CACvB8P,UAAW,CACT1P,MAAO,OACPC,WAAY,OACZH,UAAgC,EAArBF,EAAM0B,QAAQC,KACzBjB,aAAmC,EAArBV,EAAM0B,QAAQC,KAC5BiI,OAAQ,OAEV4L,kBAAmB,CACjBvT,SAAU,QACVsB,KAAM,MACNC,OAA6B,EAArBxD,EAAM0B,QAAQC,KACtBmD,UAAS,sBACT1E,MAAO,OAET0K,OAAQ,CACNwC,UAAW,UAEbqK,WAAY,CACVtX,WAAY,OACZiN,UAAW,YAsGDvN,CAAmBuX,IAElB3W,eARS,SAAA0W,GAAU,MAAK,CACrCA,aACAlf,MAAOkf,EAAWlf,MAClBD,KAAMmf,EAAWnf,OAKJyI,CAAyBiX,IChGlCC,iNACJ7iB,MAAQ,CACN4T,WAAY,GACZC,UAAW,GACXC,MAAO,GACPE,MAAO,GACPD,SAAU,GACVE,WAAY,GACZvB,YAAa,CACXtP,OAAQ,OAQZ0f,oBAAsB,WACpB,IAAIC,EAAQ,CACVtb,GAAI2B,EAAKC,MAAM2Z,MAAMxb,OAAOC,GAC5Bwb,KAAM7Z,EAAKC,MAAM2Z,MAAMxb,OAAOyb,MAEhC1e,IAAM,CACJ2N,OAAQ,MACRC,IAAG,qBAAAjK,OAAuB6a,EAAMtb,GAA7B,KAAAS,OAAmC6a,EAAME,QAC3C7Q,KAAK,SAAAxN,GACNwE,EAAKK,SAAS,CAAEiJ,YAAa9N,EAASkB,YAI1Cod,gBAAkB,SAAAja,GAChBA,EAAMC,iBACN,IAAM4J,EAAO1J,EAAKpJ,MACd+iB,EAAQ,CACVtb,GAAI2B,EAAKC,MAAM2Z,MAAMxb,OAAOC,GAC5Bwb,KAAM7Z,EAAKC,MAAM2Z,MAAMxb,OAAOyb,MAGhC,GAAI7Z,EAAKpJ,MAAM+T,SAAW,IAAM3K,EAAKpJ,MAAM+T,SAAW,GAEpD,OADA9B,MAAM,+CACC,EAGL7I,EAAKpJ,MAAMgU,MAAMyB,SAAS,MAC5BxD,MAAM,uCAGR1N,IAAM,CACJ2N,OAAQ,OACRC,IAAG,qBAAAjK,OAAuB6a,EAAMtb,GAA7B,KAAAS,OAAmC6a,EAAME,MAC5Cnd,KAAMgN,IAELV,KAAK,SAAAxN,GACJwE,EAAKK,SAAS,CACZmK,WAAY,GACZC,UAAW,GACXC,MAAO,GACPE,MAAO,GACPD,SAAU,GACVE,WAAY,GACZvB,YAAa,CACXtP,OAAQ,MAGZgG,EAAK0Z,wBAENzQ,MAAM,SAAAC,GACL5N,QAAQC,IAAI,iCAAkC2N,GAC9CL,MAAM,+CAEV9I,iBAAM,yBAGR6J,gBAAkB,SAAAxJ,GAAY,OAAI,SAAAP,GAChCG,EAAKK,SAALhH,OAAAK,EAAA,EAAAL,CAAA,GACK2G,EAAKpJ,MADVyC,OAAAiH,GAAA,EAAAjH,CAAA,GAEG+G,EAAeP,EAAMU,OAAOC,aAIjCuZ,qBAAuB,SAACla,EAAOma,GAG7B,IAAIC,EAAqBja,EAAKpJ,MAAM0S,YAAYtP,OAAOkgB,UACrD,SAAA9G,GAAI,OAAIA,EAAK/U,KAAO8b,SAASta,EAAMU,OAAOC,SAE5CR,EAAKK,SAALhH,OAAAK,EAAA,EAAAL,CAAA,GACK2G,EAAKpJ,MADV,CAEE0S,YAAYjQ,OAAAK,EAAA,EAAAL,CAAA,GACP2G,EAAKpJ,MAAM0S,YADL,CAETtP,OAAOX,OAAAC,EAAA,EAAAD,CACF2G,EAAKpJ,MAAM0S,YAAYtP,OAAOiW,MAAM,EAAGgK,IADtCnb,OAAA,CAAAzF,OAAAK,EAAA,EAAAL,CAAA,GAGC2G,EAAKpJ,MAAM0S,YAAYtP,OAAOigB,GAH/B,CAIFD,QAASA,KAJP3gB,OAAAC,EAAA,EAAAD,CAMD2G,EAAKpJ,MAAM0S,YAAYtP,OAAOiW,MAAMgK,EAAqB,gGAlFlEre,KAAK8d,uDAwFE,IAAAjZ,EAAA7E,KACC8E,EAAY9E,KAAKqE,MAAjBS,QAER,OAOEC,EAAAjG,EAAAkG,cAAA,WACED,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAMF,UAAWH,EAAQ0Z,cACvBzZ,EAAAjG,EAAAkG,cAAA,cACED,EAAAjG,EAAAkG,cAAA,QAAMK,SAAUrF,KAAKke,iBACnBnZ,EAAAjG,EAAAkG,cAAA,kCACAD,EAAAjG,EAAAkG,cAAA,WACED,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEkJ,MAAM,aACNjT,KAAK,OACLoK,KAAK,aACLZ,MAAO5E,KAAKhF,MAAM4T,WAClBnJ,SAAUzF,KAAKgO,gBAAgB,iBAGnCjJ,EAAAjG,EAAAkG,cAAA,WACED,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEkJ,MAAM,YACNjT,KAAK,OACLoK,KAAK,YACLZ,MAAO5E,KAAKhF,MAAM6T,UAClBpJ,SAAUzF,KAAKgO,gBAAgB,gBAGnCjJ,EAAAjG,EAAAkG,cAAA,WACED,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEkJ,MAAM,QACNjT,KAAK,OACLoK,KAAK,QACLZ,MAAO5E,KAAKhF,MAAM8T,MAClBrJ,SAAUzF,KAAKgO,gBAAgB,YAGnCjJ,EAAAjG,EAAAkG,cAAA,WACED,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEkJ,MAAM,eACN9I,YAAY,aACZnK,KAAK,OACLoK,KAAK,QACLZ,MAAO5E,KAAKhF,MAAMgU,MAClBvJ,SAAUzF,KAAKgO,gBAAgB,YAGnCjJ,EAAAjG,EAAAkG,cAAA,WACED,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEkJ,MAAM,WACNjT,KAAK,OACLoK,KAAK,WACLiZ,IAAI,KACJC,IAAI,KACJ9Z,MAAO5E,KAAKhF,MAAM+T,SAClBtJ,SAAUzF,KAAKgO,gBAAgB,eAGnCjJ,EAAAjG,EAAAkG,cAAA,WACED,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEkJ,MAAM,QACNjT,KAAK,OACLoK,KAAK,aACLZ,MAAO5E,KAAKhF,MAAMiU,WAClBxJ,SAAUzF,KAAKgO,gBAAgB,iBAGnCjJ,EAAAjG,EAAAkG,cAAA,OAAKC,UAAWH,EAAQgM,QACtB/L,EAAAjG,EAAAkG,cAAA,MAAIC,UAAWH,EAAQgM,QAAvB,qBAEF/L,EAAAjG,EAAAkG,cAAA,WACGhF,KAAKhF,MAAM0S,YAAYtP,OAAOqP,IAAI,SAAAkG,GACjC,OACE5O,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CAAMF,UAAWH,EAAQ6Z,UAAWxQ,IAAKwF,EAAGlR,IAC1CsC,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,KACGwO,EAAGnO,KACJT,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,KACEJ,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACEP,MAAO+O,EAAGlR,GACVgD,SAAUZ,EAAKsZ,6BAQ7BpZ,EAAAjG,EAAAkG,cAAA,WACED,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,CACES,QAAQ,YACRsC,MAAM,UACN9M,KAAK,SACLoK,KAAK,SACLZ,MAAM,YALR,wBAnMsBkB,aAyNvBC,yBAvPA,SAAAC,GAAK,MAAK,CACvBwY,aAAc,CACZvY,WAAY,qBACZE,cAAe,KACfE,WAAY,KACZ4B,SAAU,WACV2W,OAAQ,EACRtY,QAAS,OACTC,SAAU,SACV4W,mBAAoB,SACpB3W,cAAe,SACfC,OAAQ,SACRuE,SAAU,IACVoS,OAAQ,EACRjM,aAAc,EACdjL,UAAW,KACX2Y,UAAW,QAGbF,UAAW,CACTE,UAAW,OACXvL,UAAW,OACXwL,cAAe,OAGjBhO,OAAQ,CACN5K,UAAW,SA6NAH,CAAmB8X,ICxN5B7X,GAAQ+Y,0BAAe,CAC3B3T,QAAS,CACP9B,QAAS,CAAE+N,KAAM,WACjBE,UAAW,CAAEF,KAAM,YAErB2H,WAAY,CACVC,iBAAiB,KAafC,oMAEFlf,KAAKqE,MAAMC,SAAS,CAAElJ,KAAMtB,EAAca,8CAGnC,IACCmK,EAAY9E,KAAKqE,MAAjBS,QACR,OACEC,EAAAjG,EAAAkG,cAACma,GAAA,EAAD,KACEpa,EAAAjG,EAAAkG,cAAA,WACED,EAAAjG,EAAAkG,cAACoa,GAAA,iBAAD,CAAkBpZ,MAAOA,IACvBjB,EAAAjG,EAAAkG,cAACG,GAAA,EAAD,MACAJ,EAAAjG,EAAAkG,cAACqa,GAAD,MACAta,EAAAjG,EAAAkG,cAACsa,GAAA,EAAD,KAEEva,EAAAjG,EAAAkG,cAACua,GAAA,EAAD,CAAUC,OAAK,EAACvK,KAAK,IAAIwK,G7BjFZ,Y6BmFb1a,EAAAjG,EAAAkG,cAAC0a,GAAD,CACEF,OAAK,EACLG,K7BvFsB,sB6BwFtBxY,UAAWwF,KAEb5H,EAAAjG,EAAAkG,cAAC0a,GAAD,CACEF,OAAK,EACLG,K7B3FoB,oB6B4FpBxY,UAAWyY,KAEb7a,EAAAjG,EAAAkG,cAAC0a,GAAD,CACEF,OAAK,EACLG,K7B/FW,U6BgGXxY,UAAW0Y,KAEb9a,EAAAjG,EAAAkG,cAAC0a,GAAD,CACEF,OAAK,EACLG,K7B9FY,W6B+FZxY,UAAWoK,KAEbxM,EAAAjG,EAAAkG,cAAC0a,GAAD,CACEF,OAAK,EACLG,K7BxGc,a6ByGdxY,UAAWyR,KAEb7T,EAAAjG,EAAAkG,cAAC0a,GAAD,CACEF,OAAK,EACLG,K7B5Ge,c6B6GfxY,UAAWoT,KAEbxV,EAAAjG,EAAAkG,cAAC0a,GAAD,CACEF,OAAK,EACLG,K7BhHe,e6BiHfxY,UAAWmW,KAEbvY,EAAAjG,EAAAkG,cAAC0a,GAAD,CAAgBF,OAAK,EAACG,K7BlHR,W6BkH4BxY,UAAW+U,KACrDnX,EAAAjG,EAAAkG,cAACsC,GAAA,EAAD,CACEqY,KAAM,0BACNxY,UAAW0W,KAWb9Y,EAAAjG,EAAAkG,cAACsC,GAAA,EAAD,CAAOwY,OAAQ,kBAAM/a,EAAAjG,EAAAkG,cAAA,sBAGzBD,EAAAjG,EAAAkG,cAAC+a,GAAA,eAAD,CACE9X,SAAU9D,SAAMoY,SAASyD,UACzBC,eAAgBnb,EAAQob,UACxB7M,WAAY8M,SACZC,UAAW,IACXC,iBAAe,EACfC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,yBAAuB,EACvBC,WAAS,EACTC,cAAY,aAhFN7a,aAuFHC,yBAhGA,CACbma,UAAW,CACT/U,gBAAiB,oBACjBjD,MAAO,QACPoL,UAAW,SACXrN,WAAY,uBA2FDF,CAAmBY,cAAUuY,KC/ItC0B,GAAiBC,cAKjBC,GAEJ,CAACF,IAGGG,GAAmBC,OAAOC,sCAAwC1S,IAClE2S,GAAQC,YAGZnjB,EACA+iB,GAEEK,IAAeC,WAAf,EAAmBP,MAMvBF,GAAeU,IAAI5d,IAEnB6d,IAASzB,OACP/a,EAAAjG,EAAAkG,cAACwc,EAAA,EAAD,CAAUN,MAAOA,IACfnc,EAAAjG,EAAAkG,cAACyc,GAAD,OAEFC,SAASC,eAAe","file":"static/js/main.84d483d7.chunk.js","sourcesContent":["export const LOGIN_ACTIONS = { \n  LOGIN: \"LOGIN\",\n  LOGOUT: \"LOGOUT\",\n  REGISTER: \"REGISTER\",\n  CLEAR_LOGIN_ERROR: \"CLEAR_LOGIN_ERROR\",\n  LOGIN_INPUT_ERROR: \"LOGIN_INPUT_ERROR\",\n  LOGIN_FAILED: \"LOGIN_FAILED\",\n  LOGIN_FAILED_NO_CODE: \"LOGIN_FAILED_NO_CODE\",\n  CLEAR_REGISTRATION_ERROR: \"CLEAR_REGISTRATION_ERROR\",\n  REGISTRATION_INPUT_ERROR: \"REGISTRATION_INPUT_ERROR\",\n  REGISTRATION_FAILED: \"REGISTRATION_FAILED\",\n  SET_TO_LOGIN_MODE: \"SET_TO_LOGIN_MODE\",\n  SET_TO_REGISTER_MODE: \"SET_TO_REGISTER_MODE\",\n  FETCH_USER: \"FETCH_USER\",\n  SET_USER: \"SET_USER\",\n  UNSET_USER: \"UNSET_USER\",\n};","import { combineReducers } from 'redux';\nimport { LOGIN_ACTIONS } from \"../../actions/loginActions\";\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case LOGIN_ACTIONS.CLEAR_LOGIN_ERROR:\n      return '';\n    case LOGIN_ACTIONS.LOGIN_INPUT_ERROR:\n      return 'Enter your username and password!';\n    case LOGIN_ACTIONS.LOGIN_FAILED:\n      return 'Oops! The username and password didn\\'t match. Try again!';\n    case LOGIN_ACTIONS.LOGIN_FAILED_NO_CODE:\n      return 'Oops! Something went wrong! Is the server running?';\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case LOGIN_ACTIONS.CLEAR_REGISTRATION_ERROR:\n      return '';\n    case LOGIN_ACTIONS.REGISTRATION_INPUT_ERROR:\n      return 'Choose a username and password!';\n    case LOGIN_ACTIONS.REGISTRATION_FAILED:\n      return 'Oops! That didn\\'t work. The username might already be taken. Try again!';\n    default:\n      return state;\n  }\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n});\n","import { LOGIN_ACTIONS } from \"../../actions/loginActions\";\n\nconst loginMode = (state = 'login', action) => {\n    switch (action.type) {\n      case LOGIN_ACTIONS.SET_TO_LOGIN_MODE:\n        return 'login';\n      case LOGIN_ACTIONS.SET_TO_REGISTER_MODE:\n        return 'register';\n      default:\n        return state;\n    }\n  };\n\n// loginMode will be on the redux state at:\n// state.loginMode\n  export default loginMode;\n  ","import { LOGIN_ACTIONS } from \"../../actions/loginActions\";\n\nconst userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case LOGIN_ACTIONS.SET_USER:\n      return action.payload;\n    case  LOGIN_ACTIONS.UNSET_USER:\n      return {};\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default userReducer;\n","export const USER_ACTIONS = { \n  FETCH_RESULTS: \"FETCH_RESULTS\", \n  SET_RESULTS: \"SET_RESULTS\", \n  FETCH_EVENTS: \"FETCH_EVENTS\",\n  SET_EVENTS: 'SET_EVENTS', \n  FETCH_SCHEDULING_DATA: \"FETCH_SCHEDULING_DATA\",\n  SET_SCHEDULING_DATA: 'SET_SCHEDULING_DATA',\n  SET_CURRENT_ROUND: \"SET_CURRENT_ROUND\",\n  FETCH_SELECTED_TRAP: \"FETCH_SELECTED_TRAP\",\n  SET_SELECTED_TRAP:'SET_SELECTED_TRAP',\n  SET_SHOT: 'SET_SHOT',\n  SUBMIT_SCORES: 'SUBMIT_SCORES',\n  FETCH_SHOOTERS: \"FETCH_SHOOTERS\",\n  SET_SHOOTERS: 'SET_SHOOTERS',\n  FETCH_SQUADDING_DATA: \"FETCH_SQUADDING_DATA\",\n  SET_SQUADDING_DATA: 'SET_SQUADDING_DATA',\n  FETCH_TRAPS: \"FETCH_TRAPS\",\n  SET_TRAPS: 'SET_TRAPS',\n  GO_TO_REGISTRATION_PAGE: \"GO_TO_REGISTRATION_PAGE\",\n  LOGOUT: \"LOGOUT\",\n};\n","import { USER_ACTIONS } from \"../actions/userActions\";\n\nconst shootersReducer = (state = [], action) => {\n  switch (action.type) {\n    case USER_ACTIONS.SET_SHOOTERS:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\n\nexport default shootersReducer;\n","import { USER_ACTIONS } from \"../actions/userActions\";\n\nconst trapsReducer = (state = [], action) => {\n  switch (action.type) {\n    case USER_ACTIONS.SET_TRAPS:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default trapsReducer;","import { USER_ACTIONS } from '../actions/userActions'\n\nconst eventsReducer = (state = [], action) => {\n  switch (action.type) {\n    case USER_ACTIONS.SET_EVENTS:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default eventsReducer;\n","import { USER_ACTIONS } from \"../actions/userActions\";\n\nconst squaddingDataReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_ACTIONS.SET_SQUADDING_DATA:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default squaddingDataReducer;\n","import { USER_ACTIONS } from \"../actions/userActions\";\n\nconst schedulingDataReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_ACTIONS.SET_SCHEDULING_DATA:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default schedulingDataReducer;\n","import { USER_ACTIONS } from '../actions/userActions';\nconst defaultState = {\n  squad_trap: {\n    current_rotation: 0,\n  },\n  shooters: [{ shots: [null] }],\n};\n\nconst selectedTrapReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case USER_ACTIONS.SET_SELECTED_TRAP:\n      return action.payload;\n    case USER_ACTIONS.SET_SHOT:\n      let tempShooters = [...state.shooters];\n      tempShooters[action.payload.index].shots[action.payload.round - 1] =\n        action.payload.score;\n      return { ...state, shooters: tempShooters };\n\n    default:\n      return state;\n  }\n};\n\nexport default selectedTrapReducer;\n","import { USER_ACTIONS } from '../actions/userActions'\n\nconst currentRoundReducer = (state = 0, action) => {\n  switch (action.type) {\n    case USER_ACTIONS.SET_CURRENT_ROUND:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default currentRoundReducer;\n","import { combineReducers } from 'redux';\nimport errors from './login/errors.reducer';\nimport loginMode from './login/loginMode.reducer';\nimport user from './login/user.reducer';\nimport shooters from './shooters.reducer';\nimport traps from './traps.reducer';\nimport events from './events.reducer';\nimport squaddingData from './squaddingData.reducer';\nimport schedulingData from './schedulingData.reducer';\nimport selectedTrap from './selectedTrap.reducer';\nimport currentRound from './currentRound.reducer';\n\nconst rootReducer = combineReducers({\n  errors,\n  loginMode,\n  user,\n  shooters,\n  traps,\n  events,\n  squaddingData,\n  schedulingData,\n  selectedTrap,\n  currentRound,\n});\n\nexport default rootReducer;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOGIN_ACTIONS } from \"../../actions/loginActions\";\n\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield put({ type: LOGIN_ACTIONS.CLEAR_LOGIN_ERROR });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post('api/user/login', action.payload, config);\n    \n    // after the user has logged in\n    // get the user information from the server\n    yield put({type: LOGIN_ACTIONS.FETCH_USER});\n  } catch (error) {\n    console.log('Error with user login:', error);\n    if (error.response.status === 401) {\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield put({ type: LOGIN_ACTIONS.LOGIN_FAILED });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield put({ type: LOGIN_ACTIONS.LOGIN_FAILED_NO_CODE });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post('api/user/logout', config);\n\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield put({ type: LOGIN_ACTIONS.UNSET_USER });\n\n  } catch (error) {\n    console.log('Error with user logout:', error);\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest(LOGIN_ACTIONS.LOGIN, loginUser);\n  yield takeLatest(LOGIN_ACTIONS.LOGOUT, logoutUser);\n}\n\nexport default loginSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOGIN_ACTIONS } from \"../../actions/loginActions\";\n\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: LOGIN_ACTIONS.CLEAR_REGISTRATION_ERROR });\n\n    // passes the username and password from the payload to the server\n    yield axios.post('api/user/register', action.payload);\n\n    // automatically log a user in after registration\n    yield put({ type: LOGIN_ACTIONS.LOGIN, payload: action.payload });\n    \n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({type: LOGIN_ACTIONS.SET_TO_LOGIN_MODE});\n  } catch (error) {\n      console.log('Error with user registration:', error);\n      yield put({type: LOGIN_ACTIONS.REGISTRATION_FAILED});\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest(LOGIN_ACTIONS.REGISTER, registerUser);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\nimport { LOGIN_ACTIONS } from '../../actions/loginActions';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get('api/user', config);\n\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield put({ type: LOGIN_ACTIONS.SET_USER, payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest( LOGIN_ACTIONS.FETCH_USER, fetchUser);\n}\n\nexport default userSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\nimport { USER_ACTIONS } from '../actions/userActions';\n\nconst sagaName = 'shootersSaga'\n\nfunction* fetchShooters() {\n  try {\n    const response = yield axios.get('api/competition/shooters');\n\n    yield put({ type: USER_ACTIONS.SET_SHOOTERS, payload: response.data });\n  } catch (error) {\n    console.log('error in', sagaName, ':', error);\n  }\n}\n\nfunction* shootersSaga() {\n  yield takeLatest(USER_ACTIONS.FETCH_SHOOTERS, fetchShooters);\n}\n\nexport default shootersSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\nimport { USER_ACTIONS } from '../actions/userActions';\n\nconst sagaName = 'eventsSaga'\n\nfunction* fetchEvents() {\n  try {\n    const response = yield axios.get('api/competition/event');\n\n    yield put({ type: USER_ACTIONS.SET_EVENTS, payload: response.data });\n  } catch (error) {\n    console.log('error in', sagaName, ':', error);\n  }\n}\n\nfunction* eventsSaga() {\n  yield takeLatest(USER_ACTIONS.FETCH_EVENTS, fetchEvents);\n}\n\nexport default eventsSaga;\n","import axios from \"axios\";\nimport { put, takeLatest } from \"redux-saga/effects\";\nimport { USER_ACTIONS } from \"../actions/userActions\";\n\n\nconst sagaName = \"trapsSaga\";\n\nfunction* fetchTraps() {\n  try {\n\n\n\n    const response = yield axios.get(\"api/competition/trap\");\n\n    yield put({ type: USER_ACTIONS.SET_TRAPS, payload: response.data });\n  } catch (error) {\n    console.log(\"error in\", sagaName, \":\", error);\n  }\n}\n\nfunction* trapsSaga() {\n  yield takeLatest(USER_ACTIONS.FETCH_TRAPS, fetchTraps);\n}\n\nexport default trapsSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\nimport { USER_ACTIONS } from '../actions/userActions';\n\nconst sagaName = 'squaddingDataSaga'\n\nfunction* fetchSquaddingData() {\n  try {\n    const response = yield axios.get('api/competition/squadding');\n\n    yield put({ type: USER_ACTIONS.SET_SQUADDING_DATA, payload: response.data });\n  } catch (error) {\n    console.log('error in', sagaName, ':', error);\n  }\n}\n\nfunction* squaddingDataSaga() {\n  yield takeLatest(USER_ACTIONS.FETCH_SQUADDING_DATA, fetchSquaddingData);\n}\n\nexport default squaddingDataSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\nimport { USER_ACTIONS } from '../actions/userActions';\n\nconst sagaName = 'schedulingDataSaga'\n\nfunction* fetchSchedulingData() {\n  try {\n    const response = yield axios.get('api/competition/scheduling');\n\n    yield put({ type: USER_ACTIONS.SET_SCHEDULING_DATA, payload: response.data });\n  } catch (error) {\n    console.log('error in', sagaName, ':', error);\n  }\n}\n\nfunction* schedulingDataSaga() {\n  yield takeLatest(USER_ACTIONS.FETCH_SCHEDULING_DATA, fetchSchedulingData);\n}\n\nexport default schedulingDataSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\nimport { USER_ACTIONS } from '../actions/userActions';\n\n\nconst sagaName = 'selectedTrapSaga'\n\nfunction* fetchSelectedTrap(action) {\n  try {\n    const response = yield axios.get(`api/competition/scores/`, { params: {id: action.payload}});\n    yield put({ type: USER_ACTIONS.SET_CURRENT_ROUND, payload: 1 });\n    yield put({ type: USER_ACTIONS.SET_SELECTED_TRAP, payload: response.data });\n  } catch (error) {\n    console.log('error in', sagaName, ':', error);\n  }\n}\n\nfunction* selectedTrapSaga() {\n  yield takeLatest(USER_ACTIONS.FETCH_SELECTED_TRAP, fetchSelectedTrap);\n}\n\nexport default selectedTrapSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\nimport { USER_ACTIONS } from '../actions/userActions';\n\nconst sagaName = 'goToRegistrationPageSaga';\n\nfunction* goToRegistrationPage(action) {\n  try {\n    // on the Nav page, we passed props.history in as the payload, here we use it to navigate\n    // get the secret url from the server\n    const response = yield axios.get('api/competition/secret/');\n    const secretUrl = response.data[0].secret_url;\n    const competitionId = response.data[0].id;\n    // send a log out action\n    yield put({ type: USER_ACTIONS.LOGOUT });\n    // navigate to the secret url\n    action.payload.push(`/registration/${competitionId}&${secretUrl}`);\n  } catch (error) {\n    console.log('error in', sagaName, ':', error);\n  }\n}\n\nfunction* goToRegistrationPageSaga() {\n  yield takeLatest(USER_ACTIONS.GO_TO_REGISTRATION_PAGE, goToRegistrationPage);\n}\n\nexport default goToRegistrationPageSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\nimport { USER_ACTIONS } from '../actions/userActions';\n\nconst sagaName = 'submitScoresSaga'\n\nfunction* submitScores(action) {\n  try {\n    yield axios.post(`api/competition/scores/`, action.payload );\n    yield put({ type: USER_ACTIONS.FETCH_SELECTED_TRAP, payload: action.payload.trap.id});\n  } catch (error) {\n    console.log('error in', sagaName, ':', error);\n  }\n}\n\nfunction* submitScoresSaga() {\n  yield takeLatest(USER_ACTIONS.SUBMIT_SCORES, submitScores);\n}\n\nexport default submitScoresSaga;\n","import { all } from \"redux-saga/effects\";\nimport loginSaga from \"./login/login.saga\";\nimport registrationSaga from \"./login/registration.saga\";\nimport userSaga from \"./login/user.saga\";\nimport shootersSaga from \"./shooters.saga\";\nimport eventsSaga from \"./events.saga\";\nimport trapsSaga from \"./traps.saga\";\nimport squaddingDataSaga from \"./squaddingData.saga\";\nimport schedulingDataSaga from \"./schedulingData.saga\";\nimport selectedTrapSaga from \"./selectedTrap.saga\";\nimport goToRegistrationPageSaga from \"./goToRegistrationPage.saga\";\nimport submitScoresSaga from \"./submitScores.saga\";\n\nexport default function* rootSaga() {\n  yield all([\n    loginSaga(),\n    registrationSaga(),\n    userSaga(),\n    shootersSaga(),\n    eventsSaga(),\n    trapsSaga(),\n    squaddingDataSaga(),\n    schedulingDataSaga(),\n    selectedTrapSaga(),\n    goToRegistrationPageSaga(),\n    submitScoresSaga(),\n  ]);\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { LOGIN_ACTIONS } from \"../../redux/actions/loginActions\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport { Button, Card, TextField } from \"@material-ui/core/\";\n\nimport { AccountCircle, Lock } from \"@material-ui/icons/\";\n\nimport { toast } from \"react-toastify\";\n\nconst styles = theme => ({\n  loginCard: {\n    fontFamily: \"Roboto, sans-serif\",\n    marginTop: \"3%\",\n    paddingBottom: \"10%\",\n    width: \"30%\",\n    paddingTop: \"3%\",\n    display: \"flex\",\n    overflow: \"hidden\",\n    flexDirection: \"column\",\n    margin: \"auto\"\n  },\n\n  loginButton: {\n    marginTop: \"4%\",\n    marginBottom: \"4%\",\n    variant: \"contained\"\n  }\n});\n\nclass LoginPage extends Component {\n  state = {\n    username: \"\",\n    password: \"\"\n  };\n\n  login = event => {\n    event.preventDefault();\n    toast(\"Welcome to TrapScore!\");\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: LOGIN_ACTIONS.LOGIN,\n        payload: {\n          username: this.state.username,\n          password: this.state.password\n        }\n      });\n    } else {\n      this.props.dispatch({ type: LOGIN_ACTIONS.LOGIN_INPUT_ERROR });\n    }\n  }; // end login\n\n  handleInputChangeFor = propertyName => event => {\n    this.setState({\n      [propertyName]: event.target.value\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    //Login page for administrator can also switch to administrator registration\n    return (\n      <div>\n        {this.props.errors.loginMessage && (\n          <h2 className=\"alert\" role=\"alert\">\n            {this.props.errors.loginMessage}\n          </h2>\n        )}\n        <Card className={classes.loginCard}>\n          <form onSubmit={this.login}>\n            <center>\n              <h1>Login</h1>\n              <div>\n                <label htmlFor=\"username\">\n                  <TextField\n                    placeholder=\"Username\"\n                    type=\"text\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.handleInputChangeFor(\"username\")}\n                  />{\" \"}\n                  <AccountCircle />\n                </label>\n              </div>\n              <div>\n                <label htmlFor=\"password\">\n                  <TextField\n                    placeholder=\"Password\"\n                    type=\"password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.handleInputChangeFor(\"password\")}\n                  />{\" \"}\n                  <Lock />\n                </label>\n              </div>\n              <div>\n                <Button\n                  onClick={this.login}\n                  variant=\"contained\"\n                  type=\"submit\"\n                  className={classes.loginButton}\n                >\n                  Login\n                </Button>\n              </div>\n\n              <Button\n                variant=\"contained\"\n                type=\"button\"\n                className=\"link-button\"\n                onClick={() => {\n                  this.props.dispatch({\n                    type: LOGIN_ACTIONS.SET_TO_REGISTER_MODE\n                  });\n                }}\n              >\n                Register\n              </Button>\n            </center>\n          </form>\n        </Card>\n      </div>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default withStyles(styles)(connect(mapStateToProps)(LoginPage));\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { LOGIN_ACTIONS } from \"../../redux/actions/loginActions\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport { \n  Card, \n  Button, \n  TextField\n} from \"@material-ui/core/\";\n\nimport {\n  AccountCircle,\n  Lock\n} from \"@material-ui/icons/\";\n\n\nconst styles = theme => ({\n  adminRegister: {\n    fontFamily: \"Roboto, sans-serif\",\n    marginTop: \"3%\",\n    paddingBottom: \"10%\",\n    width: \"30%\",\n    paddingTop: \"3%\",\n    display: \"flex\",\n    overflow: \"hidden\",\n    flexDirection: \"column\",\n    margin: \"auto\"\n  },\n\n  registerButton: {\n    marginTop: \"4%\",\n    marginBottom: \"4%\"\n  }\n});\n\nclass RegisterPage extends Component {\n  state = {\n    username: \"\",\n    password: \"\"\n  };\n\n  registerUser = event => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: LOGIN_ACTIONS.REGISTER,\n        payload: {\n          username: this.state.username,\n          password: this.state.password\n        }\n      });\n    } else {\n      this.props.dispatch({ type: LOGIN_ACTIONS.REGISTRATION_INPUT_ERROR });\n    }\n  }; // end registerUser\n\n  handleInputChangeFor = propertyName => event => {\n    this.setState({\n      [propertyName]: event.target.value\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    /*Administrator registration page, enter a username and password and an\n    admin will be created\n    */\n    return (\n      <div className={classes.background}>\n        {this.props.errors.registrationMessage && (\n          <h2 className=\"alert\" role=\"alert\">\n            {this.props.errors.registrationMessage}\n          </h2>\n        )}\n        <Card className={classes.adminRegister}>\n          <form onSubmit={this.registerUser}>\n            <center>\n              <h1>Register User</h1>\n              <div>\n                <label htmlFor=\"username\">\n                  <TextField\n                    placeholder=\"Username\"\n                    type=\"text\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.handleInputChangeFor(\"username\")}\n                  />\n                  <AccountCircle />\n                </label>\n              </div>\n              <div>\n                <label htmlFor=\"password\">\n                  <TextField\n                    placeholder=\"Password\"\n                    type=\"password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.handleInputChangeFor(\"password\")}\n                  />\n                  <Lock />\n                </label>\n              </div>\n              <div>\n                <Button\n                  onClick={this.registerUser}\n                  variant=\"contained\"\n                  className={classes.registerButton}\n                  type=\"submit\"\n                  name=\"submit\"\n                  value=\"Register\"\n                >\n                  Register\n                </Button>\n\n                <br />\n                <Button\n                  variant=\"contained\"\n                  type=\"button\"\n                  className={classes.loginButton}\n                  onClick={() => {\n                    this.props.dispatch({\n                      type: LOGIN_ACTIONS.SET_TO_LOGIN_MODE\n                    });\n                  }}\n                >\n                  Back to Login\n                </Button>\n              </div>\n            </center>\n          </form>\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ errors }) => ({ errors });\n\nexport default withStyles(styles)(connect(mapStateToProps)(RegisterPage));\n","import React from 'react';\nimport { Route } from 'react-router-dom'\nimport { connect } from 'react-redux';\n\nimport LoginPage from '../LoginPage/LoginPage';\nimport RegisterPage from '../RegisterPage/RegisterPage';\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst ProtectedRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    user,\n    loginMode,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if(user.id) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else if (loginMode === 'login') {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = LoginPage;\n  } else {\n    // the the user is not logged in and the mode is not 'login'\n    // show the RegisterPage\n    ComponentToShow = RegisterPage;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n      <Route\n        // all props like 'exact' and 'path' that were passed in\n        // are now passed along to the 'Route' Component\n        {...otherProps}\n        component={ComponentToShow}\n      />\n  )\n}\n\n// Instead of taking everything from state, we just want the user and loginMode\n// to determine which page we should show the user\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user, loginMode }) => ({ user, loginMode });\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    loginMode: state.loginMode,\n  }\n}\n\nexport default connect(mapStateToProps)(ProtectedRoute)\n\n\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    paddingTop: theme.spacing.unit * 8,\n    width: \"100%\"\n  }\n});\n\nconst NavbarSpacer = ({ classes }) => {\n  return <div className={classes.root} />;\n};\n\nNavbarSpacer.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(NavbarSpacer);\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport { AppBar, IconButton, Toolbar, Typography } from \"@material-ui/core/\";\n\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nimport NavSpacer from \"../NavSpacer/NavSpacer\";\n\nconst styles = {\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  }\n};\n\nconst NavTop = props => {\n  const { classes } = props;\n  return (\n    <div className={classes.root}>\n      <NavSpacer />\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <IconButton\n            className={classes.menuButton}\n            color=\"inherit\"\n            onClick={() => props.openDrawer(true)}\n            aria-label=\"Menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n            TrapScore\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nNavTop.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(NavTop);\n","import React from 'react';\n\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\n\nconst NavSide = props => {\n  return (\n    <>\n      <SwipeableDrawer\n        open={props.open}\n        onClose={props.setDrawer(false)}\n        onOpen={props.setDrawer(true)}\n      >\n        {props.children}\n      </SwipeableDrawer>\n    </>\n  );\n};\n\nexport default NavSide;\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport { Divider, Typography } from \"@material-ui/core/\";\n\nconst styles = {\n  userDetail: {\n    padding: 24,\n    width: \"100%\"\n  },\n  contestDetail: {\n    paddingLeft: 24,\n    width: \"100%\"\n  },\n  list: {\n    width: 225\n  }\n};\n\nconst NavSideHeader = props => {\n  const { classes } = props;\n  return (\n    <>\n      <div className={classes.userDetail}>\n        <Typography variant=\"h4\">TrapScore</Typography>\n      </div>\n      <Divider />\n    </>\n  );\n};\n\nNavSideHeader.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(NavSideHeader);\n","export const selectCompetitionRoute = \"/select-competition\";\nexport const editCompetitionRoute = \"/edit-competition\";\nexport const rosterRoute = \"/roster\";\nexport const squaddingRoute = \"/squadding\";\nexport const schedulingRoute = \"/scheduling\";\nexport const selectTrapRoute = \"/select-trap\";\nexport const scoringRoute = \"/scoring\";\nexport const registrationRoute = \"/registration\";\nexport const resultsRoute = \"/results\";\nexport const homeRoute = \"/home\";\n","import React from \"react\";\n\nimport {\n  rosterRoute,\n  squaddingRoute,\n  schedulingRoute,\n  selectTrapRoute,\n  resultsRoute\n} from \"../../navigationRoutes\";\n\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport { List, ListItem, ListItemText } from \"@material-ui/core/\";\n\nconst styles = {\n  userDetail: {\n    padding: 24,\n    width: \"100%\"\n  },\n  contestDetail: {\n    paddingLeft: 24,\n    width: \"100%\"\n  },\n  list: {\n    width: 240\n  }\n};\n\nconst NavList = props => {\n  const { classes } = props;\n  return (\n    <div className={classes.list}>\n      <List>\n        {/* Roster */}\n        <ListItem\n          button\n          onClick={() => {\n            props.navigateTo(rosterRoute);\n          }}\n        >\n          <ListItemText primary={\"Roster\"} />\n        </ListItem>\n        {/* Squad */}\n        <ListItem\n          button\n          onClick={() => {\n            props.navigateTo(squaddingRoute);\n          }}\n        >\n          <ListItemText primary={\"Squad\"} />\n        </ListItem>\n        {/* Schedule */}\n        <ListItem\n          button\n          onClick={() => {\n            props.navigateTo(schedulingRoute);\n          }}\n        >\n          <ListItemText primary={\"Schedule\"} />\n        </ListItem>\n        {/* Judge */}\n        <ListItem\n          button\n          onClick={() => {\n            props.navigateTo(selectTrapRoute);\n          }}\n        >\n          <ListItemText primary={\"Judge\"} />\n        </ListItem>\n        {/* Results */}\n        <ListItem\n          button\n          onClick={() => {\n            props.navigateTo(resultsRoute);\n          }}\n        >\n          <ListItemText primary={\"Results\"} />\n        </ListItem>\n      </List>\n    </div>\n  );\n};\n\nNavList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(NavList);\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = {\n  list: {\n    position: \"fixed\",\n    left: 0,\n    bottom: 0,\n    width: \"100%\"\n  }\n};\n\nconst NavSideBottom = props => {\n  const { classes } = props;\n  return <div className={classes.list}>{props.children}</div>;\n};\n\nNavSideBottom.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(NavSideBottom);\n","import React from 'react';\n\nimport {\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText\n} from '@material-ui/core/';\n\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nconst NavSideBottomActions = props => {\n  return (\n    <>\n      <Divider />\n      <List>\n        <ListItem\n          button\n          onClick={() => {\n            props.toRegistrationPage();\n          }}\n        >\n          <ListItemText>Registration</ListItemText>\n          <ListItemSecondaryAction>\n            <ListItemIcon>\n              <ExitToAppIcon />\n            </ListItemIcon>\n          </ListItemSecondaryAction>\n        </ListItem>\n        <ListItem button onClick={props.logout}>\n          <ListItemText>Log Out</ListItemText>\n          <ListItemSecondaryAction>\n            <ListItemIcon>\n              <ExitToAppIcon />\n            </ListItemIcon>\n          </ListItemSecondaryAction>\n        </ListItem>\n      </List>\n    </>\n  );\n};\n\nexport default NavSideBottomActions;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport NavTop from \"../NavTop/NavTop\";\nimport NavSide from \"../NavSide/NavSide\";\nimport NavSideHeader from \"../NavSideHeader/NavSideHeader\";\nimport NavList from \"../NavList/NavList\";\nimport NavSideBottom from \"../NavSideBottom/NavSideBottom\";\nimport NavSideBottomActions from \"../NavSideBottomActions/NavSideBottomActions\";\n\nimport { LOGIN_ACTIONS } from \"../../redux/actions/loginActions\";\nimport { USER_ACTIONS } from \"../../redux/actions/userActions\";\n\nimport { toast } from \"react-toastify\";\n\nclass Nav extends Component {\n  state = {\n    sidenavOpen: false\n  };\n\n  setDrawer = open => () => {\n    this.setState({\n      sidenavOpen: open\n    });\n  };\n\n  navigateTo = destination => {\n    this.setDrawer(false);\n    this.setState({\n      sidenavOpen: false\n    });\n    this.props.history.push(`${destination}`);\n  };\n\n  logout = () => {\n    toast(\"Logged Out\");\n    this.setDrawer(false);\n    this.setState({\n      sidenavOpen: false\n    });\n    this.props.dispatch({ type: LOGIN_ACTIONS.LOGOUT });\n  };\n\n  toRegistrationPage = () => {\n    this.setState({\n      sidenavOpen: false\n    });\n    this.props.dispatch({\n      type: USER_ACTIONS.GO_TO_REGISTRATION_PAGE,\n      payload: this.props.history\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <NavTop openDrawer={this.setDrawer(true)} />\n        <NavSide open={this.state.sidenavOpen} setDrawer={this.setDrawer}>\n          <NavSideHeader user={this.props.user} />\n          <NavList navigateTo={this.navigateTo} />\n          <NavSideBottom>\n            <NavSideBottomActions\n              logout={this.logout}\n              toRegistrationPage={this.toRegistrationPage}\n            />\n          </NavSideBottom>\n        </NavSide>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default withRouter(connect(mapStateToProps)(Nav));\n","import React from \"react\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport { Button, Modal, TextField, Typography } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit\n  },\n  dense: {\n    marginTop: 16\n  },\n  paper: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: `translate(-50%, -50%)`,\n    minWidth: theme.spacing.unit * 50,\n    maxWidth: \"80%\",\n    maxHeight: \"90%\",\n    overflowY: \"scroll\",\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4\n  },\n  headerSpacer: {\n    paddingTop: theme.spacing.unit * 4\n  }\n});\n\nconst ViewAdminEditCompetition = props => {\n  const { classes } = props;\n  return (\n    <Modal\n      open={props.open}\n      onClose={props.handleClose}\n      onBackdropClick={props.handleClose}\n      onEscapeKeyDown={props.handleClose}\n    >\n      <div className={classes.paper}>\n        <Typography variant=\"h4\">{props.competitionToEdit.name}</Typography>\n        <Typography variant=\"h6\" className={classes.headerSpacer}>\n          Shareable Registration URL:\n        </Typography>\n        <Typography variant=\"body1\">\n          {process.env.REACT_APP_ROOT_URL}\n          /#/registration/\n          {props.competitionToEdit.id}&{props.competitionToEdit.secret_url}\n        </Typography>\n        <Typography variant=\"h6\" className={classes.headerSpacer}>\n          Staff Username:\n        </Typography>\n        <Typography variant=\"body1\">\n          {props.competitionToEdit.name\n            .toLowerCase()\n            .split(\" \")\n            .join(\"\")}\n        </Typography>\n        <Typography variant=\"h6\" className={classes.headerSpacer}>\n          Default Password:\n        </Typography>\n        <Typography variant=\"body1\">\n          {props.competitionToEdit.name\n            .toLowerCase()\n            .split(\" \")\n            .join(\"\") + \"-admin\"}\n        </Typography>\n        <Typography variant=\"h6\" className={classes.headerSpacer}>\n          Change Password\n        </Typography>\n        <Typography variant=\"body1\">\n          To change the password, type the default password and the new desired\n          password into the text fields below.\n        </Typography>\n        <form>\n          <TextField\n            value={props.competitionToEdit.defaultPassword}\n            onChange={props.handleEditChangeFor(\"defaultPassword\")}\n            placeholder=\"Default Password\"\n          />\n          <TextField\n            value={props.competitionToEdit.newPassword}\n            onChange={props.handleEditChangeFor(\"newPassword\")}\n            placeholder=\"New Password\"\n          />\n\n          <Typography variant=\"h6\" className={classes.headerSpacer}>\n            Edit Competition Details\n          </Typography>\n\n          <TextField\n            value={props.competitionToEdit.name}\n            onChange={props.handleEditChangeFor(\"name\")}\n            placeholder=\"Competition Name\"\n            type=\"text\"\n            name=\"name\"\n          />\n          <TextField\n            value={props.competitionToEdit.location}\n            onChange={props.handleEditChangeFor(\"location\")}\n            placeholder=\"Location\"\n            type=\"text\"\n            name=\"location\"\n          />\n          <Typography variant=\"h6\" className={classes.headerSpacer}>\n            Select Date\n          </Typography>\n          <DatePicker\n            selected={props.competitionToEdit.date}\n            onChange={props.handleDateChange}\n          />\n\n          <div>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={event => {\n                props.editCompetition(event);\n                props.handleClose();\n              }}\n            >\n              Submit\n            </Button>\n            <Button\n              onClick={() => {\n                props.deleteCompetition(props.competitionToEdit.id);\n              }}\n            >\n              Delete\n            </Button>\n          </div>\n        </form>\n      </div>\n    </Modal>\n  );\n};\n\nViewAdminEditCompetition.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ViewAdminEditCompetition);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport { compose } from \"redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { LOGIN_ACTIONS } from \"../../redux/actions/loginActions\";\n\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport { Button, List, ListItem, TextField } from \"@material-ui/core/\";\n\nimport { homeRoute } from \"../../navigationRoutes\";\n\nimport ViewAdminEditCompetition from \"../ViewAdminEditCompetition/ViewAdminEditCompetition\";\nimport { toast } from \"react-toastify\";\nimport moment from \"moment\";\n\nconst styles = theme => ({\n  list: {\n    width: \"50%\",\n    fontFamily: \"Roboto, sans-serif\",\n    borderStyle: \"solid\",\n    marginTop: \"3%\",\n    paddingBottom: \"1%\",\n    fontSize: \"20px\"\n  },\n  editButton: {\n    marginRight: theme.spacing.unit * 4\n  }\n});\n\nclass ViewAdminSelectCompetition extends Component {\n  state = {\n    modalOpen: false,\n    competitions: [],\n    newCompetitionName: \"\",\n    competitionToEdit: {\n      id: \"\",\n      name: \"\",\n      location: \"\",\n      date: moment()\n    }\n  };\n\n  componentDidMount() {\n    this.getCompetitions();\n  }\n\n  // Create a competition, axios 'POST' with name of the competition\n  addCompetition = () => {\n    // reject blank input\n    if (this.state.newCompetitionName === \"\") {\n      alert(\"Please input a competition name.\");\n      return false;\n    } else {\n      axios({\n        method: 'POST',\n        url: '/api/competition/admin',\n        data: { name: this.state.newCompetitionName },\n      })\n        .then(response => {\n          this.editCompetition(response.data);\n        })\n        .catch(error => {\n          alert(\n            \"Something went wrong adding the competition. Are you sure the name is unique?\"\n          );\n          console.log(\"Error:\", error);\n        });\n    }\n  };\n\n  // Gets a list of all competitions\n  getCompetitions = () => {\n    axios({\n      method: 'GET',\n      url: '/api/competition/admin',\n    }).then(response => {\n      let newCompetitions = response.data.map(competition => {\n        return {\n          ...competition,\n          date: moment(competition.date)\n        };\n      });\n      this.setState({\n        ...this.state,\n        competitions: newCompetitions\n      });\n    });\n  };\n\n  // (stage update)\n  stageEdit = selectedCompetition => {\n    this.setState({\n      competitionToEdit: {\n        ...selectedCompetition,\n        date: moment(selectedCompetition.date)\n      }\n    });\n    this.handleOpen();\n  };\n\n  // Update competition, axios 'PUT', sets state to edited info.\n  editCompetition = event => {\n    event.preventDefault();\n    const body = this.state.competitionToEdit;\n\n    axios({\n      method: 'PUT',\n      url: `/api/competition/admin`,\n      data: body,\n    }).then(response => {\n      this.setState({\n        ...this.state,\n        competitionToEdit: {\n          id: \"\",\n          name: \"\",\n          location: \"\",\n          date: moment(),\n          defaultPassword: \"\",\n          newPassword: \"\"\n        }\n      });\n      this.getCompetitions();\n      toast(\"Competition Updated!\");\n    });\n  };\n\n  // Delete, passed as props to ViewAdminEditCompetition\n  deleteCompetition = competitionIdToDelete => {\n    axios({\n      method: 'DELETE',\n      url: `/api/competition/admin/${competitionIdToDelete}`,\n    })\n      .then(response => {\n        this.getCompetitions();\n        this.handleClose();\n      })\n      .catch(error => {\n        alert(\"Something went wrong deleting the competition.\");\n        console.log(\"Error:\", error);\n      });\n  };\n  // For creating a competition, passed as props to ViewAdminEditCompetition\n  handleChangeFor = name => event => {\n    this.setState({\n      [name]: event.target.value\n    });\n  };\n  // For editing competition information, passed as props to ViewAdminEditCompetition\n  handleEditChangeFor = propertyName => event => {\n    this.setState({\n      competitionToEdit: {\n        ...this.state.competitionToEdit,\n        [propertyName]: event.target.value\n      }\n    });\n  };\n  // For react-datepicker, passed as props to ViewAdminEditCompetition\n  handleDateChange = date => {\n    this.setState({\n      competitionToEdit: {\n        ...this.state.competitionToEdit,\n        date: date\n      }\n    });\n  };\n  // Log Out\n  handleLogOut = event => {\n    event.preventDefault();\n    this.props.dispatch({ type: LOGIN_ACTIONS.LOGOUT });\n    this.props.history.push(homeRoute);\n  };\n  // Modal Close\n  handleClose = () => {\n    this.setState({ modalOpen: false });\n  };\n  // Modal Open\n  handleOpen = () => {\n    this.setState({ modalOpen: true });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <center>\n        <div className={classes.list}>\n          <h1>Select Competition</h1>\n          <List>\n            {this.state.competitions.map(comp => {\n              return (\n                <ListItem key={comp.id} value={comp.id}>\n                  <Button\n                    className={classes.editButton}\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={() => this.stageEdit(comp)}\n                  >\n                    Edit\n                  </Button>\n                  {comp.name}\n                </ListItem>\n              );\n            })}\n            <ListItem>\n              <Button\n                className={classes.editButton}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={this.addCompetition}\n              >\n                Add\n              </Button>\n              <TextField\n                label=\"New competition name\"\n                value={this.state.newCompetitionName}\n                onChange={this.handleChangeFor(\"newCompetitionName\")}\n                margin=\"normal\"\n              />\n            </ListItem>\n\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              onClick={this.handleLogOut}\n            >\n              Log Out\n            </Button>\n          </List>\n          <ViewAdminEditCompetition\n            open={this.state.modalOpen}\n            handleClose={this.handleClose}\n            editCompetition={this.editCompetition}\n            deleteCompetition={this.deleteCompetition}\n            competitionToEdit={this.state.competitionToEdit}\n            handleEditChangeFor={this.handleEditChangeFor}\n            handleDateChange={this.handleDateChange}\n          />\n        </div>\n      </center>\n    );\n  }\n}\n\nViewAdminSelectCompetition.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default compose(\n  withRouter,\n  withStyles(styles)\n)(ViewAdminSelectCompetition);\n","import React, { Component } from \"react\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport { Button, List, ListItem, TextField } from \"@material-ui/core/\";\n\nconst styles = theme => ({\n  field: {\n    float: \"right\"\n  },\n  saveButton: {\n    marginTop: \"8%\"\n  },\n\n  editHeader: {\n    marginLeft: \"7%\"\n  },\n\n  editform: {\n    float: \"right\",\n    marginRight: \"10%\",\n    marginTop: \".125vh\",\n    borderStyle: \"solid\",\n    padding: \"20px\",\n    fontFamily: \"Roboto, sans-serif\",\n    height: \"83vh\"\n  }\n});\n\nclass ViewEditShooter extends Component {\n  initialState = {\n    id: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    handicap: \"\",\n    phone: \"\",\n    ata_number: \"\"\n  };\n  state = this.initialState;\n\n  clearEdit = () => {\n    this.setState(this.initialState);\n  };\n\n  handleChangeFor = propertyName => event => {\n    this.setState({\n      ...this.state,\n      [propertyName]: event.target.value\n    });\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props !== prevProps) {\n      this.setState({\n        ...this.props.selectedShooter\n      });\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    //Creates edit shooter form, allowing information to be edited or deleted\n\n    return (\n      <div>\n        <form className={classes.editform}>\n          <h2 className={classes.editHeader}>Edit Shooter</h2>\n\n          <List dense>\n            <ListItem>\n              <TextField\n                label=\"First Name\"\n                className=\"textfield\"\n                type=\"text\"\n                name=\"searchText\"\n                value={this.state.first_name}\n                onChange={this.handleChangeFor(\"first_name\")}\n              />\n            </ListItem>\n            <ListItem>\n              <TextField\n                label=\"Last Name\"\n                className=\"textfield\"\n                type=\"text\"\n                name=\"searchText\"\n                value={this.state.last_name}\n                onChange={this.handleChangeFor(\"last_name\")}\n              />\n            </ListItem>\n            <ListItem>\n              <TextField\n                label=\"E-mail\"\n                className=\"textfield\"\n                type=\"text\"\n                name=\"searchText\"\n                value={this.state.email}\n                onChange={this.handleChangeFor(\"email\")}\n              />\n            </ListItem>\n            <ListItem>\n              <TextField\n                label=\"Phone Number\"\n                className=\"textfield\"\n                type=\"text\"\n                name=\"searchText\"\n                value={this.state.phone}\n                onChange={this.handleChangeFor(\"phone\")}\n              />\n            </ListItem>\n            <ListItem>\n              <TextField\n                label=\"Handicap\"\n                className=\"textfield\"\n                type=\"text\"\n                name=\"searchText\"\n                value={this.state.handicap}\n                onChange={this.handleChangeFor(\"handicap\")}\n              />\n            </ListItem>\n            <ListItem>\n              <TextField\n                label=\"ATA Number\"\n                className=\"textfield\"\n                type=\"text\"\n                name=\"searchText\"\n                value={this.state.ata_number}\n                onChange={this.handleChangeFor(\"ata_number\")}\n              />\n            </ListItem>\n          </List>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              this.props.updateUser(this.state.id, this.state);\n              this.clearEdit();\n            }}\n          >\n            Save Changes\n          </Button>\n          <Button\n            variant=\"outlined\"\n            color=\"secondary\"\n            onClick={() => {\n              this.props.deleteShooter(this.state.id);\n              this.clearEdit();\n            }}\n          >\n            Delete Shooter\n          </Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(ViewEditShooter);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport {\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  ListSubheader,\n  TextField,\n  IconButton\n} from \"@material-ui/core\";\n\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nimport { toast } from \"react-toastify\";\n\nimport ViewEditShooter from \"../ViewEditShooter/ViewEditShooter\";\n\nconst styles = theme => ({\n  roster: {\n    width: \"30vw\",\n    minWidth: 100,\n    height: \"83vh\",\n    overflowY: \"auto\",\n    marginLeft: \"10vw\",\n    marginTop: \"5vh\",\n    borderStyle: \"solid\",\n    padding: \"20px\",\n    fontFamily: \"Roboto, sans-serif\"\n  },\n\n  scrollable: {\n    overflowY: \"auto\"\n  },\n\n  searchField: {\n    height: \"5vh\",\n    fontFamily: \"Roboto, sans-serif\"\n  },\n\n  header: {\n    marginLeft: \"22px\"\n  }\n});\n\nclass CompetitionRoster extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shooters: [],\n      selectedShooter: {},\n      input: \"\"\n    };\n  }\n  //GET all shooters associated with the current competition\n  getShooters() {\n    axios({\n      method: \"GET\",\n      url: \"/api/competition/shooter\"\n    }).then(response => {\n      let shooters;\n\n      if (response.data) {\n        shooters = response.data;\n      } else {\n        shooters = [];\n      }\n      this.setState({\n        shooters: shooters,\n        selectedShooter: {}\n      });\n    });\n  }\n\n  //GET an individual shooters information\n  editShooter = id => {\n    axios({\n      method: \"GET\",\n      url: `/api/competition/shooter/${id}`\n    }).then(response => {\n      this.setState({\n        ...this.state,\n        selectedShooter: response.data[0]\n      });\n    });\n  };\n  //Edit a shooters information and UPDATE\n  updateUser = (id, data) => {\n    axios({\n      method: \"PUT\",\n      url: `/api/competition/shooter/${id}`,\n      data: data\n    }).then(response => {\n      toast(\"Changes Saved\");\n      this.getShooters();\n    });\n  };\n  //DELETE a shooter entirely from the competition\n  deleteShooter = id => {\n    axios({\n      method: \"DELETE\",\n      url: `/api/competition/shooter/${id}`\n    }).then(response => {\n      toast(\"Shooter Deleted\");\n      this.getShooters();\n    });\n  };\n\n  handleChangeFor = propertyName => event => {\n    this.setState({\n      ...this.state,\n      selectedShooter: {\n        ...this.state.selectedShooter,\n        [propertyName]: event.target.value\n      }\n    });\n  };\n\n  onFilterChange = event => {\n    this.setState({\n      input: event.target.value\n    });\n  };\n\n  componentDidMount() {\n    this.getShooters();\n  }\n\n  //Able to filter roster by search field. Select a user and edit their information\n\n  render() {\n    const { classes } = this.props;\n    const list = this.state.shooters\n      .filter(\n        shooter =>\n          this.state.input === \"\" ||\n          shooter.last_name.toLowerCase().includes(this.state.input) ||\n          shooter.first_name.toLowerCase().includes(this.state.input)\n      )\n      .map((shooter, index) => (\n        <ListItem key={index}>\n          {shooter.first_name} {shooter.last_name}{\" \"}\n          <ListItemSecondaryAction>\n            <IconButton\n              onClick={() => {\n                this.editShooter(shooter.id);\n              }}\n            >\n              <EditIcon />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n      ));\n\n    return (\n      <div className={classes.root}>\n        <div>\n          <ViewEditShooter\n            selectedShooter={this.state.selectedShooter}\n            updateUser={this.updateUser}\n            deleteShooter={this.deleteShooter}\n          />\n        </div>\n        <div className={classes.roster}>\n          <div>\n            <List className={classes.scrollable}>\n              <h2 className={classes.header}>Competition Roster</h2>\n              <ListSubheader>\n                <TextField\n                  className={classes.searchField}\n                  placeholder=\"Search by name\"\n                  variant=\"outlined\"\n                  value={this.state.input}\n                  type=\"text\"\n                  onChange={this.onFilterChange}\n                />\n              </ListSubheader>\n              {list}\n            </List>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(CompetitionRoster);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  scoreContainer: {\n    display: \"flex\",\n    width: \"80vw\",\n    height: \"4vw\",\n    flexDirection: \"row\",\n    flexWrap: \"nowrap\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n\n  score: {\n    width: \"3vw\",\n    height: \"3vw\",\n    borderRadius: \"2px\",\n    margin: \"1px\",\n    lineHeight: \"3vw\",\n    fontSize: \"2.8vw\",\n    backgroundColor: \"whitesmoke\",\n    boxShadow: \"1px 1px 4px darkgray\"\n  },\n\n  hit: {\n    backgroundColor: \"gainsboro\"\n  }\n});\n\nconst ResultsDetail = props => {\n  const { classes } = props;\n\n  return (\n    <>\n      <div className={classes.scoreContainer}>\n        {props.boxScore.map(score => {\n          let value = score === 1 ? \"hit\" : \"miss\";\n          return value === \"hit\" ? (\n            <div className={`${classes.score} ${classes.hit}`}>/</div>\n          ) : (\n            <div className={classes.score}>O</div>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default withStyles(styles)(ResultsDetail);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport {\n  Switch,\n  FormControlLabel,\n  Typography,\n  Paper,\n  Button\n} from \"@material-ui/core\";\n\nimport { ToggleButtonGroup, ToggleButton } from \"@material-ui/lab/\";\n\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\n\nimport { USER_ACTIONS } from \"../../redux/actions/userActions\";\nimport ResultsDetail from \"../ResultsDetail/ResultsDetail\";\nimport fileDownload from \"js-file-download\";\n\n//JSS Styles object\nconst styles = theme => ({\n  boxScoreContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"nowrap\",\n    margin: \"0 1vw\"\n  },\n  totalScore: {\n    height: \"100%\",\n    width: \"18vw\",\n    lineHeight: \"16vw\",\n    fontSize: \"8vw\"\n  },\n  container: {\n    paddingTop: theme.spacing.unit * 3,\n    paddingBottom: theme.spacing.unit * 1,\n    paddingLeft: theme.spacing.unit * 3,\n    paddingRight: theme.spacing.unit * 3\n  },\n  scoreDetailContainer: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2\n  },\n  optionsContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  }\n});\n\nclass ViewResults extends Component {\n  state = {\n    //defaults table to first results page on render\n    page: 0,\n    //gets set by toggle buttons to the value of the index of that item within the events array\n    indexOfSelectedEvent: 0,\n    //when true, results will autoscroll\n    resultsShouldPaginate: false,\n    //populates on componentDidMount\n    resultsData: [],\n    //boolean stops table from rendering before server response\n    finishedLoading: false,\n    //initializes at 0. dynamically updates based on incoming data\n    totalPages: 0,\n    //set this value to change the number of rows displayed in the results table\n    pageSize: 15\n  };\n  //creates a reference to the react-table child component\n  tableRef = null;\n\n  fetchCSV = () => {\n    axios\n      .get(\"/api/competition/results/export\")\n      .then(response => {\n        fileDownload(response.data, \"competition-results.csv\");\n      })\n      .catch(error => {\n        console.log(\"Error downloading CSV\", error);\n        alert(\"Error downloading CSV file\");\n      });\n  };\n\n  //increments selected event in local state\n  toggleNextEvent = () => {\n    this.setState({\n      ...this.state,\n      indexOfSelectedEvent: this.state.indexOfSelectedEvent + 1\n    });\n  };\n\n  incrementPage = () => {\n    this.setState({\n      ...this.state,\n      page: this.state.page + 1\n    });\n  };\n\n  //toggles pagination boolean in local state\n  togglePagination = () => {\n    this.setState({\n      ...this.state,\n      resultsShouldPaginate: !this.state.resultsShouldPaginate\n    });\n  };\n\n  //sets event ID to local state from toggle buttons above table\n  selectEvent = (event, value) => {\n    this.setState({\n      ...this.state,\n      indexOfSelectedEvent: value,\n      totalPages: Math.ceil(\n        this.state.resultsData[value].results.length / this.state.pageSize\n      ),\n      page: 0\n    });\n  };\n\n  paginate = () => {\n    if (this.state.resultsShouldPaginate) {\n      if (this.state.page < this.state.totalPages - 1) {\n        this.incrementPage();\n      } else if (\n        this.state.indexOfSelectedEvent <\n        this.props.events.length - 1\n      ) {\n        this.toggleNextEvent();\n        this.setState({\n          ...this.state,\n          page: 0\n        });\n      } else {\n        this.setState({\n          indexOfSelectedEvent: 0,\n          page: 0\n        });\n      }\n    }\n  };\n\n  //Pulls all score results from server and stores response in local state\n  fetchResultsData = () => {\n    this.setState({\n      ...this.state,\n      finishedLoading: false\n    });\n    axios\n      .get(\"/api/competition/results\")\n      .then(response => {\n        this.setState({\n          ...this.state,\n          resultsData: response.data,\n          totalPages: Math.ceil(\n            response.data[0].results.length / this.state.pageSize\n          )\n        });\n      })\n      .catch(error => {\n        console.log(\"Error getting results:\", error);\n      });\n  };\n\n  async componentDidMount() {\n    //pulls list of events from redux to populate toggle buttons at top\n    await this.props.dispatch({ type: USER_ACTIONS.FETCH_EVENTS });\n    await this.fetchResultsData();\n    await this.setState({\n      ...this.state,\n      finishedLoading: true\n    });\n    this.paginate = setInterval(this.paginate, 8000);\n  }\n\n  render() {\n    const { classes } = this.props;\n    const columns = [\n      {\n        Header: \"Placement\",\n        accessor: \"placement\",\n        maxWidth: \"100\",\n        //Assumes that data object is sorted by 1st place to last place\n        Cell: row => <div> {data.indexOf(row.original) + 1} </div>\n      },\n      {\n        Header: \"Shooter Name\",\n        accessor: \"last_name\",\n        maxWidth: \"150\",\n        Cell: row => (\n          <div>{row.original.first_name + \" \" + row.original.last_name}</div>\n        )\n      },\n      {\n        Header: \"Total Hits\",\n        accessor: \"total_hits\",\n        Cell: row => (\n          <>\n            <div\n              style={{\n                width: \"100%\",\n                height: \"100%\",\n                backgroundColor: \"#dadada\",\n                borderRadius: \"2px\"\n              }}\n            >\n              <div\n                style={{\n                  width: `${(row.value / row.original.total_shots) * 100}%`,\n                  height: \"100%\",\n                  backgroundColor:\n                    (row.value / row.original.total_shots) * 100 > 66\n                      ? \"#85cc00\"\n                      : (row.value / row.original.total_shots) * 100 > 33\n                      ? \"#ffbf00\"\n                      : \"#ff2e00\",\n                  borderRadius: \"2px\",\n                  transition: \"all .2s ease-out\",\n                  textAlign: \"center\"\n                }}\n              >\n                {row.value} / {row.original.total_shots}\n              </div>\n            </div>\n          </>\n        )\n      }\n    ];\n\n    //reassigns results data by event selected in local state (which is determined by the toggle buttons)\n    let data = this.state.resultsData.length\n      ? this.state.resultsData[this.state.indexOfSelectedEvent].results\n      : [];\n\n    return this.state.finishedLoading ? (\n      <div className={classes.container}>\n        <Typography variant=\"h3\">Results</Typography>\n        <div className={classes.optionsContainer}>\n          <FormControlLabel\n            control={<Switch onChange={this.togglePagination} />}\n            label=\"Scroll Results\"\n          />\n          <Button variant=\"contained\" color=\"secondary\" onClick={this.fetchCSV}>\n            Download CSV\n          </Button>\n        </div>\n        <ToggleButtonGroup\n          value={this.state.indexOfSelectedEvent}\n          exclusive\n          onChange={this.selectEvent}\n        >\n          {this.props.events.map(ev => {\n            return (\n              <ToggleButton key={ev.id} value={this.props.events.indexOf(ev)}>\n                {ev.name}\n              </ToggleButton>\n            );\n          })}\n        </ToggleButtonGroup>\n        <ReactTable\n          getProps={() => {\n            return {\n              style: { fontFamily: \"Roboto, sans-serif\", textAlign: \"center\" }\n            };\n          }}\n          columns={columns}\n          data={data}\n          pageSizeOptions={[this.state.pageSize]}\n          pageSize={this.state.pageSize}\n          page={this.state.page}\n          className=\"-striped -highlight\"\n          onPageChange={pageIndex => {\n            this.setState({ ...this.state, page: pageIndex });\n          }}\n          SubComponent={row => {\n            let scoreSlices = [];\n\n            for (let i = 0; i < row.original.raw_scores.length; i += 25) {\n              scoreSlices.push(row.original.raw_scores.slice(i, i + 25));\n            }\n            return (\n              <Paper className={classes.scoreDetailContainer}>\n                <Typography variant={\"h5\"}>\n                  Score Details: {row.original.first_name}{\" \"}\n                  {row.original.last_name}\n                </Typography>\n                <div className={classes.boxScoreContainer}>\n                  <div>\n                    {scoreSlices.map(boxScore => {\n                      return (\n                        <ResultsDetail\n                          key={row.original.id}\n                          boxScore={boxScore}\n                        />\n                      );\n                    })}\n                  </div>\n                  <div>\n                    <Typography className={classes.totalScore} variant={\"h2\"}>\n                      {row.original.total_hits}\n                    </Typography>\n                  </div>\n                </div>\n              </Paper>\n            );\n          }}\n        />\n      </div>\n    ) : (\n      <div>Loading...</div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ events }) => ({ events });\n\nexport default withStyles(styles)(connect(mapStateToProps)(ViewResults));\n","export const reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\nexport const move = (\n  source,\n  destination,\n  droppableSource,\n  droppableDestination\n) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n  destClone.splice(droppableDestination.index, 0, removed);\n\n  const result = {};\n\n  result.source = sourceClone;\n  result.destination = destClone;\n\n  return result;\n};\n","import React from \"react\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\n\nconst styles = theme => ({\n  headerMargins: {\n    width: \"100%\",\n    paddingTop: theme.spacing.unit * 3,\n    paddingBottom: theme.spacing.unit * 1,\n    paddingLeft: theme.spacing.unit * 3,\n    paddingRight: theme.spacing.unit * 3\n  }\n});\n\nconst HeaderMargins = props => {\n  const { classes } = props;\n  return <div className={classes.headerMargins}>{props.children}</div>;\n};\n\nHeaderMargins.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(HeaderMargins);\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport { Select, MenuItem } from \"@material-ui/core/\";\n\nconst styles = theme => ({\n  selectBox: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2\n  }\n});\n\nconst EventSelect = props => {\n  const { classes } = props;\n  return (\n    <>\n      <Select\n        className={classes.selectBox}\n        value={props.selectedEvent}\n        onChange={props.setEvent}\n      >\n        <MenuItem value={0}>None</MenuItem>\n        {props.events.map(event => {\n          return (\n            <MenuItem key={event.id} value={event.id}>\n              {event.name}\n            </MenuItem>\n          );\n        })}\n      </Select>\n    </>\n  );\n};\n\nEventSelect.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(EventSelect);\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n    flexGrow: 1,\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"start\"\n  }\n});\n\nconst DndPage = props => {\n  const { classes } = props;\n  return <div className={classes.root}>{props.children}</div>;\n};\n\nDndPage.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(DndPage);\n","import React from \"react\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\n\nconst styles = theme => ({\n  leftSide: {\n    backgroundColor: \"lightgray\",\n    width: \"20%\",\n    minWidth: 250,\n    height: \"100vh\",\n    overflowY: \"scroll\"\n  }\n});\n\nconst DndLeftSide = props => {\n  const { classes } = props;\n  return <div className={classes.leftSide}>{props.children}</div>;\n};\n\nDndLeftSide.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(DndLeftSide);\n","import React from \"react\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\n\nconst styles = theme => ({\n  rightSide: {\n    width: \"75%\",\n    minWidth: 100,\n    height: \"100vh\",\n    overflowY: \"scroll\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"start\",\n    alignItems: \"start\"\n  }\n});\n\nconst DndRightSide = props => {\n  const { classes } = props;\n  return <div className={classes.rightSide}>{props.children}</div>;\n};\n\nDndRightSide.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(DndRightSide);\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { withStyles } from '@material-ui/core/styles';\n\nimport {\n  Card, \n  CardActions, \n  CardContent, \n  CardHeader \n} from \"@material-ui/core\";\n\nconst styles = theme => ({\n  card: {\n    margin: theme.spacing.unit * 2,\n    minWidth: theme.spacing.unit * 30\n  },\n  cardNoMargin: {\n    minWidth: theme.spacing.unit * 30\n  }\n});\n\nconst DndCard = props => {\n  const { classes, title } = props;\n  return (\n    <Card raised className={props.noMargin ? classes.cardNoMargin : classes.card}>\n      <CardHeader action={props.cornerButton} title={title} />\n      <CardContent>{props.children}</CardContent>\n      <CardActions>{props.cardActions ? props.cardActions : null}</CardActions>\n    </Card>\n  );\n};\n\nDndCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired\n};\n\nexport default withStyles(styles)(DndCard);\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport {\n  Button, \n  IconButton, \n  Modal, \n  TextField \n} from '@material-ui/core/';\n\nimport DndCard from '../DndCard/DndCard';\n\nconst styles = theme => ({\n  modalPositioning: {\n    position: 'absolute',\n    boxShadow: theme.shadows[5],\n    top: `30%`,\n    left: `50%`,\n    transform: `translate(-50%, -50%)`\n  },\n  upperRightButton: {\n    float: 'right'\n  },\n  title: {\n    marginBottom: theme.spacing.unit * 3\n  },\n  textField: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    width: 200\n  }\n});\n\nclass DndEditModal extends Component {\n  state = {\n    open: false,\n    field: '',\n  };\n\n  handleOpen = () => {\n    this.setState({ open: true });\n    this.setState({ field: this.props.field });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  handleSubmit = () => {\n    this.props.edit(this.props.id, this.state.field);\n    this.handleClose();\n  };\n\n  handleDelete = () => {\n    this.props.delete(this.props.id);\n    this.handleClose();\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <>\n        <IconButton onClick={this.handleOpen}>\n          <EditIcon />\n        </IconButton>\n        <Modal open={this.state.open} onClose={this.handleClose}>\n          <div className={classes.modalPositioning}>\n            <DndCard\n              noMargin\n              title={'Edit Name'}\n              cornerButton={\n                <IconButton onClick={this.handleDelete}>\n                  <DeleteIcon />\n                </IconButton>\n              }\n              cardActions={\n                <>\n                  <Button onClick={this.handleSubmit}>Submit</Button>\n                  <Button onClick={this.handleClose}>Cancel</Button>\n                </>\n              }\n            >\n              <TextField\n                label=\"Name\"\n                className={classes.textField}\n                value={this.state.field}\n                onChange={this.handleChange('field')}\n              />\n            </DndCard>\n          </div>\n        </Modal>\n      </>\n    );\n  }\n}\n\nDndEditModal.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DndEditModal);\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport { Avatar, ListItem, ListItemText } from \"@material-ui/core\";\n\nimport { Draggable } from \"react-beautiful-dnd\";\n\nconst styles = theme => ({\n  avatar: {\n    color: \"#fff\",\n    backgroundColor: theme.palette.primary.main\n  },\n  avatarBox: {\n    color: \"#fff\",\n    backgroundColor: theme.palette.secondary.main,\n    borderRadius: 10\n  }\n});\n\nconst DndItem = props => {\n  const { classes, item, index } = props;\n  return (\n    <Draggable key={item.id} draggableId={item.id} index={index}>\n      {(provided, snapshot) => (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          <ListItem button disableGutters={props.disableGutters}>\n            <Avatar className={props.box ? classes.avatarBox : classes.avatar}>\n              {item.avatar}\n            </Avatar>\n            <ListItemText primary={item.mainText} />\n          </ListItem>\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\nDndItem.propTypes = {\n  classes: PropTypes.object.isRequired,\n  index: PropTypes.number.isRequired,\n  item: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(DndItem);\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport { List, ListSubheader } from \"@material-ui/core\";\n\nimport { Droppable } from \"react-beautiful-dnd\";\nimport DndItem from \"../DndItem/DndItem\";\n\nconst styles = theme => ({\n  list: {},\n  dndContainer: {\n    minHeight: 200\n  }\n});\n\nconst DndList = props => {\n  const { classes } = props;\n  return (\n    <List\n      dense={true}\n      disablePadding={true}\n      subheader={<ListSubheader>{props.subheader}</ListSubheader>}\n    >\n      <Droppable droppableId={props.droppableId}>\n        {(provided, snapshot) => (\n          <div className={classes.dndContainer} ref={provided.innerRef}>\n            {props.data.map((item, index) => {\n              return (\n                <DndItem\n                  key={item.id}\n                  item={item}\n                  index={index}\n                  box={props.box}\n                  disableGutters={props.disableGutters}\n                />\n              );\n            })}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </List>\n  );\n};\n\nDndList.propTypes = {\n  data: PropTypes.array.isRequired,\n  droppableId: PropTypes.string.isRequired,\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(DndList);\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport PlusIcon from '@material-ui/icons/Add';\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit * 5,\n    bottom: 0,\n    right: 0,\n    position: 'fixed',\n  },\n});\n\nconst DndAddButton = props => {\n  const { classes } = props;\n  return (\n    <Button\n      variant=\"fab\"\n      color=\"primary\"\n      className={classes.button}\n      onClick={props.onClick}\n    >\n      <PlusIcon />\n    </Button>\n  );\n};\n\nDndAddButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DndAddButton);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\n\nimport { USER_ACTIONS } from \"../../redux/actions/userActions\";\n\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { reorder, move } from \"../../modules/dragAndDrop.strategy\";\n\nimport { Divider, Typography } from \"@material-ui/core\";\n\nimport HeaderMargins from \"../HeaderMargins/HeaderMargins\";\nimport EventSelect from \"../EventSelect/EventSelect\";\nimport DndPage from \"../DndPage/DndPage\";\nimport DndLeftSide from \"../DndLeftSide/DndLeftSide\";\nimport DndRightSide from \"../DndRightSide/DndRightSide\";\nimport DndCard from \"../DndCard/DndCard\";\nimport DndEditModal from \"../DndEditModal/DndEditModal\";\nimport DndList from \"../DndList/DndList\";\nimport DndAddButton from \"../DndAddButton/DndAddButton\";\n\nimport { toast } from \"react-toastify\";\n\nclass ViewSquadding extends Component {\n  state = {\n    selectedEvent: 0,\n    unassigned: [],\n    squads: [\n      {\n        name: \"\",\n        id: 0,\n        members: []\n      }\n    ]\n  };\n\n  componentDidMount() {\n    this.getData();\n    this.getEvents();\n  }\n\n  getEvents = () => {\n    this.props.dispatch({ type: USER_ACTIONS.FETCH_EVENTS });\n  };\n\n  setEvent = async event => {\n    await this.setState({ selectedEvent: event.target.value });\n    this.getEvents();\n    this.getData();\n  };\n\n  getData = () => {\n    if (this.state.selectedEvent !== 0) {\n      axios({\n        method: \"GET\",\n        url: `/api/competition/squadding/${this.state.selectedEvent}`\n      })\n        .then(response => {\n          this.setState({ ...response.data });\n        })\n        .catch(error => {\n          alert(\n            \"Something went wrong getting the squadding data from the server.\"\n          );\n          console.log(error);\n        });\n    } else {\n      this.setState({\n        ...this.state,\n        squads: []\n      });\n    }\n  };\n\n  sendData = () => {\n    if (this.state.selectedEvent !== 0) {\n      toast(\"Squads saved\");\n      axios({\n        method: \"PUT\",\n        url: `/api/competition/squadding/${this.state.selectedEvent}`,\n        data: this.state\n      }).then(() => {\n        this.getData();\n      });\n    }\n  };\n\n  getList = id => {\n    if (id === \"unassigned\") {\n      return this.state.unassigned;\n    } else {\n      return this.state.squads[Number(id)].members;\n    }\n  };\n\n  onDragEnd = result => {\n    const { source, destination } = result;\n\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId !== \"unassigned\" &&\n      destination.droppableId !== source.droppableId\n    ) {\n      // if destination is already full\n      if (\n        this.state.squads[Number(destination.droppableId)].members.length > 4\n      ) {\n        toast(\"Squads can only have five people!\");\n        return;\n      }\n    }\n\n    // dropped on the same table\n    if (source.droppableId === destination.droppableId) {\n      const newItems = reorder(\n        this.getList(source.droppableId),\n        source.index,\n        destination.index\n      );\n\n      if (source.droppableId === \"unassigned\") {\n        this.setState({\n          unassigned: newItems\n        });\n      } else {\n        this.setState({\n          squads: [\n            ...this.state.squads.slice(0, Number(source.droppableId)),\n            {\n              ...this.state.squads[source.droppableId],\n              members: newItems\n            },\n            ...this.state.squads.slice(Number(source.droppableId) + 1)\n          ]\n        });\n      }\n    } else {\n      // if they are two different lists\n      const result = move(\n        this.getList(source.droppableId),\n        this.getList(destination.droppableId),\n        source,\n        destination\n      );\n\n      if (source.droppableId === \"unassigned\") {\n        this.setState({\n          unassigned: result.source\n        });\n      } else {\n        this.setState({\n          squads: [\n            ...this.state.squads.slice(0, Number(source.droppableId)),\n            {\n              ...this.state.squads[source.droppableId],\n              members: result.source\n            },\n            ...this.state.squads.slice(Number(source.droppableId) + 1)\n          ]\n        });\n      }\n      if (destination.droppableId === \"unassigned\") {\n        this.setState({\n          unassigned: result.destination\n        });\n      } else {\n        this.setState({\n          squads: [\n            ...this.state.squads.slice(0, Number(destination.droppableId)),\n            {\n              ...this.state.squads[destination.droppableId],\n              members: result.destination\n            },\n            ...this.state.squads.slice(Number(destination.droppableId) + 1)\n          ]\n        });\n      }\n    }\n    this.sendData();\n  };\n\n  addSquad = () => {\n    if (this.state.selectedEvent !== 0) {\n      axios({\n        method: \"POST\",\n        url: `/api/competition/squadding/new/${this.state.selectedEvent}`\n      }).then(() => {\n        this.getData();\n      });\n      toast(\"Squad added!\");\n    }\n  };\n\n  editSquad = (squadId, newName) => {\n    axios({\n      method: \"PUT\",\n      url: `/api/competition/edit/squad/${squadId}`,\n      data: { name: newName }\n    }).then(() => {\n      this.getData();\n      toast(\"Squad name updated!\");\n    });\n  };\n\n  deleteSquad = squadId => {\n    axios({\n      method: \"DELETE\",\n      url: `/api/competition/squadding/squad/${squadId}`\n    }).then(() => {\n      this.getData();\n      toast(\"Squad deleted.\");\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <DndPage>\n          <DragDropContext onDragEnd={this.onDragEnd}>\n            <DndLeftSide>\n              <HeaderMargins>\n                <Typography variant=\"h4\">Unsquadded</Typography>\n                <EventSelect\n                  selectedEvent={this.state.selectedEvent}\n                  events={this.props.events}\n                  setEvent={this.setEvent}\n                />\n              </HeaderMargins>\n              <Divider />\n              <DndList\n                subheader=\"Handicap / Shooter name\"\n                droppableId=\"unassigned\"\n                data={this.state.unassigned.map(item => {\n                  item.mainText = item.first_name + \" \" + item.last_name;\n                  item.avatar = item.handicap;\n                  return item;\n                })}\n              />\n            </DndLeftSide>\n            <DndRightSide>\n              {this.state.squads.length > 0 &&\n                this.state.squads.map((squad, index) => {\n                  return (\n                    <DndCard\n                      key={squad.id}\n                      title={squad.name}\n                      cornerButton={\n                        <DndEditModal\n                          id={squad.id}\n                          field={squad.name}\n                          edit={this.editSquad}\n                          delete={this.deleteSquad}\n                        />\n                      }\n                    >\n                      <DndList\n                        disableGutters\n                        droppableId={index.toString()}\n                        data={squad.members.map(item => {\n                          item.mainText =\n                            item.first_name + \" \" + item.last_name;\n                          item.avatar = item.handicap;\n                          return item;\n                        })}\n                      />\n                    </DndCard>\n                  );\n                })}\n            </DndRightSide>\n          </DragDropContext>\n          <DndAddButton onClick={this.addSquad} />\n        </DndPage>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  events: state.events\n});\n\nexport default connect(mapStateToProps)(ViewSquadding);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\n\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { reorder, move } from \"../../modules/dragAndDrop.strategy\";\n\nimport { Divider, Typography } from \"@material-ui/core\";\n\nimport HeaderMargins from \"../HeaderMargins/HeaderMargins\";\nimport DndPage from \"../DndPage/DndPage\";\nimport DndLeftSide from \"../DndLeftSide/DndLeftSide\";\nimport DndRightSide from \"../DndRightSide/DndRightSide\";\nimport DndCard from \"../DndCard/DndCard\";\nimport DndEditModal from \"../DndEditModal/DndEditModal\";\nimport DndList from \"../DndList/DndList\";\nimport DndAddButton from \"../DndAddButton/DndAddButton\";\n\nimport { toast } from \"react-toastify\";\n\nclass ViewScheduling extends Component {\n  state = {\n    unassigned: [],\n    traps: [\n      {\n        name: \"\",\n        id: 0,\n        schedule: []\n      }\n    ]\n  };\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData = () => {\n    axios({\n      method: \"GET\",\n      url: `/api/competition/scheduling/`\n    })\n      .then(response => {\n        this.setState({ ...response.data });\n        return response;\n      })\n      .catch(error => {\n        alert(\n          \"Something went wrong getting the scheduling data from the server.\"\n        );\n        console.log(error);\n      });\n  };\n\n  sendData = () => {\n    axios({\n      method: \"PUT\",\n      url: `/api/competition/scheduling/`,\n      data: this.state\n    }).then(() => {\n      toast(\"Scheduling saved\");\n      this.getData();\n    });\n  };\n\n  getList = id => {\n    if (id === \"unassigned\") {\n      return this.state.unassigned;\n    } else {\n      return this.state.traps[Number(id)].schedule;\n    }\n  };\n\n  onDragEnd = result => {\n    const { source, destination } = result;\n\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n\n    // dropped on the same table\n    if (source.droppableId === destination.droppableId) {\n      const newItems = reorder(\n        this.getList(source.droppableId),\n        source.index,\n        destination.index\n      );\n\n      if (source.droppableId === \"unassigned\") {\n        this.setState({\n          unassigned: newItems\n        });\n      } else {\n        this.setState({\n          traps: [\n            ...this.state.traps.slice(0, Number(source.droppableId)),\n            {\n              ...this.state.traps[source.droppableId],\n              schedule: newItems\n            },\n            ...this.state.traps.slice(Number(source.droppableId) + 1)\n          ]\n        });\n      }\n    } else {\n      // if they are two different lists\n      const result = move(\n        this.getList(source.droppableId),\n        this.getList(destination.droppableId),\n        source,\n        destination\n      );\n\n      if (source.droppableId === \"unassigned\") {\n        this.setState({\n          unassigned: result.source\n        });\n      } else {\n        this.setState({\n          traps: [\n            ...this.state.traps.slice(0, Number(source.droppableId)),\n            {\n              ...this.state.traps[source.droppableId],\n              schedule: result.source\n            },\n            ...this.state.traps.slice(Number(source.droppableId) + 1)\n          ]\n        });\n      }\n      if (destination.droppableId === \"unassigned\") {\n        this.setState({\n          unassigned: result.destination\n        });\n      } else {\n        this.setState({\n          traps: [\n            ...this.state.traps.slice(0, Number(destination.droppableId)),\n            {\n              ...this.state.traps[destination.droppableId],\n              schedule: result.destination\n            },\n            ...this.state.traps.slice(Number(destination.droppableId) + 1)\n          ]\n        });\n      }\n    }\n    this.sendData();\n  };\n\n  addTrap = () => {\n    axios({\n      method: \"POST\",\n      url: `/api/competition/trap/new/`\n    }).then(() => {\n      this.getData();\n    });\n    toast(\"New trap created!\");\n  };\n\n  editTrap = (trapId, newName) => {\n    axios({\n      method: \"PUT\",\n      url: `/api/competition/edit/trap/${trapId}`,\n      data: { name: newName }\n    }).then(() => {\n      this.getData();\n    });\n    toast(\"Trap name updated!\");\n  };\n\n  deleteTrap = trapId => {\n    axios({\n      method: \"DELETE\",\n      url: `/api/competition/trap/${trapId}`\n    }).then(() => {\n      this.getData();\n    });\n    toast(\"Trap deleted.\");\n  };\n\n  render() {\n    return (\n      <>\n        <DndPage>\n          <DragDropContext onDragEnd={this.onDragEnd}>\n            <DndLeftSide>\n              <HeaderMargins>\n                <Typography variant=\"h4\">Unscheduled</Typography>\n              </HeaderMargins>\n              <Divider />\n              <DndList\n                subheader=\"Box number / Squad name\"\n                box\n                droppableId=\"unassigned\"\n                data={this.state.unassigned.map(item => {\n                  item.mainText = item.name;\n                  item.avatar = item.box_number;\n                  return item;\n                })}\n              />\n            </DndLeftSide>\n            <DndRightSide>\n              {this.state.traps.length > 0 &&\n                this.state.traps.map((trap, index) => {\n                  return (\n                    <DndCard\n                      key={trap.id}\n                      title={trap.name}\n                      cornerButton={\n                        <DndEditModal\n                          id={trap.id}\n                          field={trap.name}\n                          edit={this.editTrap}\n                          delete={this.deleteTrap}\n                        />\n                      }\n                    >\n                      <DndList\n                        box\n                        // disableGutters\n                        droppableId={index.toString()}\n                        data={trap.schedule.map(item => {\n                          item.mainText = item.name;\n                          // item.secondaryText = item.box_number;\n                          item.avatar = item.box_number;\n                          return item;\n                        })}\n                      />\n                    </DndCard>\n                  );\n                })}\n            </DndRightSide>\n          </DragDropContext>\n          <DndAddButton onClick={this.addTrap} />\n        </DndPage>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps)(ViewScheduling);\n","import React from \"react\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport { \n  ListItem, \n  ListItemText \n} from \"@material-ui/core/\";\n\nimport { Typography } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  score: {\n    height: \"70%\",\n    width: \"16vw\",\n    lineHeight: \"9vw\",\n    fontSize: \"7vw\",\n    textAlign: \"left\"\n  },\n  buttons: {\n    height: \"80%\",\n    width: \"16vw\",\n    lineHeight: \"13vw\",\n    fontSize: \"10vw\",\n    maxWidth: \"20vw\"\n  },\n  shooter: {\n    fontSize: \"7vw\",\n    marginLeft: \"7%\",\n    fontFamily: \"Roboto, sans-serif\",\n    maxWidth: \"35vw\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipses\"\n  }\n});\n\nconst ScoringItem = props => {\n  const { classes } = props;\n\n  return (\n    <ListItem>\n      <ListItemText disableTypography className={classes.shooter}>\n        {props.shooter.first_name}\n      </ListItemText>\n      <Typography className={classes.score}>\n        {props.shooter.shots.reduce((sumOfShots, currentShot) => {\n          return sumOfShots + currentShot;\n        }, 0)}\n        /\n        {props.shooter.shots.reduce((sumOfShots, currentShot) => {\n          if (currentShot === null) {\n            return sumOfShots;\n          } else {\n            return sumOfShots + 1;\n          }\n        }, 0)}\n      </Typography>\n      <ToggleButtonGroup\n        value={props.shooter.shots[props.round - 1]}\n        exclusive\n        selected\n        onChange={(event, value) => {\n          props.setScore(props.index, props.round, value);\n        }}\n      >\n        <ToggleButton className={classes.buttons} value={1}>\n          /\n        </ToggleButton>\n        <ToggleButton className={classes.buttons} value={0}>\n          O\n        </ToggleButton>\n      </ToggleButtonGroup>\n    </ListItem>\n  );\n};\n\nexport default withStyles(styles)(ScoringItem);\n","import React from \"react\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core/\";\n\nconst styles = theme => ({\n  spacer: {\n    width: \"100%\",\n    height: theme.spacing.unit * 5\n  },\n  centerButtonFixed: {\n    position: \"fixed\",\n    left: \"50%\",\n    bottom: theme.spacing.unit * 2,\n    transform: `translate(-50%, 0%)`,\n    width: \"85%\"\n  },\n  centerButtonRelative: {\n    position: \"relative\",\n    left: \"50%\",\n    bottom: theme.spacing.unit * 2,\n    transform: `translate(-50%, 0%)`,\n    width: \"85%\"\n  }\n});\n\nconst ScoringAdvanceButton = props => {\n  const { classes } = props;\n  const shotsThisRound = props.shooters.reduce((sum, current) => {\n    if (current.shots[props.currentRound - 1] === null) {\n      return sum;\n    } else {\n      return sum + 1;\n    }\n  }, 0);\n  const shotsThisRotation = props.shooters.reduce((sum, current) => {\n    return (\n      sum +\n      current.shots.reduce((shotsSum, currentShot) => {\n        if (currentShot === null) {\n          return shotsSum;\n        } else {\n          return shotsSum + 1;\n        }\n      }, 0)\n    );\n  }, 0);\n\n  return (\n    <>\n      {props.currentRound < 5 ? (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          className={classes.centerButtonFixed}\n          disabled={shotsThisRound < props.shooters.length}\n          onClick={props.nextRound}\n        >\n          Next Round\n        </Button>\n      ) : (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          className={classes.centerButtonFixed}\n          disabled={shotsThisRotation < props.shooters.length * 5}\n          onClick={props.nextRound}\n        >\n          Submit Scores\n        </Button>\n      )}\n    </>\n  );\n};\n\nexport default withStyles(styles)(ScoringAdvanceButton);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { USER_ACTIONS } from '../../redux/actions/userActions';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { \n  List, \n  Typography, \n  Divider \n} from '@material-ui/core/';\n\nimport { \n  ToggleButton, \n  ToggleButtonGroup \n} from '@material-ui/lab/';\n\nimport { toast } from 'react-toastify';\n\nimport ScoringItem from '../ScoringItem/ScoringItem';\nimport ScoringAdvanceButton from '../ScoringAdvanceButton/ScoringAdvanceButton';\n\n\n\nconst styles = theme => ({\n  toggleContainer: {\n    display: \"flex\",\n    overflow: \"hidden\",\n    backfaceVisibility: \"hidden\",\n    flexDirection: \"row\",\n    margin: \"0\",\n    width: \"100vw\",\n    border: 0,\n    borderRadius: 2\n  },\n  bigContainer: {\n    maxWidth: 2000,\n    maxHeight: 500\n  },\n  buttons: {\n    height: '60%',\n    width: '20vw',\n    lineHeight: '4vw',\n    fontSize: '4vw',\n    alignItems: 'right',\n    display: 'flex'\n  },\n  headers: {\n    paddingBottom: '5%'\n  },\n  headersTwo: {\n    paddingTop: '5%',\n    fontSize: '8vw'\n  },\n  dividerOne: {\n    marginTop: 5\n  },\n  dividerTwo: {\n    marginTop: 5\n  }\n});\n\nclass Scoring extends Component {\n  state = {\n    page: 0,\n    selectedRound: 1,\n    ToggleButton: false,\n    NextRoundButton: false\n  };\n  // Dispatches to currentRound reducer and selectedTrap saga with value of whichever button is hit [1-5].\n  selectRound = (event, value) => {\n    this.props.dispatch({\n      type: USER_ACTIONS.SET_CURRENT_ROUND,\n      payload: value\n    });\n  };\n  // For conditional rendering of the submit scores button. Dispatches to submitScores saga at round 5 with selectedTrap ID.\n  nextRound = () => {\n    if (this.props.currentRound < 5) {\n      this.props.dispatch({\n        type: USER_ACTIONS.SET_CURRENT_ROUND,\n        payload: this.props.currentRound + 1\n      });\n    } else {\n      toast(\"Scores Submitted, Posts Rotating\", {\n        position: toast.POSITION.TOP_CENTER\n      });\n      this.props.dispatch({\n        type: USER_ACTIONS.SUBMIT_SCORES,\n        payload: this.props.selectedTrap\n      });\n    }\n  };\n  // Dispatches everytime a hit or miss button is clicked, with a payload of the hit or miss, the index, and specific round.\n  setScore = (index, round, value) => {\n    this.props.dispatch({\n      type: USER_ACTIONS.SET_SHOT,\n      payload: {\n        index: index,\n        round: round,\n        score: value,\n      }\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.bigContainer}>\n        <Typography align=\"center\" variant=\"h6\">\n          Rotation: {this.props.selectedTrap.squad_trap.current_rotation}\n        </Typography>\n        <Divider className={classes.dividerTwo} />\n        <Typography className={classes.headers} align=\"center\" variant=\"h4\">\n          Rounds\n        </Typography>\n        <ToggleButtonGroup\n          value={this.props.currentRound}\n          exclusive\n          onChange={this.selectRound}\n          className={classes.toggleContainer}\n        >\n          <ToggleButton className={classes.buttons} value={1}>\n            1\n          </ToggleButton>\n          <ToggleButton className={classes.buttons} value={2}>\n            2\n          </ToggleButton>\n          <ToggleButton className={classes.buttons} value={3}>\n            3\n          </ToggleButton>\n          <ToggleButton className={classes.buttons} value={4}>\n            4\n          </ToggleButton>\n          <ToggleButton className={classes.buttons} value={5}>\n            5\n          </ToggleButton>\n        </ToggleButtonGroup>\n        <Typography align=\"center\" className={classes.headersTwo} variant=\"h5\">\n          {\" \"}\n          Shooters\n        </Typography>\n        <Divider className={classes.dividerOne} />\n        <List>\n          {this.props.selectedTrap.shooters.length > 2 &&\n            this.props.selectedTrap.shooters.map((shooter, index) => {\n              return (\n                <ScoringItem\n                  key={shooter.shooter_id}\n                  shooter={shooter}\n                  round={this.props.currentRound}\n                  index={index}\n                  setScore={this.setScore}\n                />\n              );\n            })}\n        </List>\n        <ScoringAdvanceButton\n          shooters={this.props.selectedTrap.shooters}\n          currentRound={this.props.currentRound}\n          nextRound={this.nextRound}\n        />\n      </div>\n    );\n  }\n}\n\nScoring.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = reduxState => ({\n  currentRound: reduxState.currentRound,\n  selectedTrap: reduxState.selectedTrap,\n  squads: reduxState.squaddingData\n});\n\nconst Scores = withStyles(styles)(Scoring);\n\nexport default connect(mapStateToProps)(Scores);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { USER_ACTIONS } from \"../../redux/actions/userActions\";\n\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport {\n  Button,\n  Select,\n  MenuItem,\n  Typography,\n  ListItem\n} from \"@material-ui/core/\";\n\nimport { scoringRoute } from \"../../navigationRoutes\";\n\nimport { toast } from \"react-toastify\";\n\nconst styles = theme => ({\n  selectBox: {\n    width: \"100%\",\n    paddingTop: \"20vw\",\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    height: \"40%\"\n  },\n  centerButtonFixed: {\n    position: \"fixed\",\n    left: \"50%\",\n    bottom: theme.spacing.unit * 2,\n    transform: `translate(-50%, 0%)`,\n    width: \"85%\"\n  },\n  header: {\n    textAlign: \"center\"\n  },\n  headerFour: {\n    paddingTop: \"10vw\",\n    textAlign: \"center\"\n  }\n});\n\nclass TrapSelection extends Component {\n  state = {\n    // Value for dropdown selection\n    value: \"\",\n    // Conditional Rendering Variable\n    isVisible: false,\n    trap: \"\",\n    counter: 0\n  };\n  \n  // Get available Traps\n  componentDidMount() {\n    this.props.dispatch({ type: USER_ACTIONS.FETCH_TRAPS });\n  }\n  // Handlechange for dropdown menu, sets state to selected trap.\n  handleChangeFor = propertyName => event => {\n    toast(\"Trap Selected\");\n    this.setState({\n      ...this.state,\n      [propertyName]: event.target.value,\n      counter: 0\n    });\n  };\n  // Conditional Rendering function\n  // Dispatch action with payload of selected trap ID to selectedTrap saga\n  handleSubmit = event => {\n    this.props.dispatch({\n      type: USER_ACTIONS.FETCH_SELECTED_TRAP,\n      payload: this.state.trap\n    });\n    event.preventDefault();\n    this.setState({\n      ...this.state,\n      isVisible: !this.state.isVisible,\n      trap: \"\"\n    });\n  };\n\n  render() {\n    // Conditonal Rendering if statement\n    let displayItem;\n    if (this.state.isVisible) {\n      displayItem = this.props.history.push(scoringRoute);\n    }\n    const { classes } = this.props;\n    return (\n      <div>\n        <Typography className={classes.header} variant=\"h4\">\n          Select A Trap\n        </Typography>\n        <Typography className={classes.headerFour} variant=\"h6\">\n          Click below to select a trap.\n        </Typography>\n        <form onSubmit={this.handleSubmit}>\n          <ListItem>\n            <>\n              <Select\n                className={classes.selectBox}\n                value={this.state.trap}\n                onChange={this.handleChangeFor(\"trap\")}\n              >\n                {this.props.traps.map(trap => {\n                  return (\n                    <MenuItem key={trap.id} value={trap.id}>\n                      {trap.name}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </>\n          </ListItem>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            name=\"submit\"\n            value=\"Register\"\n            className={classes.centerButtonFixed}\n          >\n            Confirm\n          </Button>\n          {displayItem}\n        </form>\n      </div>\n    );\n  }\n}\n\nTrapSelection.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = reduxState => ({\n  reduxState,\n  traps: reduxState.traps,\n  user: reduxState.user\n});\n\nconst Traps = withStyles(styles)(TrapSelection);\n\nexport default connect(mapStateToProps)(Traps);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport {\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  Button,\n  Card,\n  Checkbox,\n  TextField\n} from \"@material-ui/core/\";\n\nimport { toast } from \"react-toastify\";\n\nconst styles = theme => ({\n  registerCard: {\n    fontFamily: \"Roboto, sans-serif\",\n    paddingBottom: \"3%\",\n    paddingTop: \"3%\",\n    position: \"relative\",\n    zIndex: 1,\n    display: \"flex\",\n    overflow: \"hidden\",\n    backfaceVisibility: \"hidden\",\n    flexDirection: \"column\",\n    margin: \"0 auto\",\n    maxWidth: 530,\n    border: 0,\n    borderRadius: 2,\n    marginTop: \"2%\",\n    listStyle: \"none\"\n  },\n\n  eventList: {\n    listStyle: \"none\",\n    textAlign: \"left\",\n    verticalAlign: \"top\"\n  },\n\n  header: {\n    marginTop: \"10%\"\n  }\n});\n\nclass ViewShooterRegistration extends Component {\n  state = {\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    phone: \"\",\n    handicap: \"\",\n    ata_number: \"\",\n    competition: {\n      events: []\n    }\n  };\n\n  componentDidMount() {\n    this.tryToGetCompetition();\n  }\n\n  tryToGetCompetition = () => {\n    let toTry = {\n      id: this.props.match.params.id,\n      hash: this.props.match.params.hash\n    };\n    axios({\n      method: \"GET\",\n      url: `/api/registration/${toTry.id}&${toTry.hash}`\n    }).then(response => {\n      this.setState({ competition: response.data });\n    });\n  };\n\n  registerShooter = event => {\n    event.preventDefault();\n    const body = this.state;\n    let toTry = {\n      id: this.props.match.params.id,\n      hash: this.props.match.params.hash\n    };\n    //handicaps can only have a value between 16-27\n    if (this.state.handicap < 16 || this.state.handicap > 27) {\n      alert(\"You must choose a number between 16 and 27\");\n      return false;\n    }\n    //Phone numbers must be entered without dashes\n    if (this.state.phone.includes('-')) {\n      alert('Enter a phone number without dashes');\n    }\n\n    axios({\n      method: \"POST\",\n      url: `/api/registration/${toTry.id}&${toTry.hash}`,\n      data: body\n    })\n      .then(response => {\n        this.setState({\n          first_name: \"\",\n          last_name: \"\",\n          email: \"\",\n          phone: \"\",\n          handicap: \"\",\n          ata_number: \"\",\n          competition: {\n            events: []\n          }\n        });\n        this.tryToGetCompetition();\n      })\n      .catch(error => {\n        console.log(\"Error submitting registration:\", error);\n        alert(\"Please fill out all fields and try again.\");\n      });\n    toast(\"Shooter Registered\");\n  };\n\n  handleChangeFor = propertyName => event => {\n    this.setState({\n      ...this.state,\n      [propertyName]: event.target.value\n    });\n  };\n\n  handleChangeCheckBox = (event, checked) => {\n    //event.target.value is the event ID\n    //find the index in this.state.eventsList from the eventID\n    let indexOfCheckedItem = this.state.competition.events.findIndex(\n      item => item.id === parseInt(event.target.value)\n    );\n    this.setState({\n      ...this.state,\n      competition: {\n        ...this.state.competition,\n        events: [\n          ...this.state.competition.events.slice(0, indexOfCheckedItem),\n          {\n            ...this.state.competition.events[indexOfCheckedItem],\n            checked: checked\n          },\n          ...this.state.competition.events.slice(indexOfCheckedItem + 1)\n        ]\n      }\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      /* A new shooter will enter in their information and be saved to database.\n      Phone number must be in 1231231234 format, without dashes between. Handicap\n      is a shooter's skill level and will be needed to squad with shooters of\n      similar skill. ATA# comes from the Amateur Trapshooting Association, a 7\n      digit number can be entered. Check the competition's events to participate\n        */\n      <div>\n        <Card className={classes.registerCard}>\n          <center>\n            <form onSubmit={this.registerShooter}>\n              <h1>Shooter Registration</h1>\n              <div>\n                <TextField\n                  label=\"First Name\"\n                  type=\"text\"\n                  name=\"first_name\"\n                  value={this.state.first_name}\n                  onChange={this.handleChangeFor(\"first_name\")}\n                />\n              </div>\n              <div>\n                <TextField\n                  label=\"Last Name\"\n                  type=\"text\"\n                  name=\"last_name\"\n                  value={this.state.last_name}\n                  onChange={this.handleChangeFor(\"last_name\")}\n                />\n              </div>\n              <div>\n                <TextField\n                  label=\"Email\"\n                  type=\"text\"\n                  name=\"email\"\n                  value={this.state.email}\n                  onChange={this.handleChangeFor(\"email\")}\n                />\n              </div>\n              <div>\n                <TextField\n                  label=\"Phone Number\"\n                  placeholder=\"1234567890\"\n                  type=\"text\"\n                  name=\"phone\"\n                  value={this.state.phone}\n                  onChange={this.handleChangeFor(\"phone\")}\n                />\n              </div>\n              <div>\n                <TextField\n                  label=\"Handicap\"\n                  type=\"text\"\n                  name=\"handicap\"\n                  min=\"16\"\n                  max=\"27\"\n                  value={this.state.handicap}\n                  onChange={this.handleChangeFor(\"handicap\")}\n                />\n              </div>\n              <div>\n                <TextField\n                  label=\"ATA #\"\n                  type=\"text\"\n                  name=\"ata_number\"\n                  value={this.state.ata_number}\n                  onChange={this.handleChangeFor(\"ata_number\")}\n                />\n              </div>\n              <div className={classes.header}>\n                <h2 className={classes.header}>Available Events</h2>\n              </div>\n              <div>\n                {this.state.competition.events.map(ev => {\n                  return (\n                    <List className={classes.eventList} key={ev.id}>\n                      <ListItem>\n                        {ev.name}\n                        <ListItemSecondaryAction>\n                          <Checkbox\n                            value={ev.id}\n                            onChange={this.handleChangeCheckBox}\n                          />\n                        </ListItemSecondaryAction>\n                      </ListItem>\n                    </List>\n                  );\n                })}\n              </div>\n              <div>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  type=\"submit\"\n                  name=\"submit\"\n                  value=\"Register\"\n                >\n                  Register\n                </Button>\n              </div>\n            </form>\n          </center>\n        </Card>\n      </div>\n    );\n  }\n}\n\nViewShooterRegistration.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ViewShooterRegistration);\n","import React, { Component } from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\nimport { connect } from 'react-redux';\n\nimport { ToastContainer, toast, Slide } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\n\nimport { LOGIN_ACTIONS } from '../../redux/actions/loginActions';\n\n//TrapScore Routes\nimport Nav from '../Nav/Nav';\nimport ViewAdminSelectCompetition from '../ViewAdminSelectCompetition/ViewAdminSelectCompetition';\nimport ViewAdminEditCompetition from '../ViewAdminEditCompetition/ViewAdminEditCompetition';\nimport ViewCompetitionRoster from '../ViewCompetitionRoster/ViewCompetitionRoster';\nimport ViewResults from '../ViewResults/ViewResults';\nimport ViewSquadding from '../ViewSquadding/ViewSquadding';\nimport ViewScheduling from '../ViewScheduling/ViewScheduling';\nimport Scoring from '../ViewScoring/ViewScoring';\nimport TrapSelection from '../ViewTrapSelection/TrapSelection';\nimport ViewShooterRegistration from '../ViewShooterRegistration/ViewShooterRegistration';\n\n// Nav Routes\nimport {\n  selectCompetitionRoute,\n  editCompetitionRoute,\n  rosterRoute,\n  squaddingRoute,\n  schedulingRoute,\n  selectTrapRoute,\n  scoringRoute,\n  resultsRoute\n} from '../../navigationRoutes';\n\n// Material-UI\nimport {\n  CssBaseline,\n  createMuiTheme,\n  MuiThemeProvider\n} from '@material-ui/core';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: '#800000',},\n    secondary: { main: '#171769',}\n  },\n  typography: {\n    useNextVariants: true,\n  }\n});\n\nconst styles = {\n  darkToast: {\n    backgroundColor: \"rgba(30,30,30,.9)\",\n    color: \"white\",\n    textAlign: \"center\",\n    fontFamily: \"Roboto, sans-serif\"\n  }\n}\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.dispatch({ type: LOGIN_ACTIONS.FETCH_USER });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Router>\n        <div>\n          <MuiThemeProvider theme={theme}>\n            <CssBaseline />\n            <Nav />\n            <Switch>\n              {/* Visiting localhost:3000 will redirect to localhost:3000/home */}\n              <Redirect exact from=\"/\" to={rosterRoute} />\n              {/* TrapScore Routes */}\n              <ProtectedRoute\n                exact\n                path={selectCompetitionRoute}\n                component={ViewAdminSelectCompetition}\n              />\n              <ProtectedRoute\n                exact\n                path={editCompetitionRoute}\n                component={ViewAdminEditCompetition}\n              />\n              <ProtectedRoute\n                exact\n                path={rosterRoute}\n                component={ViewCompetitionRoster}\n              />\n              <ProtectedRoute\n                exact\n                path={resultsRoute}\n                component={ViewResults}\n              />\n              <ProtectedRoute\n                exact\n                path={squaddingRoute}\n                component={ViewSquadding}\n              />\n              <ProtectedRoute\n                exact\n                path={schedulingRoute}\n                component={ViewScheduling}\n              />\n              <ProtectedRoute\n                exact\n                path={selectTrapRoute}\n                component={TrapSelection}\n              />\n              <ProtectedRoute exact path={scoringRoute} component={Scoring} />\n              <Route\n                path={'/registration/:id&:hash'}\n                component={ViewShooterRegistration}\n              />\n              {/* For protected routes, the view could show one of several things on the same route.\n\n            Visiting localhost:3000/home will show the UserPage if the user is logged in.\n            If the user is not logged in, the ProtectedRoute will show the 'Login' or 'Register' page.\n            Even though it seems like they are different pages, the user is always on localhost:3000/home */}\n              {/* <ProtectedRoute exact path=\"/home\" component={UserPage} /> */}\n              {/* This works the same as the other protected route, except that if the user is logged in,\n            they will see the info page instead. */}\n              {/* If none of the other routes matched, we will show a 404. */}\n              <Route render={() => <h1>404</h1>} />\n            </Switch>\n          </MuiThemeProvider>\n          <ToastContainer\n            position={toast.POSITION.TOP_RIGHT}\n            toastClassName={classes.darkToast}\n            transition={Slide}\n            autoClose={3000}\n            hideProgressBar\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnVisibilityChange\n            draggable\n            pauseOnHover />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default withStyles(styles)(connect()(App));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootReducer from './redux/reducers'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\n// works with redux devtools chrome extension to display store data and actions in chrome dev tools\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  composeEnhancers(\n    // adds all middleware to our project including saga and logger\n    applyMiddleware(...middlewareList)\n  )\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"],"sourceRoot":""}